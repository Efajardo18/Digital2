

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 15:52:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  001E                     _ADRESH	set	30
   211  000C                     _PIR1bits	set	12
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  001F                     _ADCON0	set	31
   216  000B                     _INTCON	set	11
   217  0008                     _PORTD	set	8
   218  0013                     _SSPBUF	set	19
   219  0014                     _SSPCON	set	20
   220  001F                     _ADCON0bits	set	31
   221  0063                     _SSPIF	set	99
   222  009F                     _ADCON1	set	159
   223  008C                     _PIE1	set	140
   224  0088                     _TRISD	set	136
   225  0087                     _TRISC	set	135
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  0094                     _SSPSTATbits	set	148
   229  0094                     _SSPSTAT	set	148
   230  043B                     _TRISC3	set	1083
   231  043D                     _TRISC5	set	1085
   232  0189                     _ANSELH	set	393
   233  0188                     _ANSEL	set	392
   234                           
   235                           	psect	cinit
   236  000F                     start_initialization:	
   237                           ; #config settings
   238                           
   239  000F                     __initialization:
   240                           
   241                           ; Clear objects allocated to COMMON
   242  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   243  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   244  0011                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  0011                     __end_of__initialization:
   248  0011  0183               	clrf	3
   249  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  0078                     __pbssCOMMON:
   253  0078                     _datu:
   254  0078                     	ds	1
   255  0079                     _VADC:
   256  0079                     	ds	1
   257                           
   258                           	psect	cstackCOMMON
   259  0070                     __pcstackCOMMON:
   260  0070                     ?_setup:
   261  0070                     ?_GOCHK:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_spiReceiveWait:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_spiReceiveWait:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_spiWrite:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_spiWrite:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_spiRead:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_spiRead:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_ISR:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     spiWrite@dat:	
   289                           ; 1 bytes @ 0x0
   290                           
   291                           
   292                           ; 1 bytes @ 0x0
   293  0070                     	ds	1
   294  0071                     ??_ISR:
   295                           
   296                           ; 1 bytes @ 0x1
   297  0071                     	ds	3
   298  0074                     ??_setup:
   299  0074                     ??_GOCHK:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ?_spiInit:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     spiInit@sDataSample:	
   306                           ; 1 bytes @ 0x4
   307                           
   308                           
   309                           ; 1 bytes @ 0x4
   310  0074                     	ds	1
   311  0075                     spiInit@sClockIdle:
   312                           
   313                           ; 1 bytes @ 0x5
   314  0075                     	ds	1
   315  0076                     spiInit@sTransmitEdge:
   316                           
   317                           ; 1 bytes @ 0x6
   318  0076                     	ds	1
   319  0077                     ??_spiInit:
   320  0077                     spiInit@sType:	
   321                           ; 1 bytes @ 0x7
   322                           
   323                           
   324                           ; 1 bytes @ 0x7
   325  0077                     	ds	1
   326                           
   327                           	psect	cstackBANK0
   328  0020                     __pcstackBANK0:
   329  0020                     ??_main:
   330                           
   331                           ; 1 bytes @ 0x0
   332  0020                     	ds	2
   333                           
   334                           	psect	maintext
   335  0015                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 43 in file "Slave3.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0
   357 ;;      Temps:          0       2       0       0       0
   358 ;;      Totals:         0       2       0       0       0
   359 ;;Total ram usage:        2 bytes
   360 ;; Hardware stack levels required when called:    4
   361 ;; This function calls:
   362 ;;		_GOCHK
   363 ;;		_setup
   364 ;;		_spiInit
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function _main
   372  0015                     _main:
   373  0015                     l796:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   376                           
   377                           
   378                           ;Slave3.c: 44:     setup();
   379  0015  120A  118A  2076  120A  118A  	fcall	_setup
   380                           
   381                           ;Slave3.c: 45:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   382  001A  01F4               	clrf	spiInit@sDataSample
   383  001B  01F5               	clrf	spiInit@sClockIdle
   384  001C  01F6               	clrf	spiInit@sTransmitEdge
   385  001D  3024               	movlw	36
   386  001E  120A  118A  2097  120A  118A  	fcall	_spiInit
   387  0023                     l798:
   388                           
   389                           ;Slave3.c: 47:         _delay((unsigned long)((10)*(8000000/4000.0)));
   390  0023  301A               	movlw	26
   391  0024  1283               	bcf	3,5	;RP0=0, select bank0
   392  0025  1303               	bcf	3,6	;RP1=0, select bank0
   393  0026  00A1               	movwf	??_main+1
   394  0027  30F7               	movlw	247
   395  0028  00A0               	movwf	??_main
   396  0029                     u137:
   397  0029  0BA0               	decfsz	??_main,f
   398  002A  2829               	goto	u137
   399  002B  0BA1               	decfsz	??_main+1,f
   400  002C  2829               	goto	u137
   401  002D  282E               	nop2
   402                           
   403                           ;Slave3.c: 48:         GOCHK();
   404  002E  120A  118A  20B6  120A  118A  	fcall	_GOCHK
   405  0033                     l800:
   406                           
   407                           ;Slave3.c: 49:         if(VADC>=33){
   408  0033  3021               	movlw	33
   409  0034  0279               	subwf	_VADC,w
   410  0035  1C03               	skipc
   411  0036  2838               	goto	u111
   412  0037  2839               	goto	u110
   413  0038                     u111:
   414  0038  283E               	goto	l804
   415  0039                     u110:
   416  0039                     l802:
   417                           
   418                           ;Slave3.c: 50:             PORTD=0b00000100;
   419  0039  3004               	movlw	4
   420  003A  1283               	bcf	3,5	;RP0=0, select bank0
   421  003B  1303               	bcf	3,6	;RP1=0, select bank0
   422  003C  0088               	movwf	8	;volatile
   423                           
   424                           ;Slave3.c: 51:         }
   425  003D  2823               	goto	l798
   426  003E                     l804:
   427  003E  3010               	movlw	16
   428  003F  0279               	subwf	_VADC,w
   429  0040  1C03               	skipc
   430  0041  2843               	goto	u121
   431  0042  2844               	goto	u120
   432  0043                     u121:
   433  0043  2849               	goto	l808
   434  0044                     u120:
   435  0044                     l806:
   436                           
   437                           ;Slave3.c: 53:             PORTD=0b00000010;
   438  0044  3002               	movlw	2
   439  0045  1283               	bcf	3,5	;RP0=0, select bank0
   440  0046  1303               	bcf	3,6	;RP1=0, select bank0
   441  0047  0088               	movwf	8	;volatile
   442                           
   443                           ;Slave3.c: 54:         }
   444  0048  2823               	goto	l798
   445  0049                     l808:
   446                           
   447                           ;Slave3.c: 56:             PORTD=0b00000001;
   448  0049  3001               	movlw	1
   449  004A  1283               	bcf	3,5	;RP0=0, select bank0
   450  004B  1303               	bcf	3,6	;RP1=0, select bank0
   451  004C  0088               	movwf	8	;volatile
   452  004D  2823               	goto	l798
   453  004E  120A  118A  280C   	ljmp	start
   454  0051                     __end_of_main:
   455                           
   456                           	psect	text1
   457  0097                     __ptext1:	
   458 ;; *************** function _spiInit *****************
   459 ;; Defined at:
   460 ;;		line 49 in file "./spi.h"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  sType           1    wreg     enum E1350
   463 ;;  sDataSample     1    4[COMMON] enum E1358
   464 ;;  sClockIdle      1    5[COMMON] enum E1362
   465 ;;  sTransmitEdg    1    6[COMMON] enum E1366
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  sType           1    7[COMMON] enum E1350
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         3       0       0       0       0
   478 ;;      Locals:         1       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         4       0       0       0       0
   481 ;;Total ram usage:        4 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    3
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _spiInit
   493  0097                     _spiInit:
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   497                           ;spiInit@sType stored from wreg
   498  0097  00F7               	movwf	spiInit@sType
   499  0098                     l772:
   500                           
   501                           ;./spi.h: 49: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);./spi.h: 50: {;./spi.h: 51:     TRISC5 = 0;
   502  0098  1683               	bsf	3,5	;RP0=1, select bank1
   503  0099  1303               	bcf	3,6	;RP1=0, select bank1
   504  009A  1287               	bcf	7,5	;volatile
   505                           
   506                           ;./spi.h: 52:     if(sType & 0b00000100)
   507  009B  1D77               	btfss	spiInit@sType,2
   508  009C  289E               	goto	u81
   509  009D  289F               	goto	u80
   510  009E                     u81:
   511  009E  28A3               	goto	l778
   512  009F                     u80:
   513  009F                     l774:
   514                           
   515                           ;./spi.h: 53:     {;./spi.h: 54:         SSPSTAT = sTransmitEdge;
   516  009F  0876               	movf	spiInit@sTransmitEdge,w
   517  00A0  0094               	movwf	20	;volatile
   518  00A1                     l776:
   519                           
   520                           ;./spi.h: 55:         TRISC3 = 1;
   521  00A1  1587               	bsf	7,3	;volatile
   522                           
   523                           ;./spi.h: 56:     }
   524  00A2  28A7               	goto	l60
   525  00A3                     l778:
   526                           
   527                           ;./spi.h: 58:     {;./spi.h: 59:         SSPSTAT = sDataSample | sTransmitEdge;
   528  00A3  0874               	movf	spiInit@sDataSample,w
   529  00A4  0476               	iorwf	spiInit@sTransmitEdge,w
   530  00A5  0094               	movwf	20	;volatile
   531  00A6                     l780:
   532                           
   533                           ;./spi.h: 60:         TRISC3 = 0;
   534  00A6  1187               	bcf	7,3	;volatile
   535  00A7                     l60:	
   536                           ;./spi.h: 61:     }
   537                           
   538                           
   539                           ;./spi.h: 63:     SSPCON = sType | sClockIdle;
   540  00A7  0877               	movf	spiInit@sType,w
   541  00A8  0475               	iorwf	spiInit@sClockIdle,w
   542  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   543  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   544  00AB  0094               	movwf	20	;volatile
   545  00AC                     l61:
   546  00AC  0008               	return
   547  00AD                     __end_of_spiInit:
   548                           
   549                           	psect	text2
   550  0076                     __ptext2:	
   551 ;; *************** function _setup *****************
   552 ;; Defined at:
   553 ;;		line 62 in file "Slave3.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    3
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _setup
   583  0076                     _setup:
   584  0076                     l720:	
   585                           ;incstack = 0
   586                           ; Regs used in _setup: [wreg+status,2]
   587                           
   588                           
   589                           ;Slave3.c: 63:     TRISA = 0b00101001;
   590  0076  3029               	movlw	41
   591  0077  1683               	bsf	3,5	;RP0=1, select bank1
   592  0078  1303               	bcf	3,6	;RP1=0, select bank1
   593  0079  0085               	movwf	5	;volatile
   594  007A                     l722:
   595                           
   596                           ;Slave3.c: 64:     TRISB = 0b00000000;
   597  007A  0186               	clrf	6	;volatile
   598  007B                     l724:
   599                           
   600                           ;Slave3.c: 65:     TRISC = 0b00000000;
   601  007B  0187               	clrf	7	;volatile
   602  007C                     l726:
   603                           
   604                           ;Slave3.c: 66:     TRISD = 0b00000000;
   605  007C  0188               	clrf	8	;volatile
   606  007D                     l728:
   607                           
   608                           ;Slave3.c: 67:     ANSEL = 0b00000001;
   609  007D  3001               	movlw	1
   610  007E  1683               	bsf	3,5	;RP0=1, select bank3
   611  007F  1703               	bsf	3,6	;RP1=1, select bank3
   612  0080  0088               	movwf	8	;volatile
   613                           
   614                           ;Slave3.c: 68:     ANSELH = 0b00000000;
   615  0081  0189               	clrf	9	;volatile
   616  0082                     l730:
   617                           
   618                           ;Slave3.c: 69:     INTCON = 0b11000000;
   619  0082  30C0               	movlw	192
   620  0083  008B               	movwf	11	;volatile
   621  0084                     l732:
   622                           
   623                           ;Slave3.c: 70:     PIE1 = 0b01001000;
   624  0084  3048               	movlw	72
   625  0085  1683               	bsf	3,5	;RP0=1, select bank1
   626  0086  1303               	bcf	3,6	;RP1=0, select bank1
   627  0087  008C               	movwf	12	;volatile
   628  0088                     l734:
   629                           
   630                           ;Slave3.c: 71:     ADCON0 = 0b01000001;
   631  0088  3041               	movlw	65
   632  0089  1283               	bcf	3,5	;RP0=0, select bank0
   633  008A  1303               	bcf	3,6	;RP1=0, select bank0
   634  008B  009F               	movwf	31	;volatile
   635  008C                     l736:
   636                           
   637                           ;Slave3.c: 72:     ADCON1 = 0b00010000;
   638  008C  3010               	movlw	16
   639  008D  1683               	bsf	3,5	;RP0=1, select bank1
   640  008E  1303               	bcf	3,6	;RP1=0, select bank1
   641  008F  009F               	movwf	31	;volatile
   642                           
   643                           ;Slave3.c: 73:     PORTA = 0;
   644  0090  1283               	bcf	3,5	;RP0=0, select bank0
   645  0091  1303               	bcf	3,6	;RP1=0, select bank0
   646  0092  0185               	clrf	5	;volatile
   647                           
   648                           ;Slave3.c: 74:     PORTB = 0;
   649  0093  0186               	clrf	6	;volatile
   650                           
   651                           ;Slave3.c: 75:     PORTC = 0;
   652  0094  0187               	clrf	7	;volatile
   653                           
   654                           ;Slave3.c: 76:     PORTD = 0;
   655  0095  0188               	clrf	8	;volatile
   656  0096                     l97:
   657  0096  0008               	return
   658  0097                     __end_of_setup:
   659                           
   660                           	psect	text3
   661  00B6                     __ptext3:	
   662 ;; *************** function _GOCHK *****************
   663 ;; Defined at:
   664 ;;		line 5 in file "./ADClib.h"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		None
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    3
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _GOCHK
   694  00B6                     _GOCHK:
   695  00B6                     l698:	
   696                           ;incstack = 0
   697                           ; Regs used in _GOCHK: []
   698                           
   699                           
   700                           ;./ADClib.h: 6:     if(ADCON0bits.GO==0){
   701  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   702  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   703  00B8  189F               	btfsc	31,1	;volatile
   704  00B9  28BB               	goto	u21
   705  00BA  28BC               	goto	u20
   706  00BB                     u21:
   707  00BB  28BD               	goto	l56
   708  00BC                     u20:
   709  00BC                     l700:
   710                           
   711                           ;./ADClib.h: 7:             ADCON0bits.GO=1;
   712  00BC  149F               	bsf	31,1	;volatile
   713  00BD                     l56:
   714  00BD  0008               	return
   715  00BE                     __end_of_GOCHK:
   716                           
   717                           	psect	text4
   718  0051                     __ptext4:	
   719 ;; *************** function _ISR *****************
   720 ;; Defined at:
   721 ;;		line 80 in file "Slave3.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, pclath, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          3       0       0       0       0
   738 ;;      Totals:         3       0       0       0       0
   739 ;;Total ram usage:        3 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    2
   742 ;; This function calls:
   743 ;;		_spiRead
   744 ;;		_spiWrite
   745 ;; This function is called by:
   746 ;;		Interrupt level 1
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _ISR
   752  0051                     _ISR:
   753  0051                     i1l760:
   754                           
   755                           ;Slave3.c: 81:     if(PIR1bits.ADIF==1){
   756  0051  1283               	bcf	3,5	;RP0=0, select bank0
   757  0052  1303               	bcf	3,6	;RP1=0, select bank0
   758  0053  1F0C               	btfss	12,6	;volatile
   759  0054  2856               	goto	u6_21
   760  0055  2857               	goto	u6_20
   761  0056                     u6_21:
   762  0056  285C               	goto	i1l766
   763  0057                     u6_20:
   764  0057                     i1l762:
   765                           
   766                           ;Slave3.c: 82:         PIR1bits.ADIF=0;
   767  0057  130C               	bcf	12,6	;volatile
   768  0058                     i1l764:
   769                           
   770                           ;Slave3.c: 83:         VADC=ADRESH;
   771  0058  081E               	movf	30,w	;volatile
   772  0059  00F1               	movwf	??_ISR
   773  005A  0871               	movf	??_ISR,w
   774  005B  00F9               	movwf	_VADC
   775  005C                     i1l766:
   776                           
   777                           ;Slave3.c: 85:     if(SSPIF == 1){
   778  005C  1D8C               	btfss	12,3	;volatile
   779  005D  285F               	goto	u7_21
   780  005E  2860               	goto	u7_20
   781  005F                     u7_21:
   782  005F  286F               	goto	i1l104
   783  0060                     u7_20:
   784  0060                     i1l768:
   785                           
   786                           ;Slave3.c: 86:         SSPIF = 0;
   787  0060  118C               	bcf	12,3	;volatile
   788  0061                     i1l770:
   789                           
   790                           ;Slave3.c: 87:         datu=spiRead();
   791  0061  120A  118A  20AD  120A  118A  	fcall	_spiRead
   792  0066  00F1               	movwf	??_ISR
   793  0067  0871               	movf	??_ISR,w
   794  0068  00F8               	movwf	_datu
   795                           
   796                           ;Slave3.c: 88:         spiWrite(VADC);
   797  0069  0879               	movf	_VADC,w
   798  006A  120A  118A  20C5  120A  118A  	fcall	_spiWrite
   799  006F                     i1l104:
   800  006F  0873               	movf	??_ISR+2,w
   801  0070  008A               	movwf	10
   802  0071  0E72               	swapf	??_ISR+1,w
   803  0072  0083               	movwf	3
   804  0073  0EFE               	swapf	btemp,f
   805  0074  0E7E               	swapf	btemp,w
   806  0075  0009               	retfie
   807  0076                     __end_of_ISR:
   808                           
   809                           	psect	intentry
   810  0004                     __pintentry:	
   811                           ;incstack = 0
   812                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   813                           
   814  0004                     interrupt_function:
   815  007E                     saved_w	set	btemp
   816  0004  00FE               	movwf	btemp
   817  0005  0E03               	swapf	3,w
   818  0006  00F2               	movwf	??_ISR+1
   819  0007  080A               	movf	10,w
   820  0008  00F3               	movwf	??_ISR+2
   821  0009  120A  118A  2851   	ljmp	_ISR
   822                           
   823                           	psect	text5
   824  00C5                     __ptext5:	
   825 ;; *************** function _spiWrite *****************
   826 ;; Defined at:
   827 ;;		line 71 in file "./spi.h"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  dat             1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  dat             1    0[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         1       0       0       0       0
   845 ;;Total ram usage:        1 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_ISR
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _spiWrite
   856  00C5                     _spiWrite:
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _spiWrite: [wreg]
   860                           ;spiWrite@dat stored from wreg
   861  00C5  00F0               	movwf	spiWrite@dat
   862  00C6                     i1l712:
   863                           
   864                           ;./spi.h: 71: void spiWrite(char dat);./spi.h: 72: {;./spi.h: 73:     SSPBUF = dat;
   865  00C6  0870               	movf	spiWrite@dat,w
   866  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   867  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   868  00C9  0093               	movwf	19	;volatile
   869  00CA                     i1l70:
   870  00CA  0008               	return
   871  00CB                     __end_of_spiWrite:
   872                           
   873                           	psect	text6
   874  00AD                     __ptext6:	
   875 ;; *************** function _spiRead *****************
   876 ;; Defined at:
   877 ;;		line 84 in file "./spi.h"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      unsigned char 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    1
   898 ;; This function calls:
   899 ;;		_spiReceiveWait
   900 ;; This function is called by:
   901 ;;		_ISR
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _spiRead
   907  00AD                     _spiRead:
   908  00AD                     i1l714:	
   909                           ;incstack = 0
   910                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   911                           
   912                           
   913                           ;./spi.h: 86:     spiReceiveWait();
   914  00AD  120A  118A  20BE  120A  118A  	fcall	_spiReceiveWait
   915  00B2                     i1l716:
   916                           
   917                           ;./spi.h: 87:     return(SSPBUF);
   918  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   919  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   920  00B4  0813               	movf	19,w	;volatile
   921  00B5                     i1l78:
   922  00B5  0008               	return
   923  00B6                     __end_of_spiRead:
   924                           
   925                           	psect	text7
   926  00BE                     __ptext7:	
   927 ;; *************** function _spiReceiveWait *****************
   928 ;; Defined at:
   929 ;;		line 66 in file "./spi.h"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		None
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_spiRead
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _spiReceiveWait
   958  00BE                     _spiReceiveWait:
   959  00BE                     i1l696:	
   960                           ;incstack = 0
   961                           ; Regs used in _spiReceiveWait: []
   962                           
   963  00BE                     i1l64:	
   964                           ;./spi.h: 68:     while ( !SSPSTATbits.BF );
   965                           
   966  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   967  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   968  00C0  1C14               	btfss	20,0	;volatile
   969  00C1  28C3               	goto	u1_21
   970  00C2  28C4               	goto	u1_20
   971  00C3                     u1_21:
   972  00C3  28BE               	goto	i1l64
   973  00C4                     u1_20:
   974  00C4                     i1l67:
   975  00C4  0008               	return
   976  00C5                     __end_of_spiReceiveWait:
   977  007E                     btemp	set	126	;btemp
   978  007E                     wtemp0	set	126
   979                           
   980                           	psect	config
   981                           
   982                           ;Config register CONFIG1 @ 0x2007
   983                           ;	Oscillator Selection bits
   984                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   985                           ;	Watchdog Timer Enable bit
   986                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   987                           ;	Power-up Timer Enable bit
   988                           ;	PWRTE = OFF, PWRT disabled
   989                           ;	RE3/MCLR pin function select bit
   990                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   991                           ;	Code Protection bit
   992                           ;	CP = OFF, Program memory code protection is disabled
   993                           ;	Data Code Protection bit
   994                           ;	CPD = OFF, Data memory code protection is disabled
   995                           ;	Brown Out Reset Selection bits
   996                           ;	BOREN = OFF, BOR disabled
   997                           ;	Internal External Switchover bit
   998                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   999                           ;	Fail-Safe Clock Monitor Enabled bit
  1000                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1001                           ;	Low Voltage Programming Enable bit
  1002                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1003                           ;	In-Circuit Debugger Mode bit
  1004                           ;	DEBUG = 0x1, unprogrammed default
  1005  2007                     	org	8199
  1006  2007  20D4               	dw	8404
  1007                           
  1008                           ;Config register CONFIG2 @ 0x2008
  1009                           ;	Brown-out Reset Selection bit
  1010                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1011                           ;	Flash Program Memory Self Write Enable bits
  1012                           ;	WRT = OFF, Write protection off
  1013  2008                     	org	8200
  1014  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              0 BANK0      2     2      0
                              _GOCHK
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GOCHK                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GOCHK
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 15:52:13 2021

            _SSPSTATbits 0094                       l60 00A7                       l61 00AC  
                     l56 00BD                       l97 0096                       u20 00BC  
                     u21 00BB                       u80 009F                       u81 009E  
                    l700 00BC                      l720 0076                      l800 0033  
                    l730 0082                      l722 007A                      l802 0039  
                    l732 0084                      l724 007B                      l804 003E  
                    l734 0088                      l726 007C                      l806 0044  
                    l736 008C                      l728 007D                      l808 0049  
                    l780 00A6                      l772 0098                      l774 009F  
                    l776 00A1                      l698 00B6                      l778 00A3  
                    l796 0015                      l798 0023                      u110 0039  
                    u111 0038                      u120 0044                      u121 0043  
                    u137 0029                      _ISR 0051                     ?_ISR 0070  
                   _PIE1 008C                     i1l70 00CA                     i1l64 00BE  
                   i1l67 00C4                     i1l78 00B5                     _VADC 0079  
                   u1_20 00C4                     u1_21 00C3                     u6_20 0057  
                   u6_21 0056                     u7_20 0060                     u7_21 005F  
                   _datu 0078                     _main 0015                     btemp 007E  
                   start 000C                    ??_ISR 0071                    ?_main 0070  
                  _ANSEL 0188                    _GOCHK 00B6                    i1l104 006F  
                  i1l712 00C6                    i1l714 00AD                    i1l716 00B2  
                  i1l760 0051                    i1l770 0061                    i1l762 0057  
                  i1l764 0058                    i1l766 005C                    i1l696 00BE  
                  i1l768 0060                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIF 0063                    _setup 0076                    pclath 000A  
        __end_of_spiInit 00AD          __end_of_spiRead 00B6                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0051  
                 ??_main 0020                   ?_GOCHK 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _INTCON 000B                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 00CB                ??_spiInit 0077  
              ??_spiRead 0070  __end_of__initialization 0011            __end_of_GOCHK 00BE  
         __pcstackCOMMON 0070            __end_of_setup 0097                  ??_GOCHK 0074  
                ??_setup 0074               __pmaintext 0015               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0097                  __ptext2 0076                  __ptext3 00B6  
                __ptext4 0051                  __ptext5 00C5                  __ptext6 00AD  
                __ptext7 00BE             __size_of_ISR 0025                  _spiInit 0097  
                _spiRead 00AD     end_of_initialization 0011               ??_spiWrite 0070  
            spiWrite@dat 0070           _spiReceiveWait 00BE      start_initialization 000F  
            __end_of_ISR 0076   __end_of_spiReceiveWait 00C5              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006           __size_of_GOCHK 0008                 ?_spiInit 0074  
               ?_spiRead 0070           __size_of_setup 0021     spiInit@sTransmitEdge 0076  
      interrupt_function 0004       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_spiInit 0016         __size_of_spiRead 0009  
          __size_of_main 003C                 _spiWrite 00C5             spiInit@sType 0077  
      spiInit@sClockIdle 0075                 intlevel1 0000         ??_spiReceiveWait 0070  
