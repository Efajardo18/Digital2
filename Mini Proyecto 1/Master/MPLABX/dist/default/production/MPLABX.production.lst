

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 22:59:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0406                     __pstrings:
   228  0406                     stringtab:
   229  0406                     __stringtab:
   230                           
   231                           ;	String table - string pointers are 1 byte each
   232  0406  1BFF               	btfsc	btemp+1,7
   233  0407  2C10               	ljmp	stringcode
   234  0408  1383               	bcf	3,7
   235  0409  187F               	btfsc	btemp+1,0
   236  040A  1783               	bsf	3,7
   237  040B  0800               	movf	0,w
   238  040C  0A84               	incf	4,f
   239  040D  1903               	skipnz
   240  040E  0AFF               	incf	btemp+1,f
   241  040F  0008               	return
   242  0410                     stringcode:
   243  0410                     stringdir:
   244  0410  3004               	movlw	high stringdir
   245  0411  008A               	movwf	10
   246  0412  0804               	movf	4,w
   247  0413  0A84               	incf	4,f
   248  0414  0782               	addwf	2,f
   249  0415                     __stringbase:
   250  0415  3400               	retlw	0
   251  0416                     __end_of__stringtab:
   252  0416                     _dpowers:
   253  0416  3401               	retlw	1
   254  0417  3400               	retlw	0
   255  0418  340A               	retlw	10
   256  0419  3400               	retlw	0
   257  041A  3464               	retlw	100
   258  041B  3400               	retlw	0
   259  041C  34E8               	retlw	232
   260  041D  3403               	retlw	3
   261  041E  3410               	retlw	16
   262  041F  3427               	retlw	39
   263  0420                     __end_of_dpowers:
   264  0008                     _PORTD	set	8
   265  0006                     _PORTB	set	6
   266  0005                     _PORTA	set	5
   267  000B                     _INTCON	set	11
   268  0006                     _PORTBbits	set	6
   269  0019                     _TXREG	set	25
   270  001A                     _RCREG	set	26
   271  0013                     _SSPBUF	set	19
   272  0014                     _SSPCON	set	20
   273  0063                     _SSPIF	set	99
   274  0065                     _RCIF	set	101
   275  00C4                     _CREN	set	196
   276  00C7                     _SPEN	set	199
   277  004A                     _RE2	set	74
   278  0049                     _RE1	set	73
   279  0047                     _RD7	set	71
   280  0046                     _RD6	set	70
   281  0045                     _RD5	set	69
   282  0044                     _RD4	set	68
   283  0043                     _RD3	set	67
   284  0042                     _RD2	set	66
   285  0041                     _RD1	set	65
   286  0040                     _RD0	set	64
   287  0089                     _TRISE	set	137
   288  0088                     _TRISD	set	136
   289  0086                     _TRISB	set	134
   290  0085                     _TRISA	set	133
   291  0099                     _SPBRG	set	153
   292  0094                     _SSPSTATbits	set	148
   293  0094                     _SSPSTAT	set	148
   294  04C1                     _TRMT	set	1217
   295  04C5                     _TXEN	set	1221
   296  043E                     _TRISC6	set	1086
   297  043F                     _TRISC7	set	1087
   298  04C4                     _SYNC	set	1220
   299  04C2                     _BRGH	set	1218
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304  0420                     STR_7:
   305  0420  3425               	retlw	37	;'%'
   306  0421  3431               	retlw	49	;'1'
   307  0422  3469               	retlw	105	;'i'
   308  0423  342E               	retlw	46	;'.'
   309  0424  3425               	retlw	37	;'%'
   310  0425  3431               	retlw	49	;'1'
   311  0426  3469               	retlw	105	;'i'
   312  0427  3456               	retlw	86	;'V'
   313  0428  3420               	retlw	32	;' '
   314  0429  3420               	retlw	32	;' '
   315  042A  3425               	retlw	37	;'%'
   316  042B  3433               	retlw	51	;'3'
   317  042C  3469               	retlw	105	;'i'
   318  042D  3420               	retlw	32	;' '
   319  042E  3420               	retlw	32	;' '
   320  042F  3425               	retlw	37	;'%'
   321  0430  3433               	retlw	51	;'3'
   322  0431  3469               	retlw	105	;'i'
   323  0432  3443               	retlw	67	;'C'
   324  0433  3400               	retlw	0
   325  0434                     STR_5:
   326  0434  3477               	retlw	119	;'w'
   327  0435  3477               	retlw	119	;'w'
   328  0436  3477               	retlw	119	;'w'
   329  0437  342E               	retlw	46	;'.'
   330  0438  3465               	retlw	101	;'e'
   331  0439  346C               	retlw	108	;'l'
   332  043A  3465               	retlw	101	;'e'
   333  043B  3463               	retlw	99	;'c'
   334  043C  3474               	retlw	116	;'t'
   335  043D  3472               	retlw	114	;'r'
   336  043E  346F               	retlw	111	;'o'
   337  043F  3453               	retlw	83	;'S'
   338  0440  346F               	retlw	111	;'o'
   339  0441  346D               	retlw	109	;'m'
   340  0442  3465               	retlw	101	;'e'
   341  0443  342E               	retlw	46	;'.'
   342  0444  3463               	retlw	99	;'c'
   343  0445  346F               	retlw	111	;'o'
   344  0446  346D               	retlw	109	;'m'
   345  0447  3400               	retlw	0
   346  0448                     STR_6:
   347  0448  3441               	retlw	65	;'A'
   348  0449  3444               	retlw	68	;'D'
   349  044A  3443               	retlw	67	;'C'
   350  044B  3420               	retlw	32	;' '
   351  044C  3420               	retlw	32	;' '
   352  044D  3420               	retlw	32	;' '
   353  044E  3443               	retlw	67	;'C'
   354  044F  344F               	retlw	79	;'O'
   355  0450  344E               	retlw	78	;'N'
   356  0451  3454               	retlw	84	;'T'
   357  0452  3420               	retlw	32	;' '
   358  0453  3420               	retlw	32	;' '
   359  0454  3454               	retlw	84	;'T'
   360  0455  3445               	retlw	69	;'E'
   361  0456  344D               	retlw	77	;'M'
   362  0457  3450               	retlw	80	;'P'
   363  0458  3400               	retlw	0
   364  0459                     STR_1:
   365  0459  344C               	retlw	76	;'L'
   366  045A  3443               	retlw	67	;'C'
   367  045B  3444               	retlw	68	;'D'
   368  045C  3420               	retlw	32	;' '
   369  045D  344C               	retlw	76	;'L'
   370  045E  3469               	retlw	105	;'i'
   371  045F  3462               	retlw	98	;'b'
   372  0460  3472               	retlw	114	;'r'
   373  0461  3461               	retlw	97	;'a'
   374  0462  3472               	retlw	114	;'r'
   375  0463  3479               	retlw	121	;'y'
   376  0464  3420               	retlw	32	;' '
   377  0465  3466               	retlw	102	;'f'
   378  0466  346F               	retlw	111	;'o'
   379  0467  3472               	retlw	114	;'r'
   380  0468  3400               	retlw	0
   381  0469                     STR_3:
   382  0469  3444               	retlw	68	;'D'
   383  046A  3465               	retlw	101	;'e'
   384  046B  3476               	retlw	118	;'v'
   385  046C  3465               	retlw	101	;'e'
   386  046D  346C               	retlw	108	;'l'
   387  046E  346F               	retlw	111	;'o'
   388  046F  3470               	retlw	112	;'p'
   389  0470  3465               	retlw	101	;'e'
   390  0471  3464               	retlw	100	;'d'
   391  0472  3420               	retlw	32	;' '
   392  0473  3442               	retlw	66	;'B'
   393  0474  3479               	retlw	121	;'y'
   394  0475  3400               	retlw	0
   395  0476                     STR_4:
   396  0476  3465               	retlw	101	;'e'
   397  0477  346C               	retlw	108	;'l'
   398  0478  3465               	retlw	101	;'e'
   399  0479  3463               	retlw	99	;'c'
   400  047A  3474               	retlw	116	;'t'
   401  047B  3472               	retlw	114	;'r'
   402  047C  346F               	retlw	111	;'o'
   403  047D  3453               	retlw	83	;'S'
   404  047E  346F               	retlw	111	;'o'
   405  047F  346D               	retlw	109	;'m'
   406  0480  3465               	retlw	101	;'e'
   407  0481  3400               	retlw	0
   408  0482                     STR_2:
   409  0482  344D               	retlw	77	;'M'
   410  0483  3450               	retlw	80	;'P'
   411  0484  344C               	retlw	76	;'L'
   412  0485  3441               	retlw	65	;'A'
   413  0486  3442               	retlw	66	;'B'
   414  0487  3420               	retlw	32	;' '
   415  0488  3458               	retlw	88	;'X'
   416  0489  3443               	retlw	67	;'C'
   417  048A  3438               	retlw	56	;'8'
   418  048B  3400               	retlw	0
   419                           
   420                           	psect	cinit
   421  000F                     start_initialization:	
   422                           ; #config settings
   423                           
   424  000F                     __initialization:
   425                           
   426                           ; Clear objects allocated to COMMON
   427  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   428  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   429                           
   430                           ; Clear objects allocated to BANK0
   431  0011  1283               	bcf	3,5	;RP0=0, select bank0
   432  0012  1303               	bcf	3,6	;RP1=0, select bank0
   433  0013  01D4               	clrf	__pbssBANK0& (0+127)
   434  0014  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   435  0015  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   436  0016  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   437  0017  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   438  0018  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   439  0019  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   440  001A  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   441  001B                     end_of_initialization:	
   442                           ;End of C runtime variable initialization code
   443                           
   444  001B                     __end_of__initialization:
   445  001B  0183               	clrf	3
   446  001C  120A  118A  29A7   	ljmp	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMMON
   449  007A                     __pbssCOMMON:
   450  007A                     _DATAS2:
   451  007A                     	ds	1
   452  007B                     _DATAS1:
   453  007B                     	ds	1
   454                           
   455                           	psect	bssBANK0
   456  0054                     __pbssBANK0:
   457  0054                     _uwu2:
   458  0054                     	ds	1
   459  0055                     _uwu1:
   460  0055                     	ds	1
   461  0056                     _V2:
   462  0056                     	ds	1
   463  0057                     _V1:
   464  0057                     	ds	1
   465  0058                     _DATAS3:
   466  0058                     	ds	1
   467  0059                     _SLAVE3:
   468  0059                     	ds	1
   469  005A                     _SLAVE2:
   470  005A                     	ds	1
   471  005B                     _SLAVE1:
   472  005B                     	ds	1
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:
   476  0070                     ?_isdigit:
   477  0070                     ?_setup:	
   478                           ; 1 bit 
   479                           
   480  0070                     ?_spiReceiveWait:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_spiWrite:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_spiRead:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_Lcd_Port:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_Lcd_Cmd:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_Lcd_Init:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_Lcd_Write_Char:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_UART_Write:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_ISR:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_ISR:	
   511                           ; 1 bytes @ 0x0
   512                           
   513                           
   514                           ; 1 bytes @ 0x0
   515  0070                     	ds	2
   516  0072                     ??_setup:
   517  0072                     ??_isdigit:	
   518                           ; 1 bytes @ 0x2
   519                           
   520  0072                     ?_spiInit:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     ??_spiReceiveWait:	
   524                           ; 1 bytes @ 0x2
   525                           
   526  0072                     ??_spiWrite:	
   527                           ; 1 bytes @ 0x2
   528                           
   529  0072                     ??_spiRead:	
   530                           ; 1 bytes @ 0x2
   531                           
   532  0072                     ??_Lcd_Port:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0072                     ??_UART_Write:	
   536                           ; 1 bytes @ 0x2
   537                           
   538  0072                     ?___wmul:	
   539                           ; 1 bytes @ 0x2
   540                           
   541  0072                     ?___lwdiv:	
   542                           ; 2 bytes @ 0x2
   543                           
   544  0072                     ?___aldiv:	
   545                           ; 2 bytes @ 0x2
   546                           
   547  0072                     spiInit@sDataSample:	
   548                           ; 4 bytes @ 0x2
   549                           
   550  0072                     spiWrite@dat:	
   551                           ; 1 bytes @ 0x2
   552                           
   553  0072                     Lcd_Port@a:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  0072                     UART_Write@data:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  0072                     _isdigit$787:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  0072                     ___wmul@multiplier:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     ___lwdiv@divisor:	
   566                           ; 2 bytes @ 0x2
   567                           
   568  0072                     ___aldiv@divisor:	
   569                           ; 2 bytes @ 0x2
   570                           
   571                           
   572                           ; 4 bytes @ 0x2
   573  0072                     	ds	1
   574  0073                     ??_Lcd_Cmd:
   575  0073                     ??_Lcd_Write_Char:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  0073                     spiInit@sClockIdle:	
   579                           ; 1 bytes @ 0x3
   580                           
   581  0073                     isdigit@c:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586  0073                     	ds	1
   587  0074                     spiInit@sTransmitEdge:
   588  0074                     ___wmul@multiplicand:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0074                     ___lwdiv@dividend:	
   592                           ; 2 bytes @ 0x4
   593                           
   594                           
   595                           ; 2 bytes @ 0x4
   596  0074                     	ds	1
   597  0075                     ??_spiInit:
   598  0075                     spiInit@sType:	
   599                           ; 1 bytes @ 0x5
   600                           
   601  0075                     Lcd_Cmd@a:	
   602                           ; 1 bytes @ 0x5
   603                           
   604  0075                     Lcd_Write_Char@a:	
   605                           ; 1 bytes @ 0x5
   606                           
   607                           
   608                           ; 1 bytes @ 0x5
   609  0075                     	ds	1
   610  0076                     ?_Lcd_Set_Cursor:
   611  0076                     ??_Lcd_Init:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  0076                     ?_Lcd_Write_String:	
   615                           ; 1 bytes @ 0x6
   616                           
   617  0076                     ??___wmul:	
   618                           ; 1 bytes @ 0x6
   619                           
   620  0076                     ??___lwdiv:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0076                     Lcd_Set_Cursor@b:	
   624                           ; 1 bytes @ 0x6
   625                           
   626  0076                     Lcd_Write_String@a:	
   627                           ; 1 bytes @ 0x6
   628                           
   629  0076                     ___wmul@product:	
   630                           ; 2 bytes @ 0x6
   631                           
   632  0076                     ___aldiv@dividend:	
   633                           ; 2 bytes @ 0x6
   634                           
   635                           
   636                           ; 4 bytes @ 0x6
   637  0076                     	ds	1
   638  0077                     ??_Lcd_Set_Cursor:
   639  0077                     ___lwdiv@quotient:	
   640                           ; 1 bytes @ 0x7
   641                           
   642                           
   643                           ; 2 bytes @ 0x7
   644  0077                     	ds	1
   645  0078                     Lcd_Set_Cursor@a:
   646  0078                     Lcd_Write_String@i:	
   647                           ; 1 bytes @ 0x8
   648                           
   649                           
   650                           ; 2 bytes @ 0x8
   651  0078                     	ds	1
   652  0079                     Lcd_Set_Cursor@temp:
   653  0079                     ___lwdiv@counter:	
   654                           ; 1 bytes @ 0x9
   655                           
   656                           
   657                           ; 1 bytes @ 0x9
   658  0079                     	ds	1
   659                           
   660                           	psect	cstackBANK0
   661  0020                     __pcstackBANK0:
   662  0020                     ??_Lcd_Write_String:
   663  0020                     ??___aldiv:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0020                     ?___lwmod:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0020                     ___lwmod@divisor:	
   670                           ; 2 bytes @ 0x0
   671                           
   672                           
   673                           ; 2 bytes @ 0x0
   674  0020                     	ds	1
   675  0021                     ___aldiv@counter:
   676                           
   677                           ; 1 bytes @ 0x1
   678  0021                     	ds	1
   679  0022                     ___aldiv@sign:
   680  0022                     ___lwmod@dividend:	
   681                           ; 1 bytes @ 0x2
   682                           
   683                           
   684                           ; 2 bytes @ 0x2
   685  0022                     	ds	1
   686  0023                     ___aldiv@quotient:
   687                           
   688                           ; 4 bytes @ 0x3
   689  0023                     	ds	1
   690  0024                     ??___lwmod:
   691                           
   692                           ; 1 bytes @ 0x4
   693  0024                     	ds	1
   694  0025                     ___lwmod@counter:
   695                           
   696                           ; 1 bytes @ 0x5
   697  0025                     	ds	1
   698  0026                     ?_sprintf:
   699  0026                     sprintf@f:	
   700                           ; 2 bytes @ 0x6
   701                           
   702                           
   703                           ; 1 bytes @ 0x6
   704  0026                     	ds	1
   705  0027                     ?_UART_Init:
   706  0027                     UART_Init@baudrate:	
   707                           ; 1 bytes @ 0x7
   708                           
   709                           
   710                           ; 4 bytes @ 0x7
   711  0027                     	ds	4
   712  002B                     ??_UART_Init:
   713                           
   714                           ; 1 bytes @ 0xB
   715  002B                     	ds	4
   716  002F                     ??_sprintf:
   717                           
   718                           ; 1 bytes @ 0xF
   719  002F                     	ds	3
   720  0032                     sprintf@ap:
   721                           
   722                           ; 1 bytes @ 0x12
   723  0032                     	ds	1
   724  0033                     sprintf@prec:
   725                           
   726                           ; 1 bytes @ 0x13
   727  0033                     	ds	1
   728  0034                     sprintf@flag:
   729                           
   730                           ; 1 bytes @ 0x14
   731  0034                     	ds	1
   732  0035                     sprintf@val:
   733                           
   734                           ; 2 bytes @ 0x15
   735  0035                     	ds	2
   736  0037                     sprintf@sp:
   737  0037                     UART_Init@x:	
   738                           ; 1 bytes @ 0x17
   739                           
   740                           
   741                           ; 2 bytes @ 0x17
   742  0037                     	ds	1
   743  0038                     sprintf@width:
   744                           
   745                           ; 2 bytes @ 0x18
   746  0038                     	ds	2
   747  003A                     sprintf@c:
   748                           
   749                           ; 1 bytes @ 0x1A
   750  003A                     	ds	1
   751  003B                     ??_main:
   752                           
   753                           ; 1 bytes @ 0x1B
   754  003B                     	ds	9
   755  0044                     main@s:
   756                           
   757                           ; 16 bytes @ 0x24
   758  0044                     	ds	16
   759                           
   760                           	psect	maintext
   761  01A7                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 65 in file "Master.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  s              16   36[BANK0 ] unsigned char [16]
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : B00/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0      16       0       0       0
   783 ;;      Temps:          0       9       0       0       0
   784 ;;      Totals:         0      25       0       0       0
   785 ;;Total ram usage:       25 bytes
   786 ;; Hardware stack levels required when called:    4
   787 ;; This function calls:
   788 ;;		_Lcd_Init
   789 ;;		_Lcd_Set_Cursor
   790 ;;		_Lcd_Write_String
   791 ;;		_UART_Init
   792 ;;		_UART_Write
   793 ;;		_setup
   794 ;;		_spiInit
   795 ;;		_spiRead
   796 ;;		_spiWrite
   797 ;;		_sprintf
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _main
   805  01A7                     _main:
   806  01A7                     l2181:	
   807                           ;incstack = 0
   808                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   809                           
   810                           
   811                           ;Master.c: 66:     setup();
   812  01A7  120A  118A  2666  120A  118A  	fcall	_setup
   813                           
   814                           ;Master.c: 67:     Lcd_Init();
   815  01AC  120A  118A  248C  120A  118A  	fcall	_Lcd_Init
   816                           
   817                           ;Master.c: 68:     char s[16];;Master.c: 69:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_S
      +                          AMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
   818  01B1  01F2               	clrf	spiInit@sDataSample
   819  01B2  01F3               	clrf	spiInit@sClockIdle
   820  01B3  01F4               	clrf	spiInit@sTransmitEdge
   821  01B4  3020               	movlw	32
   822  01B5  120A  118A  2650  120A  118A  	fcall	_spiInit
   823                           
   824                           ;Master.c: 70:     UART_Init(9600);
   825  01BA  3000               	movlw	0
   826  01BB  1283               	bcf	3,5	;RP0=0, select bank0
   827  01BC  1303               	bcf	3,6	;RP1=0, select bank0
   828  01BD  00AA               	movwf	UART_Init@baudrate+3
   829  01BE  3000               	movlw	0
   830  01BF  00A9               	movwf	UART_Init@baudrate+2
   831  01C0  3025               	movlw	37
   832  01C1  00A8               	movwf	UART_Init@baudrate+1
   833  01C2  3080               	movlw	128
   834  01C3  00A7               	movwf	UART_Init@baudrate
   835  01C4  120A  118A  228C  120A  118A  	fcall	_UART_Init
   836                           
   837                           ;Master.c: 71:     Lcd_Set_Cursor(1, 1);
   838  01C9  01F6               	clrf	Lcd_Set_Cursor@b
   839  01CA  0AF6               	incf	Lcd_Set_Cursor@b,f
   840  01CB  3001               	movlw	1
   841  01CC  120A  118A  25F8  120A  118A  	fcall	_Lcd_Set_Cursor
   842  01D1                     l2183:
   843                           
   844                           ;Master.c: 72:     Lcd_Write_String("ADC   CONT  TEMP");
   845  01D1  3033               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   846  01D2  00F6               	movwf	Lcd_Write_String@a
   847  01D3  3080               	movlw	128
   848  01D4  00F7               	movwf	Lcd_Write_String@a+1
   849  01D5  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_String
   850  01DA                     l2185:
   851                           
   852                           ;Master.c: 74:         PORTBbits.RB0 = 0;
   853  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   854  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   855  01DC  1006               	bcf	6,0	;volatile
   856  01DD                     l2187:
   857                           
   858                           ;Master.c: 75:         spiWrite(0);
   859  01DD  3000               	movlw	0
   860  01DE  120A  118A  26B5  120A  118A  	fcall	_spiWrite
   861  01E3                     l2189:
   862                           
   863                           ;Master.c: 76:         SLAVE1 = spiRead();
   864  01E3  120A  118A  26A5  120A  118A  	fcall	_spiRead
   865  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   866  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   867  01EA  00BB               	movwf	??_main
   868  01EB  083B               	movf	??_main,w
   869  01EC  00DB               	movwf	_SLAVE1
   870  01ED                     l2191:
   871                           
   872                           ;Master.c: 77:         PORTBbits.RB0 = 1;
   873  01ED  1406               	bsf	6,0	;volatile
   874  01EE                     l2193:
   875                           
   876                           ;Master.c: 79:         if(SLAVE1>=251){
   877  01EE  30FB               	movlw	251
   878  01EF  025B               	subwf	_SLAVE1,w
   879  01F0  1C03               	skipc
   880  01F1  29F3               	goto	u2031
   881  01F2  29F4               	goto	u2030
   882  01F3                     u2031:
   883  01F3  2A03               	goto	l2201
   884  01F4                     u2030:
   885  01F4                     l2195:
   886                           
   887                           ;Master.c: 80:             V1 =5;
   888  01F4  3005               	movlw	5
   889  01F5  00BB               	movwf	??_main
   890  01F6  083B               	movf	??_main,w
   891  01F7  00D7               	movwf	_V1
   892  01F8                     l2197:
   893                           
   894                           ;Master.c: 81:             V2 =0;
   895  01F8  01D6               	clrf	_V2
   896                           
   897                           ;Master.c: 82:         }
   898  01F9  2A19               	goto	l241
   899  01FA                     l2199:
   900                           
   901                           ;Master.c: 85:                 V1++;
   902  01FA  3001               	movlw	1
   903  01FB  00BB               	movwf	??_main
   904  01FC  083B               	movf	??_main,w
   905  01FD  07D7               	addwf	_V1,f
   906                           
   907                           ;Master.c: 86:                 SLAVE1=SLAVE1-50;
   908  01FE  085B               	movf	_SLAVE1,w
   909  01FF  3ECE               	addlw	206
   910  0200  00BB               	movwf	??_main
   911  0201  083B               	movf	??_main,w
   912  0202  00DB               	movwf	_SLAVE1
   913  0203                     l2201:
   914                           
   915                           ;Master.c: 84:             while(SLAVE1>=50){
   916  0203  3032               	movlw	50
   917  0204  025B               	subwf	_SLAVE1,w
   918  0205  1803               	skipnc
   919  0206  2A08               	goto	u2041
   920  0207  2A09               	goto	u2040
   921  0208                     u2041:
   922  0208  29FA               	goto	l2199
   923  0209                     u2040:
   924  0209  2A13               	goto	l2205
   925  020A                     l2203:
   926                           
   927                           ;Master.c: 89:                 V2++;
   928  020A  3001               	movlw	1
   929  020B  00BB               	movwf	??_main
   930  020C  083B               	movf	??_main,w
   931  020D  07D6               	addwf	_V2,f
   932                           
   933                           ;Master.c: 90:                 SLAVE1=SLAVE1-5;
   934  020E  085B               	movf	_SLAVE1,w
   935  020F  3EFB               	addlw	251
   936  0210  00BB               	movwf	??_main
   937  0211  083B               	movf	??_main,w
   938  0212  00DB               	movwf	_SLAVE1
   939  0213                     l2205:
   940                           
   941                           ;Master.c: 88:             while(SLAVE1>=5){
   942  0213  3005               	movlw	5
   943  0214  025B               	subwf	_SLAVE1,w
   944  0215  1803               	skipnc
   945  0216  2A18               	goto	u2051
   946  0217  2A19               	goto	u2050
   947  0218                     u2051:
   948  0218  2A0A               	goto	l2203
   949  0219                     u2050:
   950  0219                     l241:	
   951                           ;Master.c: 92:         }
   952                           
   953                           
   954                           ;Master.c: 94:         PORTBbits.RB1 = 0;
   955  0219  1086               	bcf	6,1	;volatile
   956  021A                     l2207:
   957                           
   958                           ;Master.c: 95:         spiWrite(255);
   959  021A  30FF               	movlw	255
   960  021B  120A  118A  26B5  120A  118A  	fcall	_spiWrite
   961                           
   962                           ;Master.c: 96:         SLAVE2 = spiRead();
   963  0220  120A  118A  26A5  120A  118A  	fcall	_spiRead
   964  0225  1283               	bcf	3,5	;RP0=0, select bank0
   965  0226  1303               	bcf	3,6	;RP1=0, select bank0
   966  0227  00BB               	movwf	??_main
   967  0228  083B               	movf	??_main,w
   968  0229  00DA               	movwf	_SLAVE2
   969  022A                     l2209:
   970                           
   971                           ;Master.c: 97:         PORTBbits.RB1 = 1;
   972  022A  1486               	bsf	6,1	;volatile
   973                           
   974                           ;Master.c: 100:         UART_Write(SLAVE2);
   975  022B  085A               	movf	_SLAVE2,w
   976  022C  120A  118A  2699  120A  118A  	fcall	_UART_Write
   977  0231                     l2211:
   978                           
   979                           ;Master.c: 103:         PORTBbits.RB2 = 0;
   980  0231  1283               	bcf	3,5	;RP0=0, select bank0
   981  0232  1303               	bcf	3,6	;RP1=0, select bank0
   982  0233  1106               	bcf	6,2	;volatile
   983                           
   984                           ;Master.c: 104:         spiWrite(100);
   985  0234  3064               	movlw	100
   986  0235  120A  118A  26B5  120A  118A  	fcall	_spiWrite
   987                           
   988                           ;Master.c: 105:         SLAVE3 = spiRead();
   989  023A  120A  118A  26A5  120A  118A  	fcall	_spiRead
   990  023F  1283               	bcf	3,5	;RP0=0, select bank0
   991  0240  1303               	bcf	3,6	;RP1=0, select bank0
   992  0241  00BB               	movwf	??_main
   993  0242  083B               	movf	??_main,w
   994  0243  00D9               	movwf	_SLAVE3
   995  0244                     l2213:
   996                           
   997                           ;Master.c: 106:         PORTBbits.RB2 = 1;
   998  0244  1506               	bsf	6,2	;volatile
   999                           
  1000                           ;Master.c: 109:         UART_Write(SLAVE3);
  1001  0245  0859               	movf	_SLAVE3,w
  1002  0246  120A  118A  2699  120A  118A  	fcall	_UART_Write
  1003                           
  1004                           ;Master.c: 112:         Lcd_Set_Cursor(2, 1);
  1005  024B  01F6               	clrf	Lcd_Set_Cursor@b
  1006  024C  0AF6               	incf	Lcd_Set_Cursor@b,f
  1007  024D  3002               	movlw	2
  1008  024E  120A  118A  25F8  120A  118A  	fcall	_Lcd_Set_Cursor
  1009  0253                     l2215:
  1010                           
  1011                           ;Master.c: 113:         sprintf(s, "%1i.%1iV  %3i  %3iC", V1, V2, SLAVE2, SLAVE3);
  1012  0253  300B               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1013  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0256  00BB               	movwf	??_main
  1016  0257  083B               	movf	??_main,w
  1017  0258  00A6               	movwf	sprintf@f
  1018  0259  0857               	movf	_V1,w
  1019  025A  00BC               	movwf	??_main+1
  1020  025B  01BD               	clrf	??_main+2
  1021  025C  083C               	movf	??_main+1,w
  1022  025D  00A7               	movwf	?_sprintf+1
  1023  025E  083D               	movf	??_main+2,w
  1024  025F  00A8               	movwf	?_sprintf+2
  1025  0260  0856               	movf	_V2,w
  1026  0261  00BE               	movwf	??_main+3
  1027  0262  01BF               	clrf	??_main+4
  1028  0263  083E               	movf	??_main+3,w
  1029  0264  00A9               	movwf	?_sprintf+3
  1030  0265  083F               	movf	??_main+4,w
  1031  0266  00AA               	movwf	?_sprintf+4
  1032  0267  085A               	movf	_SLAVE2,w
  1033  0268  00C0               	movwf	??_main+5
  1034  0269  01C1               	clrf	??_main+6
  1035  026A  0840               	movf	??_main+5,w
  1036  026B  00AB               	movwf	?_sprintf+5
  1037  026C  0841               	movf	??_main+6,w
  1038  026D  00AC               	movwf	?_sprintf+6
  1039  026E  0859               	movf	_SLAVE3,w
  1040  026F  00C2               	movwf	??_main+7
  1041  0270  01C3               	clrf	??_main+8
  1042  0271  0842               	movf	??_main+7,w
  1043  0272  00AD               	movwf	?_sprintf+7
  1044  0273  0843               	movf	??_main+8,w
  1045  0274  00AE               	movwf	?_sprintf+8
  1046  0275  3044               	movlw	(low (main@s| 0))& (0+255)
  1047  0276  120A  118A  201F  120A  118A  	fcall	_sprintf
  1048  027B                     l2217:
  1049                           
  1050                           ;Master.c: 114:         Lcd_Write_String(s);
  1051  027B  3044               	movlw	(low (main@s| 0))& (0+255)
  1052  027C  00F6               	movwf	Lcd_Write_String@a
  1053  027D  3000               	movlw	0
  1054  027E  00F7               	movwf	Lcd_Write_String@a+1
  1055  027F  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_String
  1056  0284                     l2219:
  1057                           
  1058                           ;Master.c: 115:         V1=0;
  1059  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0286  01D7               	clrf	_V1
  1062  0287                     l2221:
  1063                           
  1064                           ;Master.c: 116:         V2=0;
  1065  0287  01D6               	clrf	_V2
  1066  0288  29DA               	goto	l2185
  1067  0289  120A  118A  280C   	ljmp	start
  1068  028C                     __end_of_main:
  1069                           
  1070                           	psect	text1
  1071  001F                     __ptext1:	
  1072 ;; *************** function _sprintf *****************
  1073 ;; Defined at:
  1074 ;;		line 505 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  sp              1    wreg     PTR unsigned char 
  1077 ;;		 -> main@s(16), 
  1078 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1079 ;;		 -> STR_7(20), 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1082 ;;		 -> main@s(16), 
  1083 ;;  tmpval          4    0        struct .
  1084 ;;  width           2   24[BANK0 ] int 
  1085 ;;  val             2   21[BANK0 ] unsigned int 
  1086 ;;  cp              2    0        PTR const unsigned char 
  1087 ;;  len             2    0        unsigned int 
  1088 ;;  c               1   26[BANK0 ] unsigned char 
  1089 ;;  flag            1   20[BANK0 ] unsigned char 
  1090 ;;  prec            1   19[BANK0 ] char 
  1091 ;;  ap              1   18[BANK0 ] PTR void [1]
  1092 ;;		 -> ?_sprintf(2), 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2    6[BANK0 ] int 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       9       0       0       0
  1103 ;;      Locals:         0       9       0       0       0
  1104 ;;      Temps:          0       3       0       0       0
  1105 ;;      Totals:         0      21       0       0       0
  1106 ;;Total ram usage:       21 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		___lwdiv
  1111 ;;		___lwmod
  1112 ;;		___wmul
  1113 ;;		_isdigit
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _sprintf
  1121  001F                     _sprintf:
  1122                           
  1123                           ;incstack = 0
  1124                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1125                           ;sprintf@sp stored from wreg
  1126  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0021  00B7               	movwf	sprintf@sp
  1129  0022                     l2031:
  1130                           
  1131                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1132  0022  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1133  0023  00AF               	movwf	??_sprintf
  1134  0024  082F               	movf	??_sprintf,w
  1135  0025  00B2               	movwf	sprintf@ap
  1136                           
  1137                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1138  0026  2990               	goto	l2113
  1139  0027                     l2033:
  1140                           
  1141                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1142  0027  3025               	movlw	37
  1143  0028  063A               	xorwf	sprintf@c,w
  1144  0029  1903               	btfsc	3,2
  1145  002A  282C               	goto	u1871
  1146  002B  282D               	goto	u1870
  1147  002C                     u1871:
  1148  002C  2839               	goto	l2039
  1149  002D                     u1870:
  1150  002D                     l2035:
  1151                           
  1152                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1153  002D  083A               	movf	sprintf@c,w
  1154  002E  00AF               	movwf	??_sprintf
  1155  002F  0837               	movf	sprintf@sp,w
  1156  0030  0084               	movwf	4
  1157  0031  082F               	movf	??_sprintf,w
  1158  0032  1383               	bcf	3,7	;select IRP bank0
  1159  0033  0080               	movwf	0
  1160  0034                     l2037:
  1161  0034  3001               	movlw	1
  1162  0035  00AF               	movwf	??_sprintf
  1163  0036  082F               	movf	??_sprintf,w
  1164  0037  07B7               	addwf	sprintf@sp,f
  1165                           
  1166                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1167  0038  2990               	goto	l2113
  1168  0039                     l2039:
  1169                           
  1170                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1171  0039  01B8               	clrf	sprintf@width
  1172  003A  01B9               	clrf	sprintf@width+1
  1173                           
  1174                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1175  003B  01B4               	clrf	sprintf@flag
  1176  003C                     l2041:
  1177                           
  1178                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1179  003C  0826               	movf	sprintf@f,w
  1180  003D  0084               	movwf	4
  1181  003E  120A  118A  2410  120A  118A  	fcall	stringdir
  1182  0043  120A  118A  2679  120A  118A  	fcall	_isdigit
  1183  0048  1C03               	btfss	3,0
  1184  0049  284B               	goto	u1881
  1185  004A  284C               	goto	u1880
  1186  004B                     u1881:
  1187  004B  288C               	goto	l2055
  1188  004C                     u1880:
  1189  004C                     l2043:
  1190                           
  1191                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1192  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1193  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1194  004E  01B8               	clrf	sprintf@width
  1195  004F  01B9               	clrf	sprintf@width+1
  1196  0050                     l2045:
  1197                           
  1198                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1199  0050  300A               	movlw	10
  1200  0051  00F2               	movwf	___wmul@multiplier
  1201  0052  3000               	movlw	0
  1202  0053  00F3               	movwf	___wmul@multiplier+1
  1203  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0056  0839               	movf	sprintf@width+1,w
  1206  0057  00F5               	movwf	___wmul@multiplicand+1
  1207  0058  0838               	movf	sprintf@width,w
  1208  0059  00F4               	movwf	___wmul@multiplicand
  1209  005A  120A  118A  25D3  120A  118A  	fcall	___wmul
  1210  005F  0873               	movf	?___wmul+1,w
  1211  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0062  00B9               	movwf	sprintf@width+1
  1214  0063  0872               	movf	?___wmul,w
  1215  0064  00B8               	movwf	sprintf@width
  1216  0065                     l2047:
  1217                           
  1218                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1219  0065  0826               	movf	sprintf@f,w
  1220  0066  0084               	movwf	4
  1221  0067  120A  118A  2410  120A  118A  	fcall	stringdir
  1222  006C  3ED0               	addlw	208
  1223  006D  00AF               	movwf	??_sprintf
  1224  006E  30FF               	movlw	255
  1225  006F  1803               	skipnc
  1226  0070  3000               	movlw	0
  1227  0071  00B0               	movwf	??_sprintf+1
  1228  0072  082F               	movf	??_sprintf,w
  1229  0073  07B8               	addwf	sprintf@width,f
  1230  0074  1803               	skipnc
  1231  0075  0AB9               	incf	sprintf@width+1,f
  1232  0076  0830               	movf	??_sprintf+1,w
  1233  0077  07B9               	addwf	sprintf@width+1,f
  1234  0078                     l2049:
  1235  0078  3001               	movlw	1
  1236  0079  00AF               	movwf	??_sprintf
  1237  007A  082F               	movf	??_sprintf,w
  1238  007B  07A6               	addwf	sprintf@f,f
  1239  007C                     l2051:
  1240                           
  1241                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1242  007C  0826               	movf	sprintf@f,w
  1243  007D  0084               	movwf	4
  1244  007E  120A  118A  2410  120A  118A  	fcall	stringdir
  1245  0083  120A  118A  2679  120A  118A  	fcall	_isdigit
  1246  0088  1803               	btfsc	3,0
  1247  0089  288B               	goto	u1891
  1248  008A  288C               	goto	u1890
  1249  008B                     u1891:
  1250  008B  2850               	goto	l2045
  1251  008C                     u1890:
  1252  008C                     l2055:
  1253  008C  3001               	movlw	1
  1254  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1255  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1256  008F  07A6               	addwf	sprintf@f,f
  1257  0090  30FF               	movlw	-1
  1258  0091  0726               	addwf	sprintf@f,w
  1259  0092  0084               	movwf	4
  1260  0093  120A  118A  2410  120A  118A  	fcall	stringdir
  1261  0098  00BA               	movwf	sprintf@c
  1262  0099  00AF               	movwf	??_sprintf
  1263  009A  01B0               	clrf	??_sprintf+1
  1264                           
  1265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 0 to 0
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ; direct_byte           11     8 (fixed)
  1272                           ; jumptable            260     6 (fixed)
  1273                           ;	Chosen strategy is simple_byte
  1274  009B  0830               	movf	??_sprintf+1,w
  1275  009C  3A00               	xorlw	0	; case 0
  1276  009D  1903               	skipnz
  1277  009E  28A0               	goto	l2243
  1278  009F  2990               	goto	l2113
  1279  00A0                     l2243:
  1280                           
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 3, Range of values is 0 to 105
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte           10     6 (average)
  1286                           ; jumptable            260     6 (fixed)
  1287                           ;	Chosen strategy is simple_byte
  1288  00A0  082F               	movf	??_sprintf,w
  1289  00A1  3A00               	xorlw	0	; case 0
  1290  00A2  1903               	skipnz
  1291  00A3  29A2               	goto	l2115
  1292  00A4  3A64               	xorlw	100	; case 100
  1293  00A5  1903               	skipnz
  1294  00A6  28AB               	goto	l2057
  1295  00A7  3A0D               	xorlw	13	; case 105
  1296  00A8  1903               	skipnz
  1297  00A9  28AB               	goto	l2057
  1298  00AA  2990               	goto	l2113
  1299  00AB                     l2057:
  1300                           
  1301                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1302  00AB  0832               	movf	sprintf@ap,w
  1303  00AC  0084               	movwf	4
  1304  00AD  1383               	bcf	3,7	;select IRP bank0
  1305  00AE  0800               	movf	0,w
  1306  00AF  00B5               	movwf	sprintf@val
  1307  00B0  0A84               	incf	4,f
  1308  00B1  0800               	movf	0,w
  1309  00B2  00B6               	movwf	sprintf@val+1
  1310  00B3                     l2059:
  1311  00B3  3002               	movlw	2
  1312  00B4  00AF               	movwf	??_sprintf
  1313  00B5  082F               	movf	??_sprintf,w
  1314  00B6  07B2               	addwf	sprintf@ap,f
  1315  00B7                     l2061:
  1316                           
  1317                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1318  00B7  1FB6               	btfss	sprintf@val+1,7
  1319  00B8  28BA               	goto	u1901
  1320  00B9  28BB               	goto	u1900
  1321  00BA                     u1901:
  1322  00BA  28C4               	goto	l2067
  1323  00BB                     u1900:
  1324  00BB                     l2063:
  1325                           
  1326                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1327  00BB  3003               	movlw	3
  1328  00BC  00AF               	movwf	??_sprintf
  1329  00BD  082F               	movf	??_sprintf,w
  1330  00BE  04B4               	iorwf	sprintf@flag,f
  1331  00BF                     l2065:
  1332                           
  1333                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1334  00BF  09B5               	comf	sprintf@val,f
  1335  00C0  09B6               	comf	sprintf@val+1,f
  1336  00C1  0AB5               	incf	sprintf@val,f
  1337  00C2  1903               	skipnz
  1338  00C3  0AB6               	incf	sprintf@val+1,f
  1339  00C4                     l2067:
  1340                           
  1341                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1342  00C4  01BA               	clrf	sprintf@c
  1343  00C5  0ABA               	incf	sprintf@c,f
  1344  00C6                     l2073:
  1345                           
  1346                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1347  00C6  083A               	movf	sprintf@c,w
  1348  00C7  00AF               	movwf	??_sprintf
  1349  00C8  072F               	addwf	??_sprintf,w
  1350  00C9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1351  00CA  0084               	movwf	4
  1352  00CB  120A  118A  2410  120A  118A  	fcall	stringdir
  1353  00D0  00B0               	movwf	??_sprintf+1
  1354  00D1  120A  118A  2410  120A  118A  	fcall	stringdir
  1355  00D6  00B1               	movwf	??_sprintf+2
  1356  00D7  0831               	movf	??_sprintf+2,w
  1357  00D8  0236               	subwf	sprintf@val+1,w
  1358  00D9  1D03               	skipz
  1359  00DA  28DD               	goto	u1915
  1360  00DB  0830               	movf	??_sprintf+1,w
  1361  00DC  0235               	subwf	sprintf@val,w
  1362  00DD                     u1915:
  1363  00DD  1803               	skipnc
  1364  00DE  28E0               	goto	u1911
  1365  00DF  28E1               	goto	u1910
  1366  00E0                     u1911:
  1367  00E0  28E2               	goto	l2077
  1368  00E1                     u1910:
  1369  00E1  28EC               	goto	l2079
  1370  00E2                     l2077:
  1371  00E2  3001               	movlw	1
  1372  00E3  00AF               	movwf	??_sprintf
  1373  00E4  082F               	movf	??_sprintf,w
  1374  00E5  07BA               	addwf	sprintf@c,f
  1375  00E6  3005               	movlw	5
  1376  00E7  063A               	xorwf	sprintf@c,w
  1377  00E8  1D03               	btfss	3,2
  1378  00E9  28EB               	goto	u1921
  1379  00EA  28EC               	goto	u1920
  1380  00EB                     u1921:
  1381  00EB  28C6               	goto	l2073
  1382  00EC                     u1920:
  1383  00EC                     l2079:
  1384                           
  1385                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1386  00EC  0838               	movf	sprintf@width,w
  1387  00ED  0439               	iorwf	sprintf@width+1,w
  1388  00EE  1903               	btfsc	3,2
  1389  00EF  28F1               	goto	u1931
  1390  00F0  28F2               	goto	u1930
  1391  00F1                     u1931:
  1392  00F1  28FE               	goto	l369
  1393  00F2                     u1930:
  1394  00F2                     l2081:
  1395  00F2  0834               	movf	sprintf@flag,w
  1396  00F3  3903               	andlw	3
  1397  00F4  1903               	btfsc	3,2
  1398  00F5  28F7               	goto	u1941
  1399  00F6  28F8               	goto	u1940
  1400  00F7                     u1941:
  1401  00F7  28FE               	goto	l369
  1402  00F8                     u1940:
  1403  00F8                     l2083:
  1404                           
  1405                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1406  00F8  30FF               	movlw	255
  1407  00F9  07B8               	addwf	sprintf@width,f
  1408  00FA  1803               	skipnc
  1409  00FB  0AB9               	incf	sprintf@width+1,f
  1410  00FC  30FF               	movlw	255
  1411  00FD  07B9               	addwf	sprintf@width+1,f
  1412  00FE                     l369:
  1413                           
  1414                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1415  00FE  0839               	movf	sprintf@width+1,w
  1416  00FF  3A80               	xorlw	128
  1417  0100  3C80               	sublw	128
  1418  0101  1D03               	skipz
  1419  0102  2905               	goto	u1955
  1420  0103  0838               	movf	sprintf@width,w
  1421  0104  023A               	subwf	sprintf@c,w
  1422  0105                     u1955:
  1423  0105  1803               	skipnc
  1424  0106  2908               	goto	u1951
  1425  0107  2909               	goto	u1950
  1426  0108                     u1951:
  1427  0108  2915               	goto	l2087
  1428  0109                     u1950:
  1429  0109                     l2085:
  1430                           
  1431                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1432  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1433  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1434  010B  083A               	movf	sprintf@c,w
  1435  010C  00AF               	movwf	??_sprintf
  1436  010D  01B0               	clrf	??_sprintf+1
  1437  010E  082F               	movf	??_sprintf,w
  1438  010F  02B8               	subwf	sprintf@width,f
  1439  0110  0830               	movf	??_sprintf+1,w
  1440  0111  1C03               	skipc
  1441  0112  03B9               	decf	sprintf@width+1,f
  1442  0113  02B9               	subwf	sprintf@width+1,f
  1443  0114  2919               	goto	l2089
  1444  0115                     l2087:
  1445                           
  1446                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1447  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0117  01B8               	clrf	sprintf@width
  1450  0118  01B9               	clrf	sprintf@width+1
  1451  0119                     l2089:
  1452                           
  1453                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1454  0119  0838               	movf	sprintf@width,w
  1455  011A  0439               	iorwf	sprintf@width+1,w
  1456  011B  1903               	btfsc	3,2
  1457  011C  291E               	goto	u1961
  1458  011D  291F               	goto	u1960
  1459  011E                     u1961:
  1460  011E  2936               	goto	l2097
  1461  011F                     u1960:
  1462  011F                     l2091:
  1463                           
  1464                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1465  011F  3020               	movlw	32
  1466  0120  00AF               	movwf	??_sprintf
  1467  0121  0837               	movf	sprintf@sp,w
  1468  0122  0084               	movwf	4
  1469  0123  082F               	movf	??_sprintf,w
  1470  0124  1383               	bcf	3,7	;select IRP bank0
  1471  0125  0080               	movwf	0
  1472  0126                     l2093:
  1473  0126  3001               	movlw	1
  1474  0127  00AF               	movwf	??_sprintf
  1475  0128  082F               	movf	??_sprintf,w
  1476  0129  07B7               	addwf	sprintf@sp,f
  1477  012A                     l2095:
  1478  012A  30FF               	movlw	255
  1479  012B  07B8               	addwf	sprintf@width,f
  1480  012C  1803               	skipnc
  1481  012D  0AB9               	incf	sprintf@width+1,f
  1482  012E  30FF               	movlw	255
  1483  012F  07B9               	addwf	sprintf@width+1,f
  1484  0130  0838               	movf	sprintf@width,w
  1485  0131  0439               	iorwf	sprintf@width+1,w
  1486  0132  1D03               	btfss	3,2
  1487  0133  2935               	goto	u1971
  1488  0134  2936               	goto	u1970
  1489  0135                     u1971:
  1490  0135  291F               	goto	l2091
  1491  0136                     u1970:
  1492  0136                     l2097:
  1493                           
  1494                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1495  0136  0834               	movf	sprintf@flag,w
  1496  0137  3903               	andlw	3
  1497  0138  1903               	btfsc	3,2
  1498  0139  293B               	goto	u1981
  1499  013A  293C               	goto	u1980
  1500  013B                     u1981:
  1501  013B  2947               	goto	l2103
  1502  013C                     u1980:
  1503  013C                     l2099:
  1504                           
  1505                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1506  013C  302D               	movlw	45
  1507  013D  00AF               	movwf	??_sprintf
  1508  013E  0837               	movf	sprintf@sp,w
  1509  013F  0084               	movwf	4
  1510  0140  082F               	movf	??_sprintf,w
  1511  0141  1383               	bcf	3,7	;select IRP bank0
  1512  0142  0080               	movwf	0
  1513  0143                     l2101:
  1514  0143  3001               	movlw	1
  1515  0144  00AF               	movwf	??_sprintf
  1516  0145  082F               	movf	??_sprintf,w
  1517  0146  07B7               	addwf	sprintf@sp,f
  1518  0147                     l2103:
  1519                           
  1520                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1521  0147  083A               	movf	sprintf@c,w
  1522  0148  00AF               	movwf	??_sprintf
  1523  0149  082F               	movf	??_sprintf,w
  1524  014A  00B3               	movwf	sprintf@prec
  1525                           
  1526                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1527  014B  2987               	goto	l2111
  1528  014C                     l2105:
  1529                           
  1530                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1531  014C  300A               	movlw	10
  1532  014D  00A0               	movwf	___lwmod@divisor
  1533  014E  3000               	movlw	0
  1534  014F  00A1               	movwf	___lwmod@divisor+1
  1535  0150  0833               	movf	sprintf@prec,w
  1536  0151  00AF               	movwf	??_sprintf
  1537  0152  072F               	addwf	??_sprintf,w
  1538  0153  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1539  0154  0084               	movwf	4
  1540  0155  120A  118A  2410  120A  118A  	fcall	stringdir
  1541  015A  00F2               	movwf	___lwdiv@divisor
  1542  015B  120A  118A  2410  120A  118A  	fcall	stringdir
  1543  0160  00F3               	movwf	___lwdiv@divisor+1
  1544  0161  0836               	movf	sprintf@val+1,w
  1545  0162  00F5               	movwf	___lwdiv@dividend+1
  1546  0163  0835               	movf	sprintf@val,w
  1547  0164  00F4               	movwf	___lwdiv@dividend
  1548  0165  120A  118A  24D1  120A  118A  	fcall	___lwdiv
  1549  016A  0873               	movf	?___lwdiv+1,w
  1550  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1551  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1552  016D  00A3               	movwf	___lwmod@dividend+1
  1553  016E  0872               	movf	?___lwdiv,w
  1554  016F  00A2               	movwf	___lwmod@dividend
  1555  0170  120A  118A  2597  120A  118A  	fcall	___lwmod
  1556  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0177  0820               	movf	?___lwmod,w
  1559  0178  3E30               	addlw	48
  1560  0179  00B0               	movwf	??_sprintf+1
  1561  017A  0830               	movf	??_sprintf+1,w
  1562  017B  00BA               	movwf	sprintf@c
  1563  017C                     l2107:
  1564                           
  1565                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1566  017C  083A               	movf	sprintf@c,w
  1567  017D  00AF               	movwf	??_sprintf
  1568  017E  0837               	movf	sprintf@sp,w
  1569  017F  0084               	movwf	4
  1570  0180  082F               	movf	??_sprintf,w
  1571  0181  1383               	bcf	3,7	;select IRP bank0
  1572  0182  0080               	movwf	0
  1573  0183                     l2109:
  1574  0183  3001               	movlw	1
  1575  0184  00AF               	movwf	??_sprintf
  1576  0185  082F               	movf	??_sprintf,w
  1577  0186  07B7               	addwf	sprintf@sp,f
  1578  0187                     l2111:
  1579                           
  1580                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1581  0187  30FF               	movlw	255
  1582  0188  00AF               	movwf	??_sprintf
  1583  0189  082F               	movf	??_sprintf,w
  1584  018A  07B3               	addwf	sprintf@prec,f
  1585  018B  0A33               	incf	sprintf@prec,w
  1586  018C  1D03               	btfss	3,2
  1587  018D  298F               	goto	u1991
  1588  018E  2990               	goto	u1990
  1589  018F                     u1991:
  1590  018F  294C               	goto	l2105
  1591  0190                     u1990:
  1592  0190                     l2113:
  1593                           
  1594                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1595  0190  3001               	movlw	1
  1596  0191  07A6               	addwf	sprintf@f,f
  1597  0192  30FF               	movlw	-1
  1598  0193  0726               	addwf	sprintf@f,w
  1599  0194  0084               	movwf	4
  1600  0195  120A  118A  2410  120A  118A  	fcall	stringdir
  1601  019A  00AF               	movwf	??_sprintf
  1602  019B  082F               	movf	??_sprintf,w
  1603  019C  00BA               	movwf	sprintf@c
  1604  019D  083A               	movf	sprintf@c,w
  1605  019E  1D03               	btfss	3,2
  1606  019F  29A1               	goto	u2001
  1607  01A0  29A2               	goto	u2000
  1608  01A1                     u2001:
  1609  01A1  2827               	goto	l2033
  1610  01A2                     u2000:
  1611  01A2                     l2115:
  1612                           
  1613                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1614  01A2  0837               	movf	sprintf@sp,w
  1615  01A3  0084               	movwf	4
  1616  01A4  1383               	bcf	3,7	;select IRP bank0
  1617  01A5  0180               	clrf	0
  1618  01A6                     l380:
  1619  01A6  0008               	return
  1620  01A7                     __end_of_sprintf:
  1621                           
  1622                           	psect	text2
  1623  0679                     __ptext2:	
  1624 ;; *************** function _isdigit *****************
  1625 ;; Defined at:
  1626 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  c               1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  c               1    3[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;		None               void
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         2       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         2       0       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_sprintf
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _isdigit
  1656  0679                     _isdigit:
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1660                           ;isdigit@c stored from wreg
  1661  0679  00F3               	movwf	isdigit@c
  1662  067A                     l1441:
  1663  067A  01F2               	clrf	_isdigit$787
  1664  067B                     l1443:
  1665  067B  303A               	movlw	58
  1666  067C  0273               	subwf	isdigit@c,w
  1667  067D  1803               	skipnc
  1668  067E  2E80               	goto	u861
  1669  067F  2E81               	goto	u860
  1670  0680                     u861:
  1671  0680  2E89               	goto	l1449
  1672  0681                     u860:
  1673  0681                     l1445:
  1674  0681  3030               	movlw	48
  1675  0682  0273               	subwf	isdigit@c,w
  1676  0683  1C03               	skipc
  1677  0684  2E86               	goto	u871
  1678  0685  2E87               	goto	u870
  1679  0686                     u871:
  1680  0686  2E89               	goto	l1449
  1681  0687                     u870:
  1682  0687                     l1447:
  1683  0687  01F2               	clrf	_isdigit$787
  1684  0688  0AF2               	incf	_isdigit$787,f
  1685  0689                     l1449:
  1686  0689  0C72               	rrf	_isdigit$787,w
  1687  068A                     l837:
  1688  068A  0008               	return
  1689  068B                     __end_of_isdigit:
  1690                           
  1691                           	psect	text3
  1692  05D3                     __ptext3:	
  1693 ;; *************** function ___wmul *****************
  1694 ;; Defined at:
  1695 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  multiplier      2    2[COMMON] unsigned int 
  1698 ;;  multiplicand    2    4[COMMON] unsigned int 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  product         2    6[COMMON] unsigned int 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  2    2[COMMON] unsigned int 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         4       0       0       0       0
  1711 ;;      Locals:         2       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         6       0       0       0       0
  1714 ;;Total ram usage:        6 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_sprintf
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function ___wmul
  1726  05D3                     ___wmul:
  1727  05D3                     l1453:	
  1728                           ;incstack = 0
  1729                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1730                           
  1731  05D3  01F6               	clrf	___wmul@product
  1732  05D4  01F7               	clrf	___wmul@product+1
  1733  05D5                     l1455:
  1734  05D5  1C72               	btfss	___wmul@multiplier,0
  1735  05D6  2DD8               	goto	u881
  1736  05D7  2DD9               	goto	u880
  1737  05D8                     u881:
  1738  05D8  2DDF               	goto	l384
  1739  05D9                     u880:
  1740  05D9                     l1457:
  1741  05D9  0874               	movf	___wmul@multiplicand,w
  1742  05DA  07F6               	addwf	___wmul@product,f
  1743  05DB  1803               	skipnc
  1744  05DC  0AF7               	incf	___wmul@product+1,f
  1745  05DD  0875               	movf	___wmul@multiplicand+1,w
  1746  05DE  07F7               	addwf	___wmul@product+1,f
  1747  05DF                     l384:
  1748  05DF  3001               	movlw	1
  1749  05E0                     u895:
  1750  05E0  1003               	clrc
  1751  05E1  0DF4               	rlf	___wmul@multiplicand,f
  1752  05E2  0DF5               	rlf	___wmul@multiplicand+1,f
  1753  05E3  3EFF               	addlw	-1
  1754  05E4  1D03               	skipz
  1755  05E5  2DE0               	goto	u895
  1756  05E6                     l1459:
  1757  05E6  3001               	movlw	1
  1758  05E7                     u905:
  1759  05E7  1003               	clrc
  1760  05E8  0CF3               	rrf	___wmul@multiplier+1,f
  1761  05E9  0CF2               	rrf	___wmul@multiplier,f
  1762  05EA  3EFF               	addlw	-1
  1763  05EB  1D03               	skipz
  1764  05EC  2DE7               	goto	u905
  1765  05ED                     l1461:
  1766  05ED  0872               	movf	___wmul@multiplier,w
  1767  05EE  0473               	iorwf	___wmul@multiplier+1,w
  1768  05EF  1D03               	btfss	3,2
  1769  05F0  2DF2               	goto	u911
  1770  05F1  2DF3               	goto	u910
  1771  05F2                     u911:
  1772  05F2  2DD5               	goto	l1455
  1773  05F3                     u910:
  1774  05F3                     l1463:
  1775  05F3  0877               	movf	___wmul@product+1,w
  1776  05F4  00F3               	movwf	?___wmul+1
  1777  05F5  0876               	movf	___wmul@product,w
  1778  05F6  00F2               	movwf	?___wmul
  1779  05F7                     l386:
  1780  05F7  0008               	return
  1781  05F8                     __end_of___wmul:
  1782                           
  1783                           	psect	text4
  1784  0597                     __ptext4:	
  1785 ;; *************** function ___lwmod *****************
  1786 ;; Defined at:
  1787 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  divisor         2    0[BANK0 ] unsigned int 
  1790 ;;  dividend        2    2[BANK0 ] unsigned int 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  counter         1    5[BANK0 ] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    0[BANK0 ] unsigned int 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         0       4       0       0       0
  1803 ;;      Locals:         0       1       0       0       0
  1804 ;;      Temps:          0       1       0       0       0
  1805 ;;      Totals:         0       6       0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_sprintf
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function ___lwmod
  1818  0597                     ___lwmod:
  1819  0597                     l1947:	
  1820                           ;incstack = 0
  1821                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1822                           
  1823  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0599  0820               	movf	___lwmod@divisor,w
  1826  059A  0421               	iorwf	___lwmod@divisor+1,w
  1827  059B  1903               	btfsc	3,2
  1828  059C  2D9E               	goto	u1681
  1829  059D  2D9F               	goto	u1680
  1830  059E                     u1681:
  1831  059E  2DCE               	goto	l1965
  1832  059F                     u1680:
  1833  059F                     l1949:
  1834  059F  01A5               	clrf	___lwmod@counter
  1835  05A0  0AA5               	incf	___lwmod@counter,f
  1836  05A1  2DAD               	goto	l1955
  1837  05A2                     l1951:
  1838  05A2  3001               	movlw	1
  1839  05A3                     u1695:
  1840  05A3  1003               	clrc
  1841  05A4  0DA0               	rlf	___lwmod@divisor,f
  1842  05A5  0DA1               	rlf	___lwmod@divisor+1,f
  1843  05A6  3EFF               	addlw	-1
  1844  05A7  1D03               	skipz
  1845  05A8  2DA3               	goto	u1695
  1846  05A9                     l1953:
  1847  05A9  3001               	movlw	1
  1848  05AA  00A4               	movwf	??___lwmod
  1849  05AB  0824               	movf	??___lwmod,w
  1850  05AC  07A5               	addwf	___lwmod@counter,f
  1851  05AD                     l1955:
  1852  05AD  1FA1               	btfss	___lwmod@divisor+1,7
  1853  05AE  2DB0               	goto	u1701
  1854  05AF  2DB1               	goto	u1700
  1855  05B0                     u1701:
  1856  05B0  2DA2               	goto	l1951
  1857  05B1                     u1700:
  1858  05B1                     l1957:
  1859  05B1  0821               	movf	___lwmod@divisor+1,w
  1860  05B2  0223               	subwf	___lwmod@dividend+1,w
  1861  05B3  1D03               	skipz
  1862  05B4  2DB7               	goto	u1715
  1863  05B5  0820               	movf	___lwmod@divisor,w
  1864  05B6  0222               	subwf	___lwmod@dividend,w
  1865  05B7                     u1715:
  1866  05B7  1C03               	skipc
  1867  05B8  2DBA               	goto	u1711
  1868  05B9  2DBB               	goto	u1710
  1869  05BA                     u1711:
  1870  05BA  2DC1               	goto	l1961
  1871  05BB                     u1710:
  1872  05BB                     l1959:
  1873  05BB  0820               	movf	___lwmod@divisor,w
  1874  05BC  02A2               	subwf	___lwmod@dividend,f
  1875  05BD  0821               	movf	___lwmod@divisor+1,w
  1876  05BE  1C03               	skipc
  1877  05BF  03A3               	decf	___lwmod@dividend+1,f
  1878  05C0  02A3               	subwf	___lwmod@dividend+1,f
  1879  05C1                     l1961:
  1880  05C1  3001               	movlw	1
  1881  05C2                     u1725:
  1882  05C2  1003               	clrc
  1883  05C3  0CA1               	rrf	___lwmod@divisor+1,f
  1884  05C4  0CA0               	rrf	___lwmod@divisor,f
  1885  05C5  3EFF               	addlw	-1
  1886  05C6  1D03               	skipz
  1887  05C7  2DC2               	goto	u1725
  1888  05C8                     l1963:
  1889  05C8  3001               	movlw	1
  1890  05C9  02A5               	subwf	___lwmod@counter,f
  1891  05CA  1D03               	btfss	3,2
  1892  05CB  2DCD               	goto	u1731
  1893  05CC  2DCE               	goto	u1730
  1894  05CD                     u1731:
  1895  05CD  2DB1               	goto	l1957
  1896  05CE                     u1730:
  1897  05CE                     l1965:
  1898  05CE  0823               	movf	___lwmod@dividend+1,w
  1899  05CF  00A1               	movwf	?___lwmod+1
  1900  05D0  0822               	movf	___lwmod@dividend,w
  1901  05D1  00A0               	movwf	?___lwmod
  1902  05D2                     l666:
  1903  05D2  0008               	return
  1904  05D3                     __end_of___lwmod:
  1905                           
  1906                           	psect	text5
  1907  04D1                     __ptext5:	
  1908 ;; *************** function ___lwdiv *****************
  1909 ;; Defined at:
  1910 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  divisor         2    2[COMMON] unsigned int 
  1913 ;;  dividend        2    4[COMMON] unsigned int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  quotient        2    7[COMMON] unsigned int 
  1916 ;;  counter         1    9[COMMON] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2    2[COMMON] unsigned int 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         4       0       0       0       0
  1927 ;;      Locals:         3       0       0       0       0
  1928 ;;      Temps:          1       0       0       0       0
  1929 ;;      Totals:         8       0       0       0       0
  1930 ;;Total ram usage:        8 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_sprintf
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function ___lwdiv
  1942  04D1                     ___lwdiv:
  1943  04D1                     l1507:	
  1944                           ;incstack = 0
  1945                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1946                           
  1947  04D1  01F7               	clrf	___lwdiv@quotient
  1948  04D2  01F8               	clrf	___lwdiv@quotient+1
  1949  04D3                     l1509:
  1950  04D3  0872               	movf	___lwdiv@divisor,w
  1951  04D4  0473               	iorwf	___lwdiv@divisor+1,w
  1952  04D5  1903               	btfsc	3,2
  1953  04D6  2CD8               	goto	u1021
  1954  04D7  2CD9               	goto	u1020
  1955  04D8                     u1021:
  1956  04D8  2D10               	goto	l1529
  1957  04D9                     u1020:
  1958  04D9                     l1511:
  1959  04D9  01F9               	clrf	___lwdiv@counter
  1960  04DA  0AF9               	incf	___lwdiv@counter,f
  1961  04DB  2CE7               	goto	l1517
  1962  04DC                     l1513:
  1963  04DC  3001               	movlw	1
  1964  04DD                     u1035:
  1965  04DD  1003               	clrc
  1966  04DE  0DF2               	rlf	___lwdiv@divisor,f
  1967  04DF  0DF3               	rlf	___lwdiv@divisor+1,f
  1968  04E0  3EFF               	addlw	-1
  1969  04E1  1D03               	skipz
  1970  04E2  2CDD               	goto	u1035
  1971  04E3                     l1515:
  1972  04E3  3001               	movlw	1
  1973  04E4  00F6               	movwf	??___lwdiv
  1974  04E5  0876               	movf	??___lwdiv,w
  1975  04E6  07F9               	addwf	___lwdiv@counter,f
  1976  04E7                     l1517:
  1977  04E7  1FF3               	btfss	___lwdiv@divisor+1,7
  1978  04E8  2CEA               	goto	u1041
  1979  04E9  2CEB               	goto	u1040
  1980  04EA                     u1041:
  1981  04EA  2CDC               	goto	l1513
  1982  04EB                     u1040:
  1983  04EB                     l1519:
  1984  04EB  3001               	movlw	1
  1985  04EC                     u1055:
  1986  04EC  1003               	clrc
  1987  04ED  0DF7               	rlf	___lwdiv@quotient,f
  1988  04EE  0DF8               	rlf	___lwdiv@quotient+1,f
  1989  04EF  3EFF               	addlw	-1
  1990  04F0  1D03               	skipz
  1991  04F1  2CEC               	goto	u1055
  1992  04F2  0873               	movf	___lwdiv@divisor+1,w
  1993  04F3  0275               	subwf	___lwdiv@dividend+1,w
  1994  04F4  1D03               	skipz
  1995  04F5  2CF8               	goto	u1065
  1996  04F6  0872               	movf	___lwdiv@divisor,w
  1997  04F7  0274               	subwf	___lwdiv@dividend,w
  1998  04F8                     u1065:
  1999  04F8  1C03               	skipc
  2000  04F9  2CFB               	goto	u1061
  2001  04FA  2CFC               	goto	u1060
  2002  04FB                     u1061:
  2003  04FB  2D03               	goto	l1525
  2004  04FC                     u1060:
  2005  04FC                     l1521:
  2006  04FC  0872               	movf	___lwdiv@divisor,w
  2007  04FD  02F4               	subwf	___lwdiv@dividend,f
  2008  04FE  0873               	movf	___lwdiv@divisor+1,w
  2009  04FF  1C03               	skipc
  2010  0500  03F5               	decf	___lwdiv@dividend+1,f
  2011  0501  02F5               	subwf	___lwdiv@dividend+1,f
  2012  0502                     l1523:
  2013  0502  1477               	bsf	___lwdiv@quotient,0
  2014  0503                     l1525:
  2015  0503  3001               	movlw	1
  2016  0504                     u1075:
  2017  0504  1003               	clrc
  2018  0505  0CF3               	rrf	___lwdiv@divisor+1,f
  2019  0506  0CF2               	rrf	___lwdiv@divisor,f
  2020  0507  3EFF               	addlw	-1
  2021  0508  1D03               	skipz
  2022  0509  2D04               	goto	u1075
  2023  050A                     l1527:
  2024  050A  3001               	movlw	1
  2025  050B  02F9               	subwf	___lwdiv@counter,f
  2026  050C  1D03               	btfss	3,2
  2027  050D  2D0F               	goto	u1081
  2028  050E  2D10               	goto	u1080
  2029  050F                     u1081:
  2030  050F  2CEB               	goto	l1519
  2031  0510                     u1080:
  2032  0510                     l1529:
  2033  0510  0878               	movf	___lwdiv@quotient+1,w
  2034  0511  00F3               	movwf	?___lwdiv+1
  2035  0512  0877               	movf	___lwdiv@quotient,w
  2036  0513  00F2               	movwf	?___lwdiv
  2037  0514                     l656:
  2038  0514  0008               	return
  2039  0515                     __end_of___lwdiv:
  2040                           
  2041                           	psect	text6
  2042  06B5                     __ptext6:	
  2043 ;; *************** function _spiWrite *****************
  2044 ;; Defined at:
  2045 ;;		line 71 in file "./spi.h"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  dat             1    wreg     unsigned char 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  dat             1    2[COMMON] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0
  2062 ;;      Totals:         1       0       0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _spiWrite
  2075  06B5                     _spiWrite:
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in _spiWrite: [wreg]
  2079                           ;spiWrite@dat stored from wreg
  2080  06B5  00F2               	movwf	spiWrite@dat
  2081  06B6                     l1565:
  2082                           
  2083                           ;./spi.h: 71: void spiWrite(char dat);./spi.h: 72: {;./spi.h: 73:     SSPBUF = dat;
  2084  06B6  0872               	movf	spiWrite@dat,w
  2085  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2086  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2087  06B9  0093               	movwf	19	;volatile
  2088  06BA                     l100:
  2089  06BA  0008               	return
  2090  06BB                     __end_of_spiWrite:
  2091                           
  2092                           	psect	text7
  2093  06A5                     __ptext7:	
  2094 ;; *************** function _spiRead *****************
  2095 ;; Defined at:
  2096 ;;		line 84 in file "./spi.h"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      unsigned char 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		_spiReceiveWait
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _spiRead
  2126  06A5                     _spiRead:
  2127  06A5                     l1567:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;./spi.h: 86:     spiReceiveWait();
  2133  06A5  120A  118A  26AE  120A  118A  	fcall	_spiReceiveWait
  2134  06AA                     l1569:
  2135                           
  2136                           ;./spi.h: 87:     return(SSPBUF);
  2137  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2138  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2139  06AC  0813               	movf	19,w	;volatile
  2140  06AD                     l108:
  2141  06AD  0008               	return
  2142  06AE                     __end_of_spiRead:
  2143                           
  2144                           	psect	text8
  2145  06AE                     __ptext8:	
  2146 ;; *************** function _spiReceiveWait *****************
  2147 ;; Defined at:
  2148 ;;		line 66 in file "./spi.h"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		None
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         0       0       0       0       0
  2166 ;;Total ram usage:        0 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_spiRead
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _spiReceiveWait
  2178  06AE                     _spiReceiveWait:
  2179  06AE                     l1419:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _spiReceiveWait: []
  2182                           
  2183  06AE                     l94:	
  2184                           ;./spi.h: 68:     while ( !SSPSTATbits.BF );
  2185                           
  2186  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2187  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2188  06B0  1C14               	btfss	20,0	;volatile
  2189  06B1  2EB3               	goto	u851
  2190  06B2  2EB4               	goto	u850
  2191  06B3                     u851:
  2192  06B3  2EAE               	goto	l94
  2193  06B4                     u850:
  2194  06B4                     l97:
  2195  06B4  0008               	return
  2196  06B5                     __end_of_spiReceiveWait:
  2197                           
  2198                           	psect	text9
  2199  0650                     __ptext9:	
  2200 ;; *************** function _spiInit *****************
  2201 ;; Defined at:
  2202 ;;		line 49 in file "./spi.h"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  sType           1    wreg     enum E1349
  2205 ;;  sDataSample     1    2[COMMON] enum E1357
  2206 ;;  sClockIdle      1    3[COMMON] enum E1361
  2207 ;;  sTransmitEdg    1    4[COMMON] enum E1365
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  sType           1    5[COMMON] enum E1349
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         3       0       0       0       0
  2220 ;;      Locals:         1       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0
  2222 ;;      Totals:         4       0       0       0       0
  2223 ;;Total ram usage:        4 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_main
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _spiInit
  2235  0650                     _spiInit:
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2239                           ;spiInit@sType stored from wreg
  2240  0650  00F5               	movwf	spiInit@sType
  2241  0651                     l1555:
  2242                           
  2243                           ;./spi.h: 49: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);./spi.h: 50: {;./spi.h: 51:     TRISC5 = 0;
  2244  0651  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0652  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0653  1287               	bcf	7,5	;volatile
  2247                           
  2248                           ;./spi.h: 52:     if(sType & 0b00000100)
  2249  0654  1D75               	btfss	spiInit@sType,2
  2250  0655  2E57               	goto	u1151
  2251  0656  2E58               	goto	u1150
  2252  0657                     u1151:
  2253  0657  2E5C               	goto	l1561
  2254  0658                     u1150:
  2255  0658                     l1557:
  2256                           
  2257                           ;./spi.h: 53:     {;./spi.h: 54:         SSPSTAT = sTransmitEdge;
  2258  0658  0874               	movf	spiInit@sTransmitEdge,w
  2259  0659  0094               	movwf	20	;volatile
  2260  065A                     l1559:
  2261                           
  2262                           ;./spi.h: 55:         TRISC3 = 1;
  2263  065A  1587               	bsf	7,3	;volatile
  2264                           
  2265                           ;./spi.h: 56:     }
  2266  065B  2E60               	goto	l90
  2267  065C                     l1561:
  2268                           
  2269                           ;./spi.h: 58:     {;./spi.h: 59:         SSPSTAT = sDataSample | sTransmitEdge;
  2270  065C  0872               	movf	spiInit@sDataSample,w
  2271  065D  0474               	iorwf	spiInit@sTransmitEdge,w
  2272  065E  0094               	movwf	20	;volatile
  2273  065F                     l1563:
  2274                           
  2275                           ;./spi.h: 60:         TRISC3 = 0;
  2276  065F  1187               	bcf	7,3	;volatile
  2277  0660                     l90:	
  2278                           ;./spi.h: 61:     }
  2279                           
  2280                           
  2281                           ;./spi.h: 63:     SSPCON = sType | sClockIdle;
  2282  0660  0875               	movf	spiInit@sType,w
  2283  0661  0473               	iorwf	spiInit@sClockIdle,w
  2284  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0664  0094               	movwf	20	;volatile
  2287  0665                     l91:
  2288  0665  0008               	return
  2289  0666                     __end_of_spiInit:
  2290                           
  2291                           	psect	text10
  2292  0666                     __ptext10:	
  2293 ;; *************** function _setup *****************
  2294 ;; Defined at:
  2295 ;;		line 121 in file "Master.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _setup
  2325  0666                     _setup:
  2326  0666                     l1639:	
  2327                           ;incstack = 0
  2328                           ; Regs used in _setup: [wreg+status,2]
  2329                           
  2330                           
  2331                           ;Master.c: 122:     TRISA = 0b00000000;
  2332  0666  1683               	bsf	3,5	;RP0=1, select bank1
  2333  0667  1303               	bcf	3,6	;RP1=0, select bank1
  2334  0668  0185               	clrf	5	;volatile
  2335                           
  2336                           ;Master.c: 123:     TRISB = 0b00000000;
  2337  0669  0186               	clrf	6	;volatile
  2338                           
  2339                           ;Master.c: 124:     TRISD = 0b00000000;
  2340  066A  0188               	clrf	8	;volatile
  2341                           
  2342                           ;Master.c: 125:     TRISE = 0b00000000;
  2343  066B  0189               	clrf	9	;volatile
  2344                           
  2345                           ;Master.c: 126:     ANSEL = 0b00000000;
  2346  066C  1683               	bsf	3,5	;RP0=1, select bank3
  2347  066D  1703               	bsf	3,6	;RP1=1, select bank3
  2348  066E  0188               	clrf	8	;volatile
  2349                           
  2350                           ;Master.c: 127:     ANSELH = 0b00000000;
  2351  066F  0189               	clrf	9	;volatile
  2352  0670                     l1641:
  2353                           
  2354                           ;Master.c: 128:     INTCON = 0b11000000;
  2355  0670  30C0               	movlw	192
  2356  0671  008B               	movwf	11	;volatile
  2357  0672                     l1643:
  2358                           
  2359                           ;Master.c: 129:     PORTA = 0;
  2360  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0674  0185               	clrf	5	;volatile
  2363                           
  2364                           ;Master.c: 130:     PORTB = 0x0F;
  2365  0675  300F               	movlw	15
  2366  0676  0086               	movwf	6	;volatile
  2367  0677                     l1645:
  2368                           
  2369                           ;Master.c: 131:     PORTD = 0;
  2370  0677  0188               	clrf	8	;volatile
  2371  0678                     l253:
  2372  0678  0008               	return
  2373  0679                     __end_of_setup:
  2374                           
  2375                           	psect	text11
  2376  0699                     __ptext11:	
  2377 ;; *************** function _UART_Write *****************
  2378 ;; Defined at:
  2379 ;;		line 39 in file "./UARTlib.h"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  data            1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  data            1    2[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         1       0       0       0       0
  2397 ;;Total ram usage:        1 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    1
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;;		_UART_Write_Text
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _UART_Write
  2410  0699                     _UART_Write:
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _UART_Write: [wreg]
  2414                           ;UART_Write@data stored from wreg
  2415  0699  00F2               	movwf	UART_Write@data
  2416  069A                     l1635:
  2417  069A                     l190:	
  2418                           ;./UARTlib.h: 40:   while(!TRMT);
  2419                           
  2420  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2421  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2422  069C  1C98               	btfss	24,1	;volatile
  2423  069D  2E9F               	goto	u1291
  2424  069E  2EA0               	goto	u1290
  2425  069F                     u1291:
  2426  069F  2E9A               	goto	l190
  2427  06A0                     u1290:
  2428  06A0                     l1637:
  2429                           
  2430                           ;./UARTlib.h: 41:   TXREG = data;
  2431  06A0  0872               	movf	UART_Write@data,w
  2432  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2433  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2434  06A3  0099               	movwf	25	;volatile
  2435  06A4                     l193:
  2436  06A4  0008               	return
  2437  06A5                     __end_of_UART_Write:
  2438                           
  2439                           	psect	text12
  2440  028C                     __ptext12:	
  2441 ;; *************** function _UART_Init *****************
  2442 ;; Defined at:
  2443 ;;		line 1 in file "./UARTlib.h"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  baudrate        4    7[BANK0 ] const long 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  x               2   23[BANK0 ] unsigned int 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      unsigned char 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, pclath, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         0       4       0       0       0
  2458 ;;      Locals:         0       2       0       0       0
  2459 ;;      Temps:          0      12       0       0       0
  2460 ;;      Totals:         0      18       0       0       0
  2461 ;;Total ram usage:       18 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    2
  2464 ;; This function calls:
  2465 ;;		___aldiv
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _UART_Init
  2473  028C                     _UART_Init:
  2474  028C                     l2005:	
  2475                           ;incstack = 0
  2476                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2477                           
  2478                           
  2479                           ;./UARTlib.h: 2:  unsigned int x;;./UARTlib.h: 3:  x = (8000000 - baudrate*64)/(baudrate
      +                          *64);
  2480  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2481  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2482  028E  0827               	movf	UART_Init@baudrate,w
  2483  028F  00AB               	movwf	??_UART_Init
  2484  0290  0828               	movf	UART_Init@baudrate+1,w
  2485  0291  00AC               	movwf	??_UART_Init+1
  2486  0292  0829               	movf	UART_Init@baudrate+2,w
  2487  0293  00AD               	movwf	??_UART_Init+2
  2488  0294  082A               	movf	UART_Init@baudrate+3,w
  2489  0295  00AE               	movwf	??_UART_Init+3
  2490  0296  3006               	movlw	6
  2491  0297                     u1795:
  2492  0297  1003               	clrc
  2493  0298  0DAB               	rlf	??_UART_Init,f
  2494  0299  0DAC               	rlf	??_UART_Init+1,f
  2495  029A  0DAD               	rlf	??_UART_Init+2,f
  2496  029B  0DAE               	rlf	??_UART_Init+3,f
  2497  029C                     u1790:
  2498  029C  3EFF               	addlw	-1
  2499  029D  1D03               	skipz
  2500  029E  2A97               	goto	u1795
  2501  029F  082E               	movf	??_UART_Init+3,w
  2502  02A0  00F5               	movwf	___aldiv@divisor+3
  2503  02A1  082D               	movf	??_UART_Init+2,w
  2504  02A2  00F4               	movwf	___aldiv@divisor+2
  2505  02A3  082C               	movf	??_UART_Init+1,w
  2506  02A4  00F3               	movwf	___aldiv@divisor+1
  2507  02A5  082B               	movf	??_UART_Init,w
  2508  02A6  00F2               	movwf	___aldiv@divisor
  2509  02A7  0827               	movf	UART_Init@baudrate,w
  2510  02A8  00AF               	movwf	??_UART_Init+4
  2511  02A9  0828               	movf	UART_Init@baudrate+1,w
  2512  02AA  00B0               	movwf	??_UART_Init+5
  2513  02AB  0829               	movf	UART_Init@baudrate+2,w
  2514  02AC  00B1               	movwf	??_UART_Init+6
  2515  02AD  082A               	movf	UART_Init@baudrate+3,w
  2516  02AE  00B2               	movwf	??_UART_Init+7
  2517  02AF  3006               	movlw	6
  2518  02B0                     u1805:
  2519  02B0  1003               	clrc
  2520  02B1  0DAF               	rlf	??_UART_Init+4,f
  2521  02B2  0DB0               	rlf	??_UART_Init+5,f
  2522  02B3  0DB1               	rlf	??_UART_Init+6,f
  2523  02B4  0DB2               	rlf	??_UART_Init+7,f
  2524  02B5                     u1800:
  2525  02B5  3EFF               	addlw	-1
  2526  02B6  1D03               	skipz
  2527  02B7  2AB0               	goto	u1805
  2528  02B8  3000               	movlw	0
  2529  02B9  00B3               	movwf	??_UART_Init+8
  2530  02BA  3012               	movlw	18
  2531  02BB  00B4               	movwf	??_UART_Init+9
  2532  02BC  307A               	movlw	122
  2533  02BD  00B5               	movwf	??_UART_Init+10
  2534  02BE  3000               	movlw	0
  2535  02BF  00B6               	movwf	??_UART_Init+11
  2536  02C0  082F               	movf	??_UART_Init+4,w
  2537  02C1  02B3               	subwf	??_UART_Init+8,f
  2538  02C2  0830               	movf	??_UART_Init+5,w
  2539  02C3  1C03               	skipc
  2540  02C4  0F30               	incfsz	??_UART_Init+5,w
  2541  02C5  2AC7               	goto	u1811
  2542  02C6  2AC8               	goto	u1812
  2543  02C7                     u1811:
  2544  02C7  02B4               	subwf	??_UART_Init+9,f
  2545  02C8                     u1812:
  2546  02C8  0831               	movf	??_UART_Init+6,w
  2547  02C9  1C03               	skipc
  2548  02CA  0F31               	incfsz	??_UART_Init+6,w
  2549  02CB  2ACD               	goto	u1813
  2550  02CC  2ACE               	goto	u1814
  2551  02CD                     u1813:
  2552  02CD  02B5               	subwf	??_UART_Init+10,f
  2553  02CE                     u1814:
  2554  02CE  0832               	movf	??_UART_Init+7,w
  2555  02CF  1C03               	skipc
  2556  02D0  0F32               	incfsz	??_UART_Init+7,w
  2557  02D1  2AD3               	goto	u1815
  2558  02D2  2AD4               	goto	u1816
  2559  02D3                     u1815:
  2560  02D3  02B6               	subwf	??_UART_Init+11,f
  2561  02D4                     u1816:
  2562  02D4  0836               	movf	??_UART_Init+11,w
  2563  02D5  00F9               	movwf	___aldiv@dividend+3
  2564  02D6  0835               	movf	??_UART_Init+10,w
  2565  02D7  00F8               	movwf	___aldiv@dividend+2
  2566  02D8  0834               	movf	??_UART_Init+9,w
  2567  02D9  00F7               	movwf	___aldiv@dividend+1
  2568  02DA  0833               	movf	??_UART_Init+8,w
  2569  02DB  00F6               	movwf	___aldiv@dividend
  2570  02DC  120A  118A  2369  120A  118A  	fcall	___aldiv
  2571  02E1  0873               	movf	?___aldiv+1,w
  2572  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2573  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2574  02E4  00B8               	movwf	UART_Init@x+1
  2575  02E5  0872               	movf	?___aldiv,w
  2576  02E6  00B7               	movwf	UART_Init@x
  2577  02E7                     l2007:
  2578                           
  2579                           ;./UARTlib.h: 4:  if(x>255){
  2580  02E7  3001               	movlw	1
  2581  02E8  0238               	subwf	UART_Init@x+1,w
  2582  02E9  3000               	movlw	0
  2583  02EA  1903               	skipnz
  2584  02EB  0237               	subwf	UART_Init@x,w
  2585  02EC  1C03               	skipc
  2586  02ED  2AEF               	goto	u1821
  2587  02EE  2AF0               	goto	u1820
  2588  02EF                     u1821:
  2589  02EF  2B4C               	goto	l2013
  2590  02F0                     u1820:
  2591  02F0                     l2009:
  2592                           
  2593                           ;./UARTlib.h: 5:   x = (8000000 - baudrate*16)/(baudrate*16);
  2594  02F0  0827               	movf	UART_Init@baudrate,w
  2595  02F1  00AB               	movwf	??_UART_Init
  2596  02F2  0828               	movf	UART_Init@baudrate+1,w
  2597  02F3  00AC               	movwf	??_UART_Init+1
  2598  02F4  0829               	movf	UART_Init@baudrate+2,w
  2599  02F5  00AD               	movwf	??_UART_Init+2
  2600  02F6  082A               	movf	UART_Init@baudrate+3,w
  2601  02F7  00AE               	movwf	??_UART_Init+3
  2602  02F8  3004               	movlw	4
  2603  02F9                     u1835:
  2604  02F9  1003               	clrc
  2605  02FA  0DAB               	rlf	??_UART_Init,f
  2606  02FB  0DAC               	rlf	??_UART_Init+1,f
  2607  02FC  0DAD               	rlf	??_UART_Init+2,f
  2608  02FD  0DAE               	rlf	??_UART_Init+3,f
  2609  02FE                     u1830:
  2610  02FE  3EFF               	addlw	-1
  2611  02FF  1D03               	skipz
  2612  0300  2AF9               	goto	u1835
  2613  0301  082E               	movf	??_UART_Init+3,w
  2614  0302  00F5               	movwf	___aldiv@divisor+3
  2615  0303  082D               	movf	??_UART_Init+2,w
  2616  0304  00F4               	movwf	___aldiv@divisor+2
  2617  0305  082C               	movf	??_UART_Init+1,w
  2618  0306  00F3               	movwf	___aldiv@divisor+1
  2619  0307  082B               	movf	??_UART_Init,w
  2620  0308  00F2               	movwf	___aldiv@divisor
  2621  0309  0827               	movf	UART_Init@baudrate,w
  2622  030A  00AF               	movwf	??_UART_Init+4
  2623  030B  0828               	movf	UART_Init@baudrate+1,w
  2624  030C  00B0               	movwf	??_UART_Init+5
  2625  030D  0829               	movf	UART_Init@baudrate+2,w
  2626  030E  00B1               	movwf	??_UART_Init+6
  2627  030F  082A               	movf	UART_Init@baudrate+3,w
  2628  0310  00B2               	movwf	??_UART_Init+7
  2629  0311  3004               	movlw	4
  2630  0312                     u1845:
  2631  0312  1003               	clrc
  2632  0313  0DAF               	rlf	??_UART_Init+4,f
  2633  0314  0DB0               	rlf	??_UART_Init+5,f
  2634  0315  0DB1               	rlf	??_UART_Init+6,f
  2635  0316  0DB2               	rlf	??_UART_Init+7,f
  2636  0317                     u1840:
  2637  0317  3EFF               	addlw	-1
  2638  0318  1D03               	skipz
  2639  0319  2B12               	goto	u1845
  2640  031A  3000               	movlw	0
  2641  031B  00B3               	movwf	??_UART_Init+8
  2642  031C  3012               	movlw	18
  2643  031D  00B4               	movwf	??_UART_Init+9
  2644  031E  307A               	movlw	122
  2645  031F  00B5               	movwf	??_UART_Init+10
  2646  0320  3000               	movlw	0
  2647  0321  00B6               	movwf	??_UART_Init+11
  2648  0322  082F               	movf	??_UART_Init+4,w
  2649  0323  02B3               	subwf	??_UART_Init+8,f
  2650  0324  0830               	movf	??_UART_Init+5,w
  2651  0325  1C03               	skipc
  2652  0326  0F30               	incfsz	??_UART_Init+5,w
  2653  0327  2B29               	goto	u1851
  2654  0328  2B2A               	goto	u1852
  2655  0329                     u1851:
  2656  0329  02B4               	subwf	??_UART_Init+9,f
  2657  032A                     u1852:
  2658  032A  0831               	movf	??_UART_Init+6,w
  2659  032B  1C03               	skipc
  2660  032C  0F31               	incfsz	??_UART_Init+6,w
  2661  032D  2B2F               	goto	u1853
  2662  032E  2B30               	goto	u1854
  2663  032F                     u1853:
  2664  032F  02B5               	subwf	??_UART_Init+10,f
  2665  0330                     u1854:
  2666  0330  0832               	movf	??_UART_Init+7,w
  2667  0331  1C03               	skipc
  2668  0332  0F32               	incfsz	??_UART_Init+7,w
  2669  0333  2B35               	goto	u1855
  2670  0334  2B36               	goto	u1856
  2671  0335                     u1855:
  2672  0335  02B6               	subwf	??_UART_Init+11,f
  2673  0336                     u1856:
  2674  0336  0836               	movf	??_UART_Init+11,w
  2675  0337  00F9               	movwf	___aldiv@dividend+3
  2676  0338  0835               	movf	??_UART_Init+10,w
  2677  0339  00F8               	movwf	___aldiv@dividend+2
  2678  033A  0834               	movf	??_UART_Init+9,w
  2679  033B  00F7               	movwf	___aldiv@dividend+1
  2680  033C  0833               	movf	??_UART_Init+8,w
  2681  033D  00F6               	movwf	___aldiv@dividend
  2682  033E  120A  118A  2369  120A  118A  	fcall	___aldiv
  2683  0343  0873               	movf	?___aldiv+1,w
  2684  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0346  00B8               	movwf	UART_Init@x+1
  2687  0347  0872               	movf	?___aldiv,w
  2688  0348  00B7               	movwf	UART_Init@x
  2689  0349                     l2011:
  2690                           
  2691                           ;./UARTlib.h: 6:   BRGH = 1;
  2692  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2693  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2694  034B  1518               	bsf	24,2	;volatile
  2695  034C                     l2013:
  2696                           
  2697                           ;./UARTlib.h: 8:  if(x<256){
  2698  034C  3001               	movlw	1
  2699  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2700  034E  0238               	subwf	UART_Init@x+1,w
  2701  034F  3000               	movlw	0
  2702  0350  1903               	skipnz
  2703  0351  0237               	subwf	UART_Init@x,w
  2704  0352  1803               	skipnc
  2705  0353  2B55               	goto	u1861
  2706  0354  2B56               	goto	u1860
  2707  0355                     u1861:
  2708  0355  2B68               	goto	l169
  2709  0356                     u1860:
  2710  0356                     l2015:
  2711                           
  2712                           ;./UARTlib.h: 9:    SPBRG = x;
  2713  0356  0837               	movf	UART_Init@x,w
  2714  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0359  0099               	movwf	25	;volatile
  2717  035A                     l2017:
  2718                           
  2719                           ;./UARTlib.h: 10:    SYNC = 0;
  2720  035A  1218               	bcf	24,4	;volatile
  2721  035B                     l2019:
  2722                           
  2723                           ;./UARTlib.h: 11:    SPEN = 1;
  2724  035B  1283               	bcf	3,5	;RP0=0, select bank0
  2725  035C  1303               	bcf	3,6	;RP1=0, select bank0
  2726  035D  1798               	bsf	24,7	;volatile
  2727  035E                     l2021:
  2728                           
  2729                           ;./UARTlib.h: 12:       TRISC7 = 1;
  2730  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2731  035F  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0360  1787               	bsf	7,7	;volatile
  2733  0361                     l2023:
  2734                           
  2735                           ;./UARTlib.h: 13:       TRISC6 = 1;
  2736  0361  1707               	bsf	7,6	;volatile
  2737  0362                     l2025:
  2738                           
  2739                           ;./UARTlib.h: 14:       CREN = 1;
  2740  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0364  1618               	bsf	24,4	;volatile
  2743  0365                     l2027:
  2744                           
  2745                           ;./UARTlib.h: 15:       TXEN = 1;
  2746  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0367  1698               	bsf	24,5	;volatile
  2749  0368                     l169:
  2750  0368  0008               	return
  2751  0369                     __end_of_UART_Init:
  2752                           
  2753                           	psect	text13
  2754  0369                     __ptext13:	
  2755 ;; *************** function ___aldiv *****************
  2756 ;; Defined at:
  2757 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  divisor         4    2[COMMON] long 
  2760 ;;  dividend        4    6[COMMON] long 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  quotient        4    3[BANK0 ] long 
  2763 ;;  sign            1    2[BANK0 ] unsigned char 
  2764 ;;  counter         1    1[BANK0 ] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  4    2[COMMON] long 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         8       0       0       0       0
  2775 ;;      Locals:         0       6       0       0       0
  2776 ;;      Temps:          0       1       0       0       0
  2777 ;;      Totals:         8       7       0       0       0
  2778 ;;Total ram usage:       15 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_UART_Init
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function ___aldiv
  2790  0369                     ___aldiv:
  2791  0369                     l1907:	
  2792                           ;incstack = 0
  2793                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2794                           
  2795  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2796  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2797  036B  01A2               	clrf	___aldiv@sign
  2798  036C                     l1909:
  2799  036C  1FF5               	btfss	___aldiv@divisor+3,7
  2800  036D  2B6F               	goto	u1581
  2801  036E  2B70               	goto	u1580
  2802  036F                     u1581:
  2803  036F  2B7D               	goto	l449
  2804  0370                     u1580:
  2805  0370                     l1911:
  2806  0370  09F2               	comf	___aldiv@divisor,f
  2807  0371  09F3               	comf	___aldiv@divisor+1,f
  2808  0372  09F4               	comf	___aldiv@divisor+2,f
  2809  0373  09F5               	comf	___aldiv@divisor+3,f
  2810  0374  0AF2               	incf	___aldiv@divisor,f
  2811  0375  1903               	skipnz
  2812  0376  0AF3               	incf	___aldiv@divisor+1,f
  2813  0377  1903               	skipnz
  2814  0378  0AF4               	incf	___aldiv@divisor+2,f
  2815  0379  1903               	skipnz
  2816  037A  0AF5               	incf	___aldiv@divisor+3,f
  2817  037B  01A2               	clrf	___aldiv@sign
  2818  037C  0AA2               	incf	___aldiv@sign,f
  2819  037D                     l449:
  2820  037D  1FF9               	btfss	___aldiv@dividend+3,7
  2821  037E  2B80               	goto	u1591
  2822  037F  2B81               	goto	u1590
  2823  0380                     u1591:
  2824  0380  2B90               	goto	l1917
  2825  0381                     u1590:
  2826  0381                     l1913:
  2827  0381  09F6               	comf	___aldiv@dividend,f
  2828  0382  09F7               	comf	___aldiv@dividend+1,f
  2829  0383  09F8               	comf	___aldiv@dividend+2,f
  2830  0384  09F9               	comf	___aldiv@dividend+3,f
  2831  0385  0AF6               	incf	___aldiv@dividend,f
  2832  0386  1903               	skipnz
  2833  0387  0AF7               	incf	___aldiv@dividend+1,f
  2834  0388  1903               	skipnz
  2835  0389  0AF8               	incf	___aldiv@dividend+2,f
  2836  038A  1903               	skipnz
  2837  038B  0AF9               	incf	___aldiv@dividend+3,f
  2838  038C                     l1915:
  2839  038C  3001               	movlw	1
  2840  038D  00A0               	movwf	??___aldiv
  2841  038E  0820               	movf	??___aldiv,w
  2842  038F  06A2               	xorwf	___aldiv@sign,f
  2843  0390                     l1917:
  2844  0390  3000               	movlw	0
  2845  0391  00A6               	movwf	___aldiv@quotient+3
  2846  0392  3000               	movlw	0
  2847  0393  00A5               	movwf	___aldiv@quotient+2
  2848  0394  3000               	movlw	0
  2849  0395  00A4               	movwf	___aldiv@quotient+1
  2850  0396  3000               	movlw	0
  2851  0397  00A3               	movwf	___aldiv@quotient
  2852  0398                     l1919:
  2853  0398  0875               	movf	___aldiv@divisor+3,w
  2854  0399  0474               	iorwf	___aldiv@divisor+2,w
  2855  039A  0473               	iorwf	___aldiv@divisor+1,w
  2856  039B  0472               	iorwf	___aldiv@divisor,w
  2857  039C  1903               	skipnz
  2858  039D  2B9F               	goto	u1601
  2859  039E  2BA0               	goto	u1600
  2860  039F                     u1601:
  2861  039F  2BED               	goto	l1939
  2862  03A0                     u1600:
  2863  03A0                     l1921:
  2864  03A0  01A1               	clrf	___aldiv@counter
  2865  03A1  0AA1               	incf	___aldiv@counter,f
  2866  03A2  2BB0               	goto	l1925
  2867  03A3                     l1923:
  2868  03A3  3001               	movlw	1
  2869  03A4  00A0               	movwf	??___aldiv
  2870  03A5                     u1615:
  2871  03A5  1003               	clrc
  2872  03A6  0DF2               	rlf	___aldiv@divisor,f
  2873  03A7  0DF3               	rlf	___aldiv@divisor+1,f
  2874  03A8  0DF4               	rlf	___aldiv@divisor+2,f
  2875  03A9  0DF5               	rlf	___aldiv@divisor+3,f
  2876  03AA  0BA0               	decfsz	??___aldiv,f
  2877  03AB  2BA5               	goto	u1615
  2878  03AC  3001               	movlw	1
  2879  03AD  00A0               	movwf	??___aldiv
  2880  03AE  0820               	movf	??___aldiv,w
  2881  03AF  07A1               	addwf	___aldiv@counter,f
  2882  03B0                     l1925:
  2883  03B0  1FF5               	btfss	___aldiv@divisor+3,7
  2884  03B1  2BB3               	goto	u1621
  2885  03B2  2BB4               	goto	u1620
  2886  03B3                     u1621:
  2887  03B3  2BA3               	goto	l1923
  2888  03B4                     u1620:
  2889  03B4                     l1927:
  2890  03B4  3001               	movlw	1
  2891  03B5  00A0               	movwf	??___aldiv
  2892  03B6                     u1635:
  2893  03B6  1003               	clrc
  2894  03B7  0DA3               	rlf	___aldiv@quotient,f
  2895  03B8  0DA4               	rlf	___aldiv@quotient+1,f
  2896  03B9  0DA5               	rlf	___aldiv@quotient+2,f
  2897  03BA  0DA6               	rlf	___aldiv@quotient+3,f
  2898  03BB  0BA0               	decfsz	??___aldiv,f
  2899  03BC  2BB6               	goto	u1635
  2900  03BD                     l1929:
  2901  03BD  0875               	movf	___aldiv@divisor+3,w
  2902  03BE  0279               	subwf	___aldiv@dividend+3,w
  2903  03BF  1D03               	skipz
  2904  03C0  2BCB               	goto	u1645
  2905  03C1  0874               	movf	___aldiv@divisor+2,w
  2906  03C2  0278               	subwf	___aldiv@dividend+2,w
  2907  03C3  1D03               	skipz
  2908  03C4  2BCB               	goto	u1645
  2909  03C5  0873               	movf	___aldiv@divisor+1,w
  2910  03C6  0277               	subwf	___aldiv@dividend+1,w
  2911  03C7  1D03               	skipz
  2912  03C8  2BCB               	goto	u1645
  2913  03C9  0872               	movf	___aldiv@divisor,w
  2914  03CA  0276               	subwf	___aldiv@dividend,w
  2915  03CB                     u1645:
  2916  03CB  1C03               	skipc
  2917  03CC  2BCE               	goto	u1641
  2918  03CD  2BCF               	goto	u1640
  2919  03CE                     u1641:
  2920  03CE  2BDE               	goto	l1935
  2921  03CF                     u1640:
  2922  03CF                     l1931:
  2923  03CF  0872               	movf	___aldiv@divisor,w
  2924  03D0  02F6               	subwf	___aldiv@dividend,f
  2925  03D1  0873               	movf	___aldiv@divisor+1,w
  2926  03D2  1C03               	skipc
  2927  03D3  0F73               	incfsz	___aldiv@divisor+1,w
  2928  03D4  02F7               	subwf	___aldiv@dividend+1,f
  2929  03D5  0874               	movf	___aldiv@divisor+2,w
  2930  03D6  1C03               	skipc
  2931  03D7  0F74               	incfsz	___aldiv@divisor+2,w
  2932  03D8  02F8               	subwf	___aldiv@dividend+2,f
  2933  03D9  0875               	movf	___aldiv@divisor+3,w
  2934  03DA  1C03               	skipc
  2935  03DB  0F75               	incfsz	___aldiv@divisor+3,w
  2936  03DC  02F9               	subwf	___aldiv@dividend+3,f
  2937  03DD                     l1933:
  2938  03DD  1423               	bsf	___aldiv@quotient,0
  2939  03DE                     l1935:
  2940  03DE  3001               	movlw	1
  2941  03DF                     u1655:
  2942  03DF  1003               	clrc
  2943  03E0  0CF5               	rrf	___aldiv@divisor+3,f
  2944  03E1  0CF4               	rrf	___aldiv@divisor+2,f
  2945  03E2  0CF3               	rrf	___aldiv@divisor+1,f
  2946  03E3  0CF2               	rrf	___aldiv@divisor,f
  2947  03E4  3EFF               	addlw	-1
  2948  03E5  1D03               	skipz
  2949  03E6  2BDF               	goto	u1655
  2950  03E7                     l1937:
  2951  03E7  3001               	movlw	1
  2952  03E8  02A1               	subwf	___aldiv@counter,f
  2953  03E9  1D03               	btfss	3,2
  2954  03EA  2BEC               	goto	u1661
  2955  03EB  2BED               	goto	u1660
  2956  03EC                     u1661:
  2957  03EC  2BB4               	goto	l1927
  2958  03ED                     u1660:
  2959  03ED                     l1939:
  2960  03ED  0822               	movf	___aldiv@sign,w
  2961  03EE  1903               	btfsc	3,2
  2962  03EF  2BF1               	goto	u1671
  2963  03F0  2BF2               	goto	u1670
  2964  03F1                     u1671:
  2965  03F1  2BFD               	goto	l1943
  2966  03F2                     u1670:
  2967  03F2                     l1941:
  2968  03F2  09A3               	comf	___aldiv@quotient,f
  2969  03F3  09A4               	comf	___aldiv@quotient+1,f
  2970  03F4  09A5               	comf	___aldiv@quotient+2,f
  2971  03F5  09A6               	comf	___aldiv@quotient+3,f
  2972  03F6  0AA3               	incf	___aldiv@quotient,f
  2973  03F7  1903               	skipnz
  2974  03F8  0AA4               	incf	___aldiv@quotient+1,f
  2975  03F9  1903               	skipnz
  2976  03FA  0AA5               	incf	___aldiv@quotient+2,f
  2977  03FB  1903               	skipnz
  2978  03FC  0AA6               	incf	___aldiv@quotient+3,f
  2979  03FD                     l1943:
  2980  03FD  0826               	movf	___aldiv@quotient+3,w
  2981  03FE  00F5               	movwf	?___aldiv+3
  2982  03FF  0825               	movf	___aldiv@quotient+2,w
  2983  0400  00F4               	movwf	?___aldiv+2
  2984  0401  0824               	movf	___aldiv@quotient+1,w
  2985  0402  00F3               	movwf	?___aldiv+1
  2986  0403  0823               	movf	___aldiv@quotient,w
  2987  0404  00F2               	movwf	?___aldiv
  2988  0405                     l459:
  2989  0405  0008               	return
  2990  0406                     __end_of___aldiv:
  2991                           
  2992                           	psect	text14
  2993  0515                     __ptext14:	
  2994 ;; *************** function _Lcd_Write_String *****************
  2995 ;; Defined at:
  2996 ;;		line 92 in file "./lcdlib.h"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  a               2    6[COMMON] PTR unsigned char 
  2999 ;;		 -> main@s(16), STR_6(17), STR_5(20), STR_4(12), 
  3000 ;;		 -> STR_3(13), STR_2(10), STR_1(16), 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  i               2    8[COMMON] int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         2       0       0       0       0
  3013 ;;      Locals:         2       0       0       0       0
  3014 ;;      Temps:          0       3       0       0       0
  3015 ;;      Totals:         4       3       0       0       0
  3016 ;;Total ram usage:        7 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		_Lcd_Write_Char
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;;		_ARRANQUE
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _Lcd_Write_String
  3029  0515                     _Lcd_Write_String:
  3030  0515                     l1993:	
  3031                           ;incstack = 0
  3032                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3033                           
  3034                           
  3035                           ;./lcdlib.h: 93:     int i;;./lcdlib.h: 94:     for (i = 0; a[i] != '\0'; i++)
  3036  0515  01F8               	clrf	Lcd_Write_String@i
  3037  0516  01F9               	clrf	Lcd_Write_String@i+1
  3038  0517  2D3A               	goto	l1999
  3039  0518                     l1995:
  3040                           
  3041                           ;./lcdlib.h: 95:         Lcd_Write_Char(a[i]);
  3042  0518  0878               	movf	Lcd_Write_String@i,w
  3043  0519  0776               	addwf	Lcd_Write_String@a,w
  3044  051A  00A1               	movwf	??_Lcd_Write_String+1
  3045  051B  0877               	movf	Lcd_Write_String@a+1,w
  3046  051C  00A0               	movwf	??_Lcd_Write_String
  3047  051D  1803               	skipnc
  3048  051E  0AA0               	incf	??_Lcd_Write_String,f
  3049  051F  1FF8               	btfss	Lcd_Write_String@i,7
  3050  0520  2D22               	goto	u1760
  3051  0521  03A0               	decf	??_Lcd_Write_String,f
  3052  0522                     u1760:
  3053  0522  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0523  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0524  0820               	movf	??_Lcd_Write_String,w
  3056  0525  00A2               	movwf	??_Lcd_Write_String+2
  3057  0526  0822               	movf	??_Lcd_Write_String+2,w
  3058  0527  00FF               	movwf	btemp+1
  3059  0528  0821               	movf	??_Lcd_Write_String+1,w
  3060  0529  0084               	movwf	4
  3061  052A  120A  118A  2406  120A  118A  	fcall	stringtab
  3062  052F  120A  118A  261C  120A  118A  	fcall	_Lcd_Write_Char
  3063  0534                     l1997:
  3064  0534  3001               	movlw	1
  3065  0535  07F8               	addwf	Lcd_Write_String@i,f
  3066  0536  1803               	skipnc
  3067  0537  0AF9               	incf	Lcd_Write_String@i+1,f
  3068  0538  3000               	movlw	0
  3069  0539  07F9               	addwf	Lcd_Write_String@i+1,f
  3070  053A                     l1999:
  3071  053A  0878               	movf	Lcd_Write_String@i,w
  3072  053B  0776               	addwf	Lcd_Write_String@a,w
  3073  053C  1283               	bcf	3,5	;RP0=0, select bank0
  3074  053D  1303               	bcf	3,6	;RP1=0, select bank0
  3075  053E  00A1               	movwf	??_Lcd_Write_String+1
  3076  053F  0877               	movf	Lcd_Write_String@a+1,w
  3077  0540  00A0               	movwf	??_Lcd_Write_String
  3078  0541  1803               	skipnc
  3079  0542  0AA0               	incf	??_Lcd_Write_String,f
  3080  0543  1FF8               	btfss	Lcd_Write_String@i,7
  3081  0544  2D46               	goto	u1770
  3082  0545  03A0               	decf	??_Lcd_Write_String,f
  3083  0546                     u1770:
  3084  0546  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0547  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0548  0820               	movf	??_Lcd_Write_String,w
  3087  0549  00A2               	movwf	??_Lcd_Write_String+2
  3088  054A  0822               	movf	??_Lcd_Write_String+2,w
  3089  054B  00FF               	movwf	btemp+1
  3090  054C  0821               	movf	??_Lcd_Write_String+1,w
  3091  054D  0084               	movwf	4
  3092  054E  120A  118A  2406  120A  118A  	fcall	stringtab
  3093  0553  3A00               	xorlw	0
  3094  0554  1D03               	skipz
  3095  0555  2D57               	goto	u1781
  3096  0556  2D58               	goto	u1780
  3097  0557                     u1781:
  3098  0557  2D18               	goto	l1995
  3099  0558                     u1780:
  3100  0558                     l151:
  3101  0558  0008               	return
  3102  0559                     __end_of_Lcd_Write_String:
  3103                           
  3104                           	psect	text15
  3105  061C                     __ptext15:	
  3106 ;; *************** function _Lcd_Write_Char *****************
  3107 ;; Defined at:
  3108 ;;		line 83 in file "./lcdlib.h"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  a               1    wreg     unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  a               1    5[COMMON] unsigned char 
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      void 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0, pclath, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3122 ;;      Params:         0       0       0       0       0
  3123 ;;      Locals:         1       0       0       0       0
  3124 ;;      Temps:          2       0       0       0       0
  3125 ;;      Totals:         3       0       0       0       0
  3126 ;;Total ram usage:        3 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    2
  3129 ;; This function calls:
  3130 ;;		_Lcd_Port
  3131 ;; This function is called by:
  3132 ;;		_Lcd_Write_String
  3133 ;;		_ARRANQUE
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _Lcd_Write_Char
  3139  061C                     _Lcd_Write_Char:
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3143                           ;Lcd_Write_Char@a stored from wreg
  3144  061C  00F5               	movwf	Lcd_Write_Char@a
  3145  061D                     l1897:
  3146                           
  3147                           ;./lcdlib.h: 84:     RE1 = 1;
  3148  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3149  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3150  061F  1489               	bsf	9,1	;volatile
  3151  0620                     l1899:
  3152                           
  3153                           ;./lcdlib.h: 85:     Lcd_Port(a);
  3154  0620  0875               	movf	Lcd_Write_Char@a,w
  3155  0621  120A  118A  2559  120A  118A  	fcall	_Lcd_Port
  3156  0626                     l1901:
  3157                           
  3158                           ;./lcdlib.h: 86:     RE2 = 1;
  3159  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0628  1509               	bsf	9,2	;volatile
  3162  0629                     l1903:
  3163                           
  3164                           ;./lcdlib.h: 87:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3165  0629  300B               	movlw	11
  3166  062A  00F4               	movwf	??_Lcd_Write_Char+1
  3167  062B  3062               	movlw	98
  3168  062C  00F3               	movwf	??_Lcd_Write_Char
  3169  062D                     u2067:
  3170  062D  0BF3               	decfsz	??_Lcd_Write_Char,f
  3171  062E  2E2D               	goto	u2067
  3172  062F  0BF4               	decfsz	??_Lcd_Write_Char+1,f
  3173  0630  2E2D               	goto	u2067
  3174  0631  0000               	nop
  3175  0632                     l1905:
  3176                           
  3177                           ;./lcdlib.h: 88:     RE2 = 0;
  3178  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3179  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3180  0634  1109               	bcf	9,2	;volatile
  3181  0635                     l145:
  3182  0635  0008               	return
  3183  0636                     __end_of_Lcd_Write_Char:
  3184                           
  3185                           	psect	text16
  3186  05F8                     __ptext16:	
  3187 ;; *************** function _Lcd_Set_Cursor *****************
  3188 ;; Defined at:
  3189 ;;		line 58 in file "./lcdlib.h"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  a               1    wreg     unsigned char 
  3192 ;;  b               1    6[COMMON] unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  a               1    8[COMMON] unsigned char 
  3195 ;;  temp            1    9[COMMON] unsigned char 
  3196 ;;  y               1    0        unsigned char 
  3197 ;;  z               1    0        unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         1       0       0       0       0
  3208 ;;      Locals:         2       0       0       0       0
  3209 ;;      Temps:          1       0       0       0       0
  3210 ;;      Totals:         4       0       0       0       0
  3211 ;;Total ram usage:        4 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_Lcd_Cmd
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;;		_ARRANQUE
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _Lcd_Set_Cursor
  3224  05F8                     _Lcd_Set_Cursor:
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3228                           ;Lcd_Set_Cursor@a stored from wreg
  3229  05F8  00F8               	movwf	Lcd_Set_Cursor@a
  3230  05F9                     l1971:
  3231                           
  3232                           ;./lcdlib.h: 59:     char temp, z, y;;./lcdlib.h: 60:     if (a == 1) {
  3233  05F9  0378               	decf	Lcd_Set_Cursor@a,w
  3234  05FA  1D03               	btfss	3,2
  3235  05FB  2DFD               	goto	u1741
  3236  05FC  2DFE               	goto	u1740
  3237  05FD                     u1741:
  3238  05FD  2E0A               	goto	l1977
  3239  05FE                     u1740:
  3240  05FE                     l1973:
  3241                           
  3242                           ;./lcdlib.h: 61:         temp = 0x80 + b - 1;
  3243  05FE  0876               	movf	Lcd_Set_Cursor@b,w
  3244  05FF  3E7F               	addlw	127
  3245  0600  00F7               	movwf	??_Lcd_Set_Cursor
  3246  0601  0877               	movf	??_Lcd_Set_Cursor,w
  3247  0602  00F9               	movwf	Lcd_Set_Cursor@temp
  3248  0603                     l1975:
  3249                           
  3250                           ;./lcdlib.h: 62:         Lcd_Cmd(temp);
  3251  0603  0879               	movf	Lcd_Set_Cursor@temp,w
  3252  0604  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3253                           
  3254                           ;./lcdlib.h: 63:     } else if (a == 2) {
  3255  0609  2E1B               	goto	l139
  3256  060A                     l1977:
  3257  060A  3002               	movlw	2
  3258  060B  0678               	xorwf	Lcd_Set_Cursor@a,w
  3259  060C  1D03               	btfss	3,2
  3260  060D  2E0F               	goto	u1751
  3261  060E  2E10               	goto	u1750
  3262  060F                     u1751:
  3263  060F  2E1B               	goto	l139
  3264  0610                     u1750:
  3265  0610                     l1979:
  3266                           
  3267                           ;./lcdlib.h: 64:         temp = 0xC0 + b - 1;
  3268  0610  0876               	movf	Lcd_Set_Cursor@b,w
  3269  0611  3EBF               	addlw	191
  3270  0612  00F7               	movwf	??_Lcd_Set_Cursor
  3271  0613  0877               	movf	??_Lcd_Set_Cursor,w
  3272  0614  00F9               	movwf	Lcd_Set_Cursor@temp
  3273  0615                     l1981:
  3274                           
  3275                           ;./lcdlib.h: 65:         Lcd_Cmd(temp);
  3276  0615  0879               	movf	Lcd_Set_Cursor@temp,w
  3277  0616  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3278  061B                     l139:
  3279  061B  0008               	return
  3280  061C                     __end_of_Lcd_Set_Cursor:
  3281                           
  3282                           	psect	text17
  3283  048C                     __ptext17:	
  3284 ;; *************** function _Lcd_Init *****************
  3285 ;; Defined at:
  3286 ;;		line 69 in file "./lcdlib.h"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          2       0       0       0       0
  3303 ;;      Totals:         2       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    3
  3307 ;; This function calls:
  3308 ;;		_Lcd_Cmd
  3309 ;;		_Lcd_Port
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _Lcd_Init
  3317  048C                     _Lcd_Init:
  3318  048C                     l1983:	
  3319                           ;incstack = 0
  3320                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3321                           
  3322                           
  3323                           ;./lcdlib.h: 70:     Lcd_Port(0x00);
  3324  048C  3000               	movlw	0
  3325  048D  120A  118A  2559  120A  118A  	fcall	_Lcd_Port
  3326  0492                     l1985:
  3327                           
  3328                           ;./lcdlib.h: 71:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3329  0492  3034               	movlw	52
  3330  0493  00F7               	movwf	??_Lcd_Init+1
  3331  0494  30F1               	movlw	241
  3332  0495  00F6               	movwf	??_Lcd_Init
  3333  0496                     u2077:
  3334  0496  0BF6               	decfsz	??_Lcd_Init,f
  3335  0497  2C96               	goto	u2077
  3336  0498  0BF7               	decfsz	??_Lcd_Init+1,f
  3337  0499  2C96               	goto	u2077
  3338  049A  2C9B               	nop2
  3339  049B                     l1987:
  3340                           
  3341                           ;./lcdlib.h: 72:     Lcd_Cmd(0x03);
  3342  049B  3003               	movlw	3
  3343  049C  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3344                           
  3345                           ;./lcdlib.h: 73:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3346  04A1  300D               	movlw	13
  3347  04A2  00F7               	movwf	??_Lcd_Init+1
  3348  04A3  30FB               	movlw	251
  3349  04A4  00F6               	movwf	??_Lcd_Init
  3350  04A5                     u2087:
  3351  04A5  0BF6               	decfsz	??_Lcd_Init,f
  3352  04A6  2CA5               	goto	u2087
  3353  04A7  0BF7               	decfsz	??_Lcd_Init+1,f
  3354  04A8  2CA5               	goto	u2087
  3355  04A9  2CAA               	nop2
  3356  04AA                     l1989:
  3357                           
  3358                           ;./lcdlib.h: 74:     Lcd_Cmd(0x03);
  3359  04AA  3003               	movlw	3
  3360  04AB  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3361  04B0                     l1991:
  3362                           
  3363                           ;./lcdlib.h: 75:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3364  04B0  301D               	movlw	29
  3365  04B1  00F7               	movwf	??_Lcd_Init+1
  3366  04B2  3091               	movlw	145
  3367  04B3  00F6               	movwf	??_Lcd_Init
  3368  04B4                     u2097:
  3369  04B4  0BF6               	decfsz	??_Lcd_Init,f
  3370  04B5  2CB4               	goto	u2097
  3371  04B6  0BF7               	decfsz	??_Lcd_Init+1,f
  3372  04B7  2CB4               	goto	u2097
  3373                           
  3374                           ;./lcdlib.h: 76:     Lcd_Cmd(0x03);
  3375  04B8  3003               	movlw	3
  3376  04B9  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3377                           
  3378                           ;./lcdlib.h: 78:     Lcd_Cmd(0x38);
  3379  04BE  3038               	movlw	56
  3380  04BF  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3381                           
  3382                           ;./lcdlib.h: 79:     Lcd_Cmd(0x0C);
  3383  04C4  300C               	movlw	12
  3384  04C5  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3385                           
  3386                           ;./lcdlib.h: 80:     Lcd_Cmd(0x06);
  3387  04CA  3006               	movlw	6
  3388  04CB  120A  118A  2636  120A  118A  	fcall	_Lcd_Cmd
  3389  04D0                     l142:
  3390  04D0  0008               	return
  3391  04D1                     __end_of_Lcd_Init:
  3392                           
  3393                           	psect	text18
  3394  0636                     __ptext18:	
  3395 ;; *************** function _Lcd_Cmd *****************
  3396 ;; Defined at:
  3397 ;;		line 46 in file "./lcdlib.h"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  a               1    wreg     unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  a               1    5[COMMON] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, pclath, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3411 ;;      Params:         0       0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0
  3413 ;;      Temps:          2       0       0       0       0
  3414 ;;      Totals:         3       0       0       0       0
  3415 ;;Total ram usage:        3 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    2
  3418 ;; This function calls:
  3419 ;;		_Lcd_Port
  3420 ;; This function is called by:
  3421 ;;		_Lcd_Set_Cursor
  3422 ;;		_Lcd_Init
  3423 ;;		_Lcd_Clear
  3424 ;;		_Lcd_Shift_Right
  3425 ;;		_Lcd_Shift_Left
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _Lcd_Cmd
  3431  0636                     _Lcd_Cmd:
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3435                           ;Lcd_Cmd@a stored from wreg
  3436  0636  00F5               	movwf	Lcd_Cmd@a
  3437  0637                     l1887:
  3438                           
  3439                           ;./lcdlib.h: 47:     RE1 = 0;
  3440  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0639  1089               	bcf	9,1	;volatile
  3443  063A                     l1889:
  3444                           
  3445                           ;./lcdlib.h: 48:     Lcd_Port(a);
  3446  063A  0875               	movf	Lcd_Cmd@a,w
  3447  063B  120A  118A  2559  120A  118A  	fcall	_Lcd_Port
  3448  0640                     l1891:
  3449                           
  3450                           ;./lcdlib.h: 49:     RE2 = 1;
  3451  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0642  1509               	bsf	9,2	;volatile
  3454  0643                     l1893:
  3455                           
  3456                           ;./lcdlib.h: 50:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3457  0643  300B               	movlw	11
  3458  0644  00F4               	movwf	??_Lcd_Cmd+1
  3459  0645  3062               	movlw	98
  3460  0646  00F3               	movwf	??_Lcd_Cmd
  3461  0647                     u2107:
  3462  0647  0BF3               	decfsz	??_Lcd_Cmd,f
  3463  0648  2E47               	goto	u2107
  3464  0649  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3465  064A  2E47               	goto	u2107
  3466  064B  0000               	nop
  3467  064C                     l1895:
  3468                           
  3469                           ;./lcdlib.h: 51:     RE2 = 0;
  3470  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3471  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3472  064E  1109               	bcf	9,2	;volatile
  3473  064F                     l130:
  3474  064F  0008               	return
  3475  0650                     __end_of_Lcd_Cmd:
  3476                           
  3477                           	psect	text19
  3478  0559                     __ptext19:	
  3479 ;; *************** function _Lcd_Port *****************
  3480 ;; Defined at:
  3481 ;;		line 8 in file "./lcdlib.h"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  a               1    wreg     unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  a               1    2[COMMON] unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         0       0       0       0       0
  3496 ;;      Locals:         1       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0
  3498 ;;      Totals:         1       0       0       0       0
  3499 ;;Total ram usage:        1 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_Lcd_Cmd
  3506 ;;		_Lcd_Init
  3507 ;;		_Lcd_Write_Char
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _Lcd_Port
  3513  0559                     _Lcd_Port:
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _Lcd_Port: [wreg]
  3517                           ;Lcd_Port@a stored from wreg
  3518  0559  00F2               	movwf	Lcd_Port@a
  3519  055A                     l1869:
  3520                           
  3521                           ;./lcdlib.h: 9:     if (a & 1)
  3522  055A  1C72               	btfss	Lcd_Port@a,0
  3523  055B  2D5D               	goto	u1501
  3524  055C  2D5E               	goto	u1500
  3525  055D                     u1501:
  3526  055D  2D62               	goto	l111
  3527  055E                     u1500:
  3528  055E                     l1871:
  3529                           
  3530                           ;./lcdlib.h: 10:         RD0 = 1;
  3531  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3532  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0560  1408               	bsf	8,0	;volatile
  3534  0561  2D65               	goto	l112
  3535  0562                     l111:	
  3536                           ;./lcdlib.h: 11:     else
  3537                           
  3538                           
  3539                           ;./lcdlib.h: 12:         RD0 = 0;
  3540  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0564  1008               	bcf	8,0	;volatile
  3543  0565                     l112:
  3544                           
  3545                           ;./lcdlib.h: 14:     if (a & 2)
  3546  0565  1CF2               	btfss	Lcd_Port@a,1
  3547  0566  2D68               	goto	u1511
  3548  0567  2D69               	goto	u1510
  3549  0568                     u1511:
  3550  0568  2D6B               	goto	l113
  3551  0569                     u1510:
  3552  0569                     l1873:
  3553                           
  3554                           ;./lcdlib.h: 15:         RD1 = 1;
  3555  0569  1488               	bsf	8,1	;volatile
  3556  056A  2D6C               	goto	l114
  3557  056B                     l113:	
  3558                           ;./lcdlib.h: 16:     else
  3559                           
  3560                           
  3561                           ;./lcdlib.h: 17:         RD1 = 0;
  3562  056B  1088               	bcf	8,1	;volatile
  3563  056C                     l114:
  3564                           
  3565                           ;./lcdlib.h: 19:     if (a & 4)
  3566  056C  1D72               	btfss	Lcd_Port@a,2
  3567  056D  2D6F               	goto	u1521
  3568  056E  2D70               	goto	u1520
  3569  056F                     u1521:
  3570  056F  2D72               	goto	l115
  3571  0570                     u1520:
  3572  0570                     l1875:
  3573                           
  3574                           ;./lcdlib.h: 20:         RD2 = 1;
  3575  0570  1508               	bsf	8,2	;volatile
  3576  0571  2D73               	goto	l116
  3577  0572                     l115:	
  3578                           ;./lcdlib.h: 21:     else
  3579                           
  3580                           
  3581                           ;./lcdlib.h: 22:         RD2 = 0;
  3582  0572  1108               	bcf	8,2	;volatile
  3583  0573                     l116:
  3584                           
  3585                           ;./lcdlib.h: 24:     if (a & 8)
  3586  0573  1DF2               	btfss	Lcd_Port@a,3
  3587  0574  2D76               	goto	u1531
  3588  0575  2D77               	goto	u1530
  3589  0576                     u1531:
  3590  0576  2D79               	goto	l117
  3591  0577                     u1530:
  3592  0577                     l1877:
  3593                           
  3594                           ;./lcdlib.h: 25:         RD3 = 1;
  3595  0577  1588               	bsf	8,3	;volatile
  3596  0578  2D7A               	goto	l118
  3597  0579                     l117:	
  3598                           ;./lcdlib.h: 26:     else
  3599                           
  3600                           
  3601                           ;./lcdlib.h: 27:         RD3 = 0;
  3602  0579  1188               	bcf	8,3	;volatile
  3603  057A                     l118:
  3604                           
  3605                           ;./lcdlib.h: 28:     if (a & 16)
  3606  057A  1E72               	btfss	Lcd_Port@a,4
  3607  057B  2D7D               	goto	u1541
  3608  057C  2D7E               	goto	u1540
  3609  057D                     u1541:
  3610  057D  2D80               	goto	l119
  3611  057E                     u1540:
  3612  057E                     l1879:
  3613                           
  3614                           ;./lcdlib.h: 29:         RD4 = 1;
  3615  057E  1608               	bsf	8,4	;volatile
  3616  057F  2D81               	goto	l120
  3617  0580                     l119:	
  3618                           ;./lcdlib.h: 30:     else
  3619                           
  3620                           
  3621                           ;./lcdlib.h: 31:         RD4 = 0;
  3622  0580  1208               	bcf	8,4	;volatile
  3623  0581                     l120:
  3624                           
  3625                           ;./lcdlib.h: 32:     if (a & 32)
  3626  0581  1EF2               	btfss	Lcd_Port@a,5
  3627  0582  2D84               	goto	u1551
  3628  0583  2D85               	goto	u1550
  3629  0584                     u1551:
  3630  0584  2D87               	goto	l121
  3631  0585                     u1550:
  3632  0585                     l1881:
  3633                           
  3634                           ;./lcdlib.h: 33:         RD5 = 1;
  3635  0585  1688               	bsf	8,5	;volatile
  3636  0586  2D88               	goto	l122
  3637  0587                     l121:	
  3638                           ;./lcdlib.h: 34:     else
  3639                           
  3640                           
  3641                           ;./lcdlib.h: 35:         RD5 = 0;
  3642  0587  1288               	bcf	8,5	;volatile
  3643  0588                     l122:
  3644                           
  3645                           ;./lcdlib.h: 36:     if (a & 64)
  3646  0588  1F72               	btfss	Lcd_Port@a,6
  3647  0589  2D8B               	goto	u1561
  3648  058A  2D8C               	goto	u1560
  3649  058B                     u1561:
  3650  058B  2D8E               	goto	l123
  3651  058C                     u1560:
  3652  058C                     l1883:
  3653                           
  3654                           ;./lcdlib.h: 37:         RD6 = 1;
  3655  058C  1708               	bsf	8,6	;volatile
  3656  058D  2D8F               	goto	l124
  3657  058E                     l123:	
  3658                           ;./lcdlib.h: 38:     else
  3659                           
  3660                           
  3661                           ;./lcdlib.h: 39:         RD6 = 0;
  3662  058E  1308               	bcf	8,6	;volatile
  3663  058F                     l124:
  3664                           
  3665                           ;./lcdlib.h: 40:     if (a & 128)
  3666  058F  1FF2               	btfss	Lcd_Port@a,7
  3667  0590  2D92               	goto	u1571
  3668  0591  2D93               	goto	u1570
  3669  0592                     u1571:
  3670  0592  2D95               	goto	l125
  3671  0593                     u1570:
  3672  0593                     l1885:
  3673                           
  3674                           ;./lcdlib.h: 41:         RD7 = 1;
  3675  0593  1788               	bsf	8,7	;volatile
  3676  0594  2D96               	goto	l127
  3677  0595                     l125:	
  3678                           ;./lcdlib.h: 42:     else
  3679                           
  3680                           
  3681                           ;./lcdlib.h: 43:         RD7 = 0;
  3682  0595  1388               	bcf	8,7	;volatile
  3683  0596                     l127:
  3684  0596  0008               	return
  3685  0597                     __end_of_Lcd_Port:
  3686                           
  3687                           	psect	text20
  3688  068B                     __ptext20:	
  3689 ;; *************** function _ISR *****************
  3690 ;; Defined at:
  3691 ;;		line 136 in file "Master.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		None
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3705 ;;      Params:         0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0
  3707 ;;      Temps:          2       0       0       0       0
  3708 ;;      Totals:         2       0       0       0       0
  3709 ;;Total ram usage:        2 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		Interrupt level 1
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _ISR
  3720  068B                     _ISR:
  3721  068B                     i1l1377:
  3722                           
  3723                           ;Master.c: 137:     if (SSPIF == 1) {
  3724  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3725  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3726  068D  1D8C               	btfss	12,3	;volatile
  3727  068E  2E90               	goto	u76_21
  3728  068F  2E91               	goto	u76_20
  3729  0690                     u76_21:
  3730  0690  2E92               	goto	i1l259
  3731  0691                     u76_20:
  3732  0691                     i1l1379:
  3733                           
  3734                           ;Master.c: 138:         SSPIF = 0;
  3735  0691  118C               	bcf	12,3	;volatile
  3736  0692                     i1l259:
  3737  0692  0871               	movf	??_ISR+1,w
  3738  0693  008A               	movwf	10
  3739  0694  0E70               	swapf	??_ISR,w
  3740  0695  0083               	movwf	3
  3741  0696  0EFE               	swapf	btemp,f
  3742  0697  0E7E               	swapf	btemp,w
  3743  0698  0009               	retfie
  3744  0699                     __end_of_ISR:
  3745  007E                     btemp	set	126	;btemp
  3746  007E                     wtemp0	set	126
  3747                           
  3748                           	psect	intentry
  3749  0004                     __pintentry:	
  3750                           ;incstack = 0
  3751                           ; Regs used in _ISR: []
  3752                           
  3753  0004                     interrupt_function:
  3754  007E                     saved_w	set	btemp
  3755  0004  00FE               	movwf	btemp
  3756  0005  0E03               	swapf	3,w
  3757  0006  00F0               	movwf	??_ISR
  3758  0007  080A               	movf	10,w
  3759  0008  00F1               	movwf	??_ISR+1
  3760  0009  120A  118A  2E8B   	ljmp	_ISR
  3761                           
  3762                           	psect	config
  3763                           
  3764                           ;Config register CONFIG1 @ 0x2007
  3765                           ;	Oscillator Selection bits
  3766                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3767                           ;	Watchdog Timer Enable bit
  3768                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3769                           ;	Power-up Timer Enable bit
  3770                           ;	PWRTE = OFF, PWRT disabled
  3771                           ;	RE3/MCLR pin function select bit
  3772                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3773                           ;	Code Protection bit
  3774                           ;	CP = OFF, Program memory code protection is disabled
  3775                           ;	Data Code Protection bit
  3776                           ;	CPD = OFF, Data memory code protection is disabled
  3777                           ;	Brown Out Reset Selection bits
  3778                           ;	BOREN = OFF, BOR disabled
  3779                           ;	Internal External Switchover bit
  3780                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3781                           ;	Fail-Safe Clock Monitor Enabled bit
  3782                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3783                           ;	Low Voltage Programming Enable bit
  3784                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3785                           ;	In-Circuit Debugger Mode bit
  3786                           ;	DEBUG = 0x1, unprogrammed default
  3787  2007                     	org	8199
  3788  2007  20D4               	dw	8404
  3789                           
  3790                           ;Config register CONFIG2 @ 0x2008
  3791                           ;	Brown-out Reset Selection bit
  3792                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3793                           ;	Flash Program Memory Self Write Enable bits
  3794                           ;	WRT = OFF, Write protection off
  3795  2008                     	org	8200
  3796  2008  3FFF               	dw	16383

Data Sizes:
    Strings     108
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     52      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_7(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@s(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@s(BANK0[16]), STR_6(CODE[17]), STR_5(CODE[20]), STR_4(CODE[12]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _UART_Init->___aldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _UART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    6636
                                             27 BANK0     25    25      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _UART_Init
                         _UART_Write
                              _setup
                            _spiInit
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    20      9    2259
                                              6 BANK0     21    12      9
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1118
                                              7 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1039
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     279
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1191
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Init
     ___aldiv
   _UART_Write
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 22:59:54 2021

                        pc 0002                _SSPSTATbits 0094                         l90 0660  
                       l91 0665                         l94 06AE                         l97 06B4  
                       _V1 0057                         _V2 0056                         fsr 0004  
      ___wmul@multiplicand 0074                        l100 06BA                        l111 0562  
                      l120 0581                        l112 0565                        l121 0587  
                      l113 056B                        l122 0588                        l114 056C  
                      l130 064F                        l123 058E                        l115 0572  
                      l124 058F                        l116 0573                        l108 06AD  
                      l125 0595                        l117 0579                        l118 057A  
                      l142 04D0                        l127 0596                        l119 0580  
                      l151 0558                        l145 0635                        l241 0219  
                      l139 061B                        l253 0678                        l190 069A  
                      l169 0368                        l193 06A4                        l380 01A6  
                      l384 05DF                        l449 037D                        l369 00FE  
                      l386 05F7                        l459 0405                        l656 0514  
                      l666 05D2                        l837 068A                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RE1 0049                        _RD4 0044                        _RE2 004A  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _ISR 068B                        u910 05F3                        u911 05F2  
                      u905 05E7                        u850 06B4                        u851 06B3  
                      u860 0681                        u861 0680                        u870 0687  
                      u871 0686                        u880 05D9                        u881 05D8  
                      u895 05E0                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l2011 0349                       l2021 035E  
                     l2013 034C                       l2005 028C                       l2101 0143  
                     l2023 0361                       l2015 0356                       l2007 02E7  
                     l2111 0187                       l2103 0147                       l2031 0022  
                     l2025 0362                       l2017 035A                       l2009 02F0  
                     l2105 014C                       l2041 003C                       l2033 0027  
                     l2113 0190                       l2201 0203                       l2027 0365  
                     l2019 035B                       l2107 017C                       l2115 01A2  
                     l2051 007C                       l2043 004C                       l2035 002D  
                     l2211 0231                       l2203 020A                       l2109 0183  
                     l2061 00B7                       l2045 0050                       l2037 0034  
                     l2221 0287                       l2213 0244                       l2205 0213  
                     l1511 04D9                       l2063 00BB                       l2047 0065  
                     l2055 008C                       l2039 0039                       l2215 0253  
                     l2207 021A                       l1521 04FC                       l1513 04DC  
                     l1441 067A                       l2081 00F2                       l2073 00C6  
                     l2065 00BF                       l2057 00AB                       l2049 0078  
                     l2217 027B                       l2209 022A                       l1419 06AE  
                     l1523 0502                       l1515 04E3                       l1507 04D1  
                     l1443 067B                       l2091 011F                       l2083 00F8  
                     l2067 00C4                       l2059 00B3                       l2243 00A0  
                     l2219 0284                       l1525 0503                       l1517 04E7  
                     l1509 04D3                       l1461 05ED                       l1453 05D3  
                     l1445 0681                       l2093 0126                       l2085 0109  
                     l2077 00E2                       l2181 01A7                       l1527 050A  
                     l1519 04EB                       l1463 05F3                       l1455 05D5  
                     l1447 0687                       l2095 012A                       l2087 0115  
                     l2079 00EC                       l2191 01ED                       l2183 01D1  
                     l1641 0670                       l1561 065C                       l1529 0510  
                     l1457 05D9                       l1449 0689                       l2097 0136  
                     l2089 0119                       l2193 01EE                       l2185 01DA  
                     l1635 069A                       l1643 0672                       l1563 065F  
                     l1555 0651                       l1459 05E6                       l2099 013C  
                     l2195 01F4                       l2187 01DD                       l1901 0626  
                     l1637 06A0                       l1645 0677                       l1557 0658  
                     l1565 06B6                       l2197 01F8                       l2189 01E3  
                     l1903 0629                       l1911 0370                       l1639 0666  
                     l1559 065A                       l1567 06A5                       l2199 01FA  
                     l1905 0632                       l1921 03A0                       l1913 0381  
                     l1569 06AA                       l1931 03CF                       l1923 03A3  
                     l1915 038C                       l1907 0369                       l1941 03F2  
                     l1933 03DD                       l1925 03B0                       l1917 0390  
                     l1909 036C                       l1871 055E                       l1943 03FD  
                     l1935 03DE                       l1927 03B4                       l1919 0398  
                     l1951 05A2                       l1881 0585                       l1873 0569  
                     l1937 03E7                       l1929 03BD                       l1961 05C1  
                     l1953 05A9                       l1883 058C                       l1875 0570  
                     l1891 0640                       l1971 05F9                       l1939 03ED  
                     l1963 05C8                       l1955 05AD                       l1947 0597  
                     l1885 0593                       l1877 0577                       l1869 055A  
                     l1893 0643                       l1981 0615                       l1973 05FE  
                     l1957 05B1                       l1949 059F                       l1965 05CE  
                     l1879 057E                       l1895 064C                       l1887 0637  
                     l1991 04B0                       l1983 048C                       l1975 0603  
                     l1959 05BB                       l1889 063A                       l1985 0492  
                     l1977 060A                       l1897 061D                       l1993 0515  
                     l1987 049B                       l1979 0610                       l1899 0620  
                     l1995 0518                       l1989 04AA                       l1997 0534  
                     l1999 053A                       STR_1 0459                       STR_2 0482  
                     STR_3 0469                       STR_4 0476                       STR_5 0434  
                     STR_6 0448                       STR_7 0420                       _BRGH 04C2  
                     _CREN 00C4                       u1020 04D9                       u1021 04D8  
                     u1040 04EB                       u2000 01A2                       u1041 04EA  
                     u2001 01A1                       u1035 04DD                       u1060 04FC  
                     u1061 04FB                       u1150 0658                       u2030 01F4  
                     u1151 0657                       u1055 04EC                       u2031 01F3  
                     u1080 0510                       u2040 0209                       u1081 050F  
                     u1065 04F8                       u2041 0208                       u2050 0219  
                     u2107 0647                       u1075 0504                       u2051 0218  
                     u1500 055E                       u1501 055D                       u1510 0569  
                     u1511 0568                       u1520 0570                       u1600 03A0  
                     u1521 056F                       u1601 039F                       u1530 0577  
                     u1290 06A0                       u1531 0576                       u2067 062D  
                     u1291 069F                       u1540 057E                       u1620 03B4  
                     u1700 05B1                       u1541 057D                       u2077 0496  
                     u1621 03B3                       u1701 05B0                       u1550 0585  
                     u1710 05BB                       u1551 0584                       u2087 04A5  
                     u1615 03A5                       u1711 05BA                       u1560 058C  
                     u1640 03CF                       u1800 02B5                       u1561 058B  
                     u2097 04B4                       u1641 03CE                       u1570 0593  
                     u1730 05CE                       u1571 0592                       u1635 03B6  
                     u1811 02C7                       u1731 05CD                       u1715 05B7  
                     u1740 05FE                       u1660 03ED                       u1580 0370  
                     u1820 02F0                       u1812 02C8                       u1900 00BB  
                     u1741 05FD                       u1661 03EC                       u1645 03CB  
                     u1581 036F                       u1821 02EF                       u1813 02CD  
                     u1805 02B0                       u1725 05C2                       u1901 00BA  
                     u1750 0610                       u1670 03F2                       u1590 0381  
                     u1830 02FE                       u1814 02CE                       u1910 00E1  
                     u1751 060F                       u1671 03F1                       u1655 03DF  
                     u1591 0380                       u1815 02D3                       u1911 00E0  
                     u1760 0522                       u1840 0317                       u1816 02D4  
                     u1680 059F                       u1920 00EC                       u1681 059E  
                     u1921 00EB                       u1770 0546                       u1930 00F2  
                     u1851 0329                       u1835 02F9                       u1931 00F1  
                     u1915 00DD                       u1780 0558                       u1860 0356  
                     u1852 032A                       u1940 00F8                       u1781 0557  
                     u1861 0355                       u1853 032F                       u1845 0312  
                     u1941 00F7                       u1854 0330                       u1790 029C  
                     u1950 0109                       u1870 002D                       u1855 0335  
                     u1695 05A3                       u1951 0108                       u1871 002C  
                     u1856 0336                       u1960 011F                       u1880 004C  
                     u1961 011E                       u1881 004B                       u1970 0136  
                     u1890 008C                       u1795 0297                       u1971 0135  
                     u1955 0105                       u1891 008B                       u1980 013C  
                     u1981 013B                       u1990 0190                       u1991 018F  
                     _RCIF 0065                       _SPEN 00C7                       _TRMT 04C1  
                     _TXEN 04C5                       _SYNC 04C4          ?_Lcd_Write_String 0076  
                     _main 01A7                       _uwu1 0055                       _uwu2 0054  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0020  
          __end_of_Lcd_Cmd 0650                      ??_ISR 0070            __end_of___aldiv 0406  
                    ?_main 0070                      _ANSEL 0188            __end_of___lwdiv 0515  
          __end_of___lwmod 05D3                      i1l259 0692                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
                    _SSPIF 0063                      u76_20 0691                      u76_21 0690  
                    _TXREG 0019                ?_UART_Write 0070         __size_of_UART_Init 00DD  
          __end_of_dpowers 0420            __end_of_isdigit 068B                      _setup 0666  
                    main@s 0044                      pclath 000A            __end_of_spiInit 0666  
          __end_of_spiRead 06AE                      status 0003                      wtemp0 007E  
          __end_of_sprintf 01A7           __end_of_Lcd_Init 04D1           __end_of_Lcd_Port 0597  
          __initialization 000F               __end_of_main 028C                     ??_main 003B  
                   _DATAS1 007B                     _DATAS2 007A                     _DATAS3 0058  
                   ?_setup 0070                     _ANSELH 0189                     i1l1377 068B  
                   i1l1379 0691                     _INTCON 000B                     _SLAVE1 005B  
                   _SLAVE2 005A                     _SLAVE3 0059                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 001A                     _TRISC3 043B                     _TRISC5 043D  
                   _TRISC6 043E                     _TRISC7 043F                     _SSPCON 0014  
                   _SSPBUF 0013          __end_of_UART_Init 0369        __size_of_UART_Write 000C  
                ??___aldiv 0020                     ___wmul 05D3                  ??___lwdiv 0076  
                ??___lwmod 0024                  ??_isdigit 0072                     saved_w 007E  
         __end_of_spiWrite 06BB                  ??_spiInit 0075                  ??_spiRead 0072  
                ??_sprintf 002F            Lcd_Set_Cursor@a 0078            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001B             __pcstackCOMMON 0070              __end_of_setup 0679  
           _Lcd_Set_Cursor 05F8                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
             sprintf@width 0038                    ??_setup 0072                 __pbssBANK0 0054  
               __pmaintext 01A7                    ?___wmul 0072                 __pintentry 0004  
  __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 061C  
             ??_UART_Write 0072                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPSTAT 0094                 __stringtab 0406             _Lcd_Write_Char 061C  
                  _Lcd_Cmd 0636                  ?_spiWrite 0070                    ___aldiv 0369  
          __size_of___wmul 0025         __end_of_UART_Write 06A5                    ___lwdiv 04D1  
                  ___lwmod 0597            ?_Lcd_Set_Cursor 0076                    __ptext1 001F  
                  __ptext2 0679                    __ptext3 05D3                    __ptext4 0597  
                  __ptext5 04D1                    __ptext6 06B5                    __ptext7 06A5  
                  __ptext8 06AE                    __ptext9 0650               __size_of_ISR 000E  
                  _dpowers 0416                    _isdigit 0679           ___aldiv@dividend 0076  
                  _spiInit 0650                    _spiRead 06A5                    _sprintf 001F  
   __end_of_Lcd_Write_Char 0636       end_of_initialization 001B           ___aldiv@quotient 0023  
               ??_spiWrite 0072                  Lcd_Port@a 0072                  _UART_Init 028C  
                _PORTBbits 0006             UART_Write@data 0072                spiWrite@dat 0072  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0078  
           _spiReceiveWait 06AE             __end_of___wmul 05F8           _Lcd_Write_String 0515  
               ?_UART_Init 0027        start_initialization 000F                __end_of_ISR 0699  
        __size_of_Lcd_Init 0045          __size_of_Lcd_Port 003E     __end_of_spiReceiveWait 06B5  
                 ??___wmul 0076            Lcd_Write_Char@a 0075                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
              sprintf@flag 0034                sprintf@prec 0033           ___lwdiv@dividend 0074  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0077                   ?___aldiv 0072  
                 ?___lwdiv 0072                   ?___lwmod 0020                ??_UART_Init 002B  
        __size_of_spiWrite 0006                  __pstrings 0406                   ?_isdigit 0070  
                 ?_spiInit 0072                   ?_spiRead 0070           ___lwdiv@quotient 0077  
                 ?_sprintf 0026                 UART_Init@x 0037             __size_of_setup 0013  
          ___aldiv@divisor 0072       spiInit@sTransmitEdge 0074          interrupt_function 0004  
          ___aldiv@counter 0021             ___wmul@product 0076         spiInit@sDataSample 0072  
                 Lcd_Cmd@a 0075          UART_Init@baudrate 0027                __stringbase 0415  
        ___wmul@multiplier 0072           ??_Lcd_Write_Char 0073                   _Lcd_Init 048C  
                 _Lcd_Port 0559   __end_of_Lcd_Write_String 0559           __size_of_Lcd_Cmd 001A  
         __size_of___aldiv 009D           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 0416                _isdigit$787 0072                 sprintf@val 0035  
         __size_of_isdigit 0012            ___lwdiv@divisor 0072            ___lwdiv@counter 0079  
                 __ptext10 0666                   __ptext11 0699                   __ptext20 068B  
                 __ptext12 028C                   __ptext13 0369                   __ptext14 0515  
                 __ptext15 061C                   __ptext16 05F8                   __ptext17 048C  
                 __ptext18 0636                   __ptext19 0559           __size_of_spiInit 0016  
         __size_of_spiRead 0009           __size_of_sprintf 0188              __size_of_main 00E5  
                 _spiWrite 06B5               spiInit@sType 0075          spiInit@sClockIdle 0073  
                 isdigit@c 0073                   intlevel1 0000                  sprintf@ap 0032  
                sprintf@sp 0037           ___lwmod@dividend 0022           ??_spiReceiveWait 0072  
                stringcode 0410         Lcd_Set_Cursor@temp 0079                   sprintf@c 003A  
                 sprintf@f 0026            ___lwmod@divisor 0020            ___lwmod@counter 0025  
                 stringdir 0410                   stringtab 0406               ___aldiv@sign 0022  
               _UART_Write 0699  
