

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 15:40:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  001E                     _ADRESH	set	30
   210  000C                     _PIR1bits	set	12
   211  0008                     _PORTD	set	8
   212  0007                     _PORTC	set	7
   213  0006                     _PORTB	set	6
   214  0005                     _PORTA	set	5
   215  001F                     _ADCON0	set	31
   216  000B                     _INTCON	set	11
   217  0013                     _SSPBUF	set	19
   218  0014                     _SSPCON	set	20
   219  001F                     _ADCON0bits	set	31
   220  0063                     _SSPIF	set	99
   221  009F                     _ADCON1	set	159
   222  008C                     _PIE1	set	140
   223  0088                     _TRISD	set	136
   224  0086                     _TRISB	set	134
   225  0085                     _TRISA	set	133
   226  0094                     _SSPSTATbits	set	148
   227  0094                     _SSPSTAT	set	148
   228  043B                     _TRISC3	set	1083
   229  043D                     _TRISC5	set	1085
   230  0189                     _ANSELH	set	393
   231  0188                     _ANSEL	set	392
   232                           
   233                           	psect	cinit
   234  000F                     start_initialization:	
   235                           ; #config settings
   236                           
   237  000F                     __initialization:
   238                           
   239                           ; Clear objects allocated to COMMON
   240  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   241  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   242  0011                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  0011                     __end_of__initialization:
   246  0011  0183               	clrf	3
   247  0012  120A  118A  2859   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMMON
   250  0078                     __pbssCOMMON:
   251  0078                     _datu:
   252  0078                     	ds	1
   253  0079                     _VADC:
   254  0079                     	ds	1
   255                           
   256                           	psect	cstackCOMMON
   257  0070                     __pcstackCOMMON:
   258  0070                     ?_setup:
   259  0070                     ?_GOCHK:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_spiReceiveWait:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_spiReceiveWait:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_spiWrite:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ??_spiWrite:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_spiRead:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ??_spiRead:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_ISR:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     spiWrite@dat:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 1 bytes @ 0x0
   291  0070                     	ds	1
   292  0071                     ??_ISR:
   293                           
   294                           ; 1 bytes @ 0x1
   295  0071                     	ds	3
   296  0074                     ??_setup:
   297  0074                     ??_GOCHK:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     ?_spiInit:	
   301                           ; 1 bytes @ 0x4
   302                           
   303  0074                     spiInit@sDataSample:	
   304                           ; 1 bytes @ 0x4
   305                           
   306                           
   307                           ; 1 bytes @ 0x4
   308  0074                     	ds	1
   309  0075                     spiInit@sClockIdle:
   310                           
   311                           ; 1 bytes @ 0x5
   312  0075                     	ds	1
   313  0076                     spiInit@sTransmitEdge:
   314                           
   315                           ; 1 bytes @ 0x6
   316  0076                     	ds	1
   317  0077                     ??_spiInit:
   318  0077                     spiInit@sType:	
   319                           ; 1 bytes @ 0x7
   320                           
   321                           
   322                           ; 1 bytes @ 0x7
   323  0077                     	ds	1
   324  0078                     ??_main:
   325                           
   326                           	psect	maintext
   327  0059                     __pmaintext:	
   328                           ; 1 bytes @ 0x8
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 44 in file "Slave1.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2, status,0, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels required when called:    4
   354 ;; This function calls:
   355 ;;		_GOCHK
   356 ;;		_setup
   357 ;;		_spiInit
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _main
   365  0059                     _main:
   366  0059                     l760:	
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   369                           
   370                           
   371                           ;Slave1.c: 45:     setup();
   372  0059  120A  118A  203A  120A  118A  	fcall	_setup
   373                           
   374                           ;Slave1.c: 46:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
      +                          SPI_IDLE_2_ACTIVE);
   375  005E  01F4               	clrf	spiInit@sDataSample
   376  005F  01F5               	clrf	spiInit@sClockIdle
   377  0060  01F6               	clrf	spiInit@sTransmitEdge
   378  0061  3024               	movlw	36
   379  0062  120A  118A  2070  120A  118A  	fcall	_spiInit
   380  0067                     l762:
   381                           
   382                           ;Slave1.c: 48:         GOCHK();
   383  0067  120A  118A  208F  120A  118A  	fcall	_GOCHK
   384  006C  2867               	goto	l762
   385  006D  120A  118A  280C   	ljmp	start
   386  0070                     __end_of_main:
   387                           
   388                           	psect	text1
   389  0070                     __ptext1:	
   390 ;; *************** function _spiInit *****************
   391 ;; Defined at:
   392 ;;		line 49 in file "./spi.h"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  sType           1    wreg     enum E1350
   395 ;;  sDataSample     1    4[COMMON] enum E1358
   396 ;;  sClockIdle      1    5[COMMON] enum E1362
   397 ;;  sTransmitEdg    1    6[COMMON] enum E1366
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  sType           1    7[COMMON] enum E1350
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         3       0       0       0       0
   410 ;;      Locals:         1       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         4       0       0       0       0
   413 ;;Total ram usage:        4 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    3
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           
   424                           ;psect for function _spiInit
   425  0070                     _spiInit:
   426                           
   427                           ;incstack = 0
   428                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   429                           ;spiInit@sType stored from wreg
   430  0070  00F7               	movwf	spiInit@sType
   431  0071                     l750:
   432                           
   433                           ;./spi.h: 49: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);./spi.h: 50: {;./spi.h: 51:     TRISC5 = 0;
   434  0071  1683               	bsf	3,5	;RP0=1, select bank1
   435  0072  1303               	bcf	3,6	;RP1=0, select bank1
   436  0073  1287               	bcf	7,5	;volatile
   437                           
   438                           ;./spi.h: 52:     if(sType & 0b00000100)
   439  0074  1D77               	btfss	spiInit@sType,2
   440  0075  2877               	goto	u61
   441  0076  2878               	goto	u60
   442  0077                     u61:
   443  0077  287C               	goto	l756
   444  0078                     u60:
   445  0078                     l752:
   446                           
   447                           ;./spi.h: 53:     {;./spi.h: 54:         SSPSTAT = sTransmitEdge;
   448  0078  0876               	movf	spiInit@sTransmitEdge,w
   449  0079  0094               	movwf	20	;volatile
   450  007A                     l754:
   451                           
   452                           ;./spi.h: 55:         TRISC3 = 1;
   453  007A  1587               	bsf	7,3	;volatile
   454                           
   455                           ;./spi.h: 56:     }
   456  007B  2880               	goto	l56
   457  007C                     l756:
   458                           
   459                           ;./spi.h: 58:     {;./spi.h: 59:         SSPSTAT = sDataSample | sTransmitEdge;
   460  007C  0874               	movf	spiInit@sDataSample,w
   461  007D  0476               	iorwf	spiInit@sTransmitEdge,w
   462  007E  0094               	movwf	20	;volatile
   463  007F                     l758:
   464                           
   465                           ;./spi.h: 60:         TRISC3 = 0;
   466  007F  1187               	bcf	7,3	;volatile
   467  0080                     l56:	
   468                           ;./spi.h: 61:     }
   469                           
   470                           
   471                           ;./spi.h: 63:     SSPCON = sType | sClockIdle;
   472  0080  0877               	movf	spiInit@sType,w
   473  0081  0475               	iorwf	spiInit@sClockIdle,w
   474  0082  1283               	bcf	3,5	;RP0=0, select bank0
   475  0083  1303               	bcf	3,6	;RP1=0, select bank0
   476  0084  0094               	movwf	20	;volatile
   477  0085                     l57:
   478  0085  0008               	return
   479  0086                     __end_of_spiInit:
   480                           
   481                           	psect	text2
   482  003A                     __ptext2:	
   483 ;; *************** function _setup *****************
   484 ;; Defined at:
   485 ;;		line 53 in file "Slave1.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    3
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           
   514                           ;psect for function _setup
   515  003A                     _setup:
   516  003A                     l712:	
   517                           ;incstack = 0
   518                           ; Regs used in _setup: [wreg+status,2]
   519                           
   520                           
   521                           ;Slave1.c: 54:     TRISA = 0b00100001;
   522  003A  3021               	movlw	33
   523  003B  1683               	bsf	3,5	;RP0=1, select bank1
   524  003C  1303               	bcf	3,6	;RP1=0, select bank1
   525  003D  0085               	movwf	5	;volatile
   526  003E                     l714:
   527                           
   528                           ;Slave1.c: 55:     TRISB = 0b00000000;
   529  003E  0186               	clrf	6	;volatile
   530  003F                     l716:
   531                           
   532                           ;Slave1.c: 56:     TRISD = 0b00000000;
   533  003F  0188               	clrf	8	;volatile
   534                           
   535                           ;Slave1.c: 57:     ANSEL = 0b00000001;
   536  0040  3001               	movlw	1
   537  0041  1683               	bsf	3,5	;RP0=1, select bank3
   538  0042  1703               	bsf	3,6	;RP1=1, select bank3
   539  0043  0088               	movwf	8	;volatile
   540  0044                     l718:
   541                           
   542                           ;Slave1.c: 58:     ANSELH = 0b00000000;
   543  0044  0189               	clrf	9	;volatile
   544  0045                     l720:
   545                           
   546                           ;Slave1.c: 59:     INTCON = 0b11000000;
   547  0045  30C0               	movlw	192
   548  0046  008B               	movwf	11	;volatile
   549  0047                     l722:
   550                           
   551                           ;Slave1.c: 60:     PIE1 = 0b01000000;
   552  0047  3040               	movlw	64
   553  0048  1683               	bsf	3,5	;RP0=1, select bank1
   554  0049  1303               	bcf	3,6	;RP1=0, select bank1
   555  004A  008C               	movwf	12	;volatile
   556  004B                     l724:
   557                           
   558                           ;Slave1.c: 61:     ADCON0 = 0b01000001;
   559  004B  3041               	movlw	65
   560  004C  1283               	bcf	3,5	;RP0=0, select bank0
   561  004D  1303               	bcf	3,6	;RP1=0, select bank0
   562  004E  009F               	movwf	31	;volatile
   563                           
   564                           ;Slave1.c: 62:     ADCON1 = 0b00000000;
   565  004F  1683               	bsf	3,5	;RP0=1, select bank1
   566  0050  1303               	bcf	3,6	;RP1=0, select bank1
   567  0051  019F               	clrf	31	;volatile
   568                           
   569                           ;Slave1.c: 63:     PORTA = 0;
   570  0052  1283               	bcf	3,5	;RP0=0, select bank0
   571  0053  1303               	bcf	3,6	;RP1=0, select bank0
   572  0054  0185               	clrf	5	;volatile
   573                           
   574                           ;Slave1.c: 64:     PORTB = 0;
   575  0055  0186               	clrf	6	;volatile
   576                           
   577                           ;Slave1.c: 65:     PORTC = 0;
   578  0056  0187               	clrf	7	;volatile
   579                           
   580                           ;Slave1.c: 66:     PORTD = 0;
   581  0057  0188               	clrf	8	;volatile
   582  0058                     l89:
   583  0058  0008               	return
   584  0059                     __end_of_setup:
   585                           
   586                           	psect	text3
   587  008F                     __ptext3:	
   588 ;; *************** function _GOCHK *****************
   589 ;; Defined at:
   590 ;;		line 5 in file "./ADClib.h"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		None
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _GOCHK
   620  008F                     _GOCHK:
   621  008F                     l690:	
   622                           ;incstack = 0
   623                           ; Regs used in _GOCHK: []
   624                           
   625                           
   626                           ;./ADClib.h: 6:     if(ADCON0bits.GO==0){
   627  008F  1283               	bcf	3,5	;RP0=0, select bank0
   628  0090  1303               	bcf	3,6	;RP1=0, select bank0
   629  0091  189F               	btfsc	31,1	;volatile
   630  0092  2894               	goto	u21
   631  0093  2895               	goto	u20
   632  0094                     u21:
   633  0094  2896               	goto	l52
   634  0095                     u20:
   635  0095                     l692:
   636                           
   637                           ;./ADClib.h: 7:             ADCON0bits.GO=1;
   638  0095  149F               	bsf	31,1	;volatile
   639  0096                     l52:
   640  0096  0008               	return
   641  0097                     __end_of_GOCHK:
   642                           
   643                           	psect	text4
   644  0015                     __ptext4:	
   645 ;; *************** function _ISR *****************
   646 ;; Defined at:
   647 ;;		line 70 in file "Slave1.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          3       0       0       0       0
   664 ;;      Totals:         3       0       0       0       0
   665 ;;Total ram usage:        3 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		_spiRead
   670 ;;		_spiWrite
   671 ;; This function is called by:
   672 ;;		Interrupt level 1
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _ISR
   678  0015                     _ISR:
   679  0015                     i1l738:
   680                           
   681                           ;Slave1.c: 71:     if(PIR1bits.ADIF==1){
   682  0015  1283               	bcf	3,5	;RP0=0, select bank0
   683  0016  1303               	bcf	3,6	;RP1=0, select bank0
   684  0017  1F0C               	btfss	12,6	;volatile
   685  0018  281A               	goto	u4_21
   686  0019  281B               	goto	u4_20
   687  001A                     u4_21:
   688  001A  2820               	goto	i1l744
   689  001B                     u4_20:
   690  001B                     i1l740:
   691                           
   692                           ;Slave1.c: 72:             PIR1bits.ADIF=0;
   693  001B  130C               	bcf	12,6	;volatile
   694  001C                     i1l742:
   695                           
   696                           ;Slave1.c: 73:             VADC=ADRESH;
   697  001C  081E               	movf	30,w	;volatile
   698  001D  00F1               	movwf	??_ISR
   699  001E  0871               	movf	??_ISR,w
   700  001F  00F9               	movwf	_VADC
   701  0020                     i1l744:
   702                           
   703                           ;Slave1.c: 75:     if(SSPIF == 1){
   704  0020  1D8C               	btfss	12,3	;volatile
   705  0021  2823               	goto	u5_21
   706  0022  2824               	goto	u5_20
   707  0023                     u5_21:
   708  0023  2833               	goto	i1l96
   709  0024                     u5_20:
   710  0024                     i1l746:
   711                           
   712                           ;Slave1.c: 76:         SSPIF = 0;
   713  0024  118C               	bcf	12,3	;volatile
   714  0025                     i1l748:
   715                           
   716                           ;Slave1.c: 77:         datu=spiRead();
   717  0025  120A  118A  2086  120A  118A  	fcall	_spiRead
   718  002A  00F1               	movwf	??_ISR
   719  002B  0871               	movf	??_ISR,w
   720  002C  00F8               	movwf	_datu
   721                           
   722                           ;Slave1.c: 78:         spiWrite(VADC);
   723  002D  0879               	movf	_VADC,w
   724  002E  120A  118A  209E  120A  118A  	fcall	_spiWrite
   725  0033                     i1l96:
   726  0033  0873               	movf	??_ISR+2,w
   727  0034  008A               	movwf	10
   728  0035  0E72               	swapf	??_ISR+1,w
   729  0036  0083               	movwf	3
   730  0037  0EFE               	swapf	btemp,f
   731  0038  0E7E               	swapf	btemp,w
   732  0039  0009               	retfie
   733  003A                     __end_of_ISR:
   734                           
   735                           	psect	intentry
   736  0004                     __pintentry:	
   737                           ;incstack = 0
   738                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   739                           
   740  0004                     interrupt_function:
   741  007E                     saved_w	set	btemp
   742  0004  00FE               	movwf	btemp
   743  0005  0E03               	swapf	3,w
   744  0006  00F2               	movwf	??_ISR+1
   745  0007  080A               	movf	10,w
   746  0008  00F3               	movwf	??_ISR+2
   747  0009  120A  118A  2815   	ljmp	_ISR
   748                           
   749                           	psect	text5
   750  009E                     __ptext5:	
   751 ;; *************** function _spiWrite *****************
   752 ;; Defined at:
   753 ;;		line 71 in file "./spi.h"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  dat             1    wreg     unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  dat             1    0[COMMON] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         1       0       0       0       0
   771 ;;Total ram usage:        1 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_ISR
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _spiWrite
   782  009E                     _spiWrite:
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in _spiWrite: [wreg]
   786                           ;spiWrite@dat stored from wreg
   787  009E  00F0               	movwf	spiWrite@dat
   788  009F                     i1l704:
   789                           
   790                           ;./spi.h: 71: void spiWrite(char dat);./spi.h: 72: {;./spi.h: 73:     SSPBUF = dat;
   791  009F  0870               	movf	spiWrite@dat,w
   792  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   793  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   794  00A2  0093               	movwf	19	;volatile
   795  00A3                     i1l66:
   796  00A3  0008               	return
   797  00A4                     __end_of_spiWrite:
   798                           
   799                           	psect	text6
   800  0086                     __ptext6:	
   801 ;; *************** function _spiRead *****************
   802 ;; Defined at:
   803 ;;		line 84 in file "./spi.h"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      unsigned char 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0
   820 ;;      Totals:         0       0       0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    1
   824 ;; This function calls:
   825 ;;		_spiReceiveWait
   826 ;; This function is called by:
   827 ;;		_ISR
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _spiRead
   833  0086                     _spiRead:
   834  0086                     i1l706:	
   835                           ;incstack = 0
   836                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   837                           
   838                           
   839                           ;./spi.h: 86:     spiReceiveWait();
   840  0086  120A  118A  2097  120A  118A  	fcall	_spiReceiveWait
   841  008B                     i1l708:
   842                           
   843                           ;./spi.h: 87:     return(SSPBUF);
   844  008B  1283               	bcf	3,5	;RP0=0, select bank0
   845  008C  1303               	bcf	3,6	;RP1=0, select bank0
   846  008D  0813               	movf	19,w	;volatile
   847  008E                     i1l74:
   848  008E  0008               	return
   849  008F                     __end_of_spiRead:
   850                           
   851                           	psect	text7
   852  0097                     __ptext7:	
   853 ;; *************** function _spiReceiveWait *****************
   854 ;; Defined at:
   855 ;;		line 66 in file "./spi.h"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		None
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_spiRead
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _spiReceiveWait
   884  0097                     _spiReceiveWait:
   885  0097                     i1l688:	
   886                           ;incstack = 0
   887                           ; Regs used in _spiReceiveWait: []
   888                           
   889  0097                     i1l60:	
   890                           ;./spi.h: 68:     while ( !SSPSTATbits.BF );
   891                           
   892  0097  1683               	bsf	3,5	;RP0=1, select bank1
   893  0098  1303               	bcf	3,6	;RP1=0, select bank1
   894  0099  1C14               	btfss	20,0	;volatile
   895  009A  289C               	goto	u1_21
   896  009B  289D               	goto	u1_20
   897  009C                     u1_21:
   898  009C  2897               	goto	i1l60
   899  009D                     u1_20:
   900  009D                     i1l63:
   901  009D  0008               	return
   902  009E                     __end_of_spiReceiveWait:
   903  007E                     btemp	set	126	;btemp
   904  007E                     wtemp0	set	126
   905                           
   906                           	psect	config
   907                           
   908                           ;Config register CONFIG1 @ 0x2007
   909                           ;	Oscillator Selection bits
   910                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   911                           ;	Watchdog Timer Enable bit
   912                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   913                           ;	Power-up Timer Enable bit
   914                           ;	PWRTE = OFF, PWRT disabled
   915                           ;	RE3/MCLR pin function select bit
   916                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   917                           ;	Code Protection bit
   918                           ;	CP = OFF, Program memory code protection is disabled
   919                           ;	Data Code Protection bit
   920                           ;	CPD = OFF, Data memory code protection is disabled
   921                           ;	Brown Out Reset Selection bits
   922                           ;	BOREN = OFF, BOR disabled
   923                           ;	Internal External Switchover bit
   924                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   925                           ;	Fail-Safe Clock Monitor Enabled bit
   926                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   927                           ;	Low Voltage Programming Enable bit
   928                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   929                           ;	In-Circuit Debugger Mode bit
   930                           ;	DEBUG = 0x1, unprogrammed default
   931  2007                     	org	8199
   932  2007  20D4               	dw	8404
   933                           
   934                           ;Config register CONFIG2 @ 0x2008
   935                           ;	Brown-out Reset Selection bit
   936                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   937                           ;	Flash Program Memory Self Write Enable bits
   938                           ;	WRT = OFF, Write protection off
   939  2008                     	org	8200
   940  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                              _GOCHK
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GOCHK                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GOCHK
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 15:40:39 2021

            _SSPSTATbits 0094                       l52 0096                       l56 0080  
                     l57 0085                       l89 0058                       u20 0095  
                     u21 0094                       u60 0078                       u61 0077  
                    l720 0045                      l712 003A                      l722 0047  
                    l714 003E                      l724 004B                      l716 003F  
                    l718 0044                      l750 0071                      l752 0078  
                    l760 0059                      l690 008F                      l754 007A  
                    l762 0067                      l692 0095                      l756 007C  
                    l758 007F                      _ISR 0015                     ?_ISR 0070  
                   _PIE1 008C                     i1l60 0097                     i1l63 009D  
                   i1l74 008E                     i1l66 00A3                     _VADC 0079  
                   i1l96 0033                     u1_20 009D                     u1_21 009C  
                   u4_20 001B                     u4_21 001A                     u5_20 0024  
                   u5_21 0023                     _datu 0078                     _main 0059  
                   btemp 007E                     start 000C                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    _GOCHK 008F  
                  i1l704 009F                    i1l706 0086                    i1l708 008B  
                  i1l740 001B                    i1l742 001C                    i1l744 0020  
                  i1l746 0024                    i1l738 0015                    i1l748 0025  
                  i1l688 0097                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 003A                    pclath 000A          __end_of_spiInit 0086  
        __end_of_spiRead 008F                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0070                   ??_main 0078  
                 ?_GOCHK 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00A4                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011            __end_of_GOCHK 0097           __pcstackCOMMON 0070  
          __end_of_setup 0059                  ??_GOCHK 0074                  ??_setup 0074  
             __pmaintext 0059               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0070  
                __ptext2 003A                  __ptext3 008F                  __ptext4 0015  
                __ptext5 009E                  __ptext6 0086                  __ptext7 0097  
           __size_of_ISR 0025                  _spiInit 0070                  _spiRead 0086  
   end_of_initialization 0011               ??_spiWrite 0070              spiWrite@dat 0070  
         _spiReceiveWait 0097      start_initialization 000F              __end_of_ISR 003A  
 __end_of_spiReceiveWait 009E              __pbssCOMMON 0078                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006           __size_of_GOCHK 0008  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 001F  
   spiInit@sTransmitEdge 0076        interrupt_function 0004       spiInit@sDataSample 0074  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of_spiInit 0016  
       __size_of_spiRead 0009            __size_of_main 0017                 _spiWrite 009E  
           spiInit@sType 0077        spiInit@sClockIdle 0075                 intlevel1 0000  
       ??_spiReceiveWait 0070  
