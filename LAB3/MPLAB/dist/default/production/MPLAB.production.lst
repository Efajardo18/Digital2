

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 23:41:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	strings
   218  0100                     __pstrings:
   219  0100                     stringtab:
   220  0100                     __stringtab:
   221  0100                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0100                     stringdir:
   225  0100  3001               	movlw	high stringdir
   226  0101  008A               	movwf	10
   227  0102  0804               	movf	4,w
   228  0103  0A84               	incf	4,f
   229  0104  0782               	addwf	2,f
   230  0105                     __stringbase:
   231  0105  3400               	retlw	0
   232  0106                     __end_of__stringtab:
   233  0106                     _dpowers:
   234  0106  3401               	retlw	1
   235  0107  3400               	retlw	0
   236  0108  340A               	retlw	10
   237  0109  3400               	retlw	0
   238  010A  3464               	retlw	100
   239  010B  3400               	retlw	0
   240  010C  34E8               	retlw	232
   241  010D  3403               	retlw	3
   242  010E  3410               	retlw	16
   243  010F  3427               	retlw	39
   244  0110                     __end_of_dpowers:
   245  0011                     _TMR2	set	17
   246  001E                     _ADRESH	set	30
   247  000C                     _PIR1bits	set	12
   248  001F                     _ADCON0bits	set	31
   249  0012                     _T2CON	set	18
   250  001F                     _ADCON0	set	31
   251  000B                     _INTCON	set	11
   252  0008                     _PORTD	set	8
   253  004A                     _RE2	set	74
   254  0049                     _RE1	set	73
   255  0047                     _RD7	set	71
   256  0046                     _RD6	set	70
   257  0045                     _RD5	set	69
   258  0044                     _RD4	set	68
   259  0043                     _RD3	set	67
   260  0042                     _RD2	set	66
   261  0041                     _RD1	set	65
   262  0040                     _RD0	set	64
   263  0092                     _PR2	set	146
   264  009F                     _ADCON1	set	159
   265  008C                     _PIE1	set	140
   266  0089                     _TRISE	set	137
   267  0088                     _TRISD	set	136
   268  0087                     _TRISC	set	135
   269  0085                     _TRISA	set	133
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272  0110                     STR_5:
   273  0110  3477               	retlw	119	;'w'
   274  0111  3477               	retlw	119	;'w'
   275  0112  3477               	retlw	119	;'w'
   276  0113  342E               	retlw	46	;'.'
   277  0114  3465               	retlw	101	;'e'
   278  0115  346C               	retlw	108	;'l'
   279  0116  3465               	retlw	101	;'e'
   280  0117  3463               	retlw	99	;'c'
   281  0118  3474               	retlw	116	;'t'
   282  0119  3472               	retlw	114	;'r'
   283  011A  346F               	retlw	111	;'o'
   284  011B  3453               	retlw	83	;'S'
   285  011C  346F               	retlw	111	;'o'
   286  011D  346D               	retlw	109	;'m'
   287  011E  3465               	retlw	101	;'e'
   288  011F  342E               	retlw	46	;'.'
   289  0120  3463               	retlw	99	;'c'
   290  0121  346F               	retlw	111	;'o'
   291  0122  346D               	retlw	109	;'m'
   292  0123  3400               	retlw	0
   293  0124                     STR_1:
   294  0124  344C               	retlw	76	;'L'
   295  0125  3443               	retlw	67	;'C'
   296  0126  3444               	retlw	68	;'D'
   297  0127  3420               	retlw	32	;' '
   298  0128  344C               	retlw	76	;'L'
   299  0129  3469               	retlw	105	;'i'
   300  012A  3462               	retlw	98	;'b'
   301  012B  3472               	retlw	114	;'r'
   302  012C  3461               	retlw	97	;'a'
   303  012D  3472               	retlw	114	;'r'
   304  012E  3479               	retlw	121	;'y'
   305  012F  3420               	retlw	32	;' '
   306  0130  3466               	retlw	102	;'f'
   307  0131  346F               	retlw	111	;'o'
   308  0132  3472               	retlw	114	;'r'
   309  0133  3400               	retlw	0
   310  0134                     STR_6:
   311  0134  3456               	retlw	86	;'V'
   312  0135  3431               	retlw	49	;'1'
   313  0136  3420               	retlw	32	;' '
   314  0137  3420               	retlw	32	;' '
   315  0138  3456               	retlw	86	;'V'
   316  0139  3432               	retlw	50	;'2'
   317  013A  3420               	retlw	32	;' '
   318  013B  3420               	retlw	32	;' '
   319  013C  3443               	retlw	67	;'C'
   320  013D  344F               	retlw	79	;'O'
   321  013E  344E               	retlw	78	;'N'
   322  013F  3454               	retlw	84	;'T'
   323  0140  3400               	retlw	0
   324  0141                     STR_3:
   325  0141  3444               	retlw	68	;'D'
   326  0142  3465               	retlw	101	;'e'
   327  0143  3476               	retlw	118	;'v'
   328  0144  3465               	retlw	101	;'e'
   329  0145  346C               	retlw	108	;'l'
   330  0146  346F               	retlw	111	;'o'
   331  0147  3470               	retlw	112	;'p'
   332  0148  3465               	retlw	101	;'e'
   333  0149  3464               	retlw	100	;'d'
   334  014A  3420               	retlw	32	;' '
   335  014B  3442               	retlw	66	;'B'
   336  014C  3479               	retlw	121	;'y'
   337  014D  3400               	retlw	0
   338  014E                     STR_4:
   339  014E  3465               	retlw	101	;'e'
   340  014F  346C               	retlw	108	;'l'
   341  0150  3465               	retlw	101	;'e'
   342  0151  3463               	retlw	99	;'c'
   343  0152  3474               	retlw	116	;'t'
   344  0153  3472               	retlw	114	;'r'
   345  0154  346F               	retlw	111	;'o'
   346  0155  3453               	retlw	83	;'S'
   347  0156  346F               	retlw	111	;'o'
   348  0157  346D               	retlw	109	;'m'
   349  0158  3465               	retlw	101	;'e'
   350  0159  3400               	retlw	0
   351  015A                     STR_2:
   352  015A  344D               	retlw	77	;'M'
   353  015B  3450               	retlw	80	;'P'
   354  015C  344C               	retlw	76	;'L'
   355  015D  3441               	retlw	65	;'A'
   356  015E  3442               	retlw	66	;'B'
   357  015F  3420               	retlw	32	;' '
   358  0160  3458               	retlw	88	;'X'
   359  0161  3443               	retlw	67	;'C'
   360  0162  3438               	retlw	56	;'8'
   361  0163  3400               	retlw	0
   362  0164                     STR_7:
   363  0164  3425               	retlw	37	;'%'
   364  0165  3475               	retlw	117	;'u'
   365  0166  3420               	retlw	32	;' '
   366  0167  3420               	retlw	32	;' '
   367  0168  3420               	retlw	32	;' '
   368  0169  3425               	retlw	37	;'%'
   369  016A  3475               	retlw	117	;'u'
   370  016B  3400               	retlw	0
   371                           
   372                           	psect	cinit
   373  000F                     start_initialization:	
   374                           ; #config settings
   375                           
   376  000F                     __initialization:
   377                           
   378                           ; Clear objects allocated to COMMON
   379  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   380                           
   381                           ; Clear objects allocated to BANK0
   382  0010  1283               	bcf	3,5	;RP0=0, select bank0
   383  0011  1303               	bcf	3,6	;RP1=0, select bank0
   384  0012  01CA               	clrf	__pbssBANK0& (0+127)
   385  0013  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   386  0014  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   387  0015  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   388  0016                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391  0016                     __end_of__initialization:
   392  0016  0183               	clrf	3
   393  0017  120A  118A  296C   	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396  0079                     __pbssCOMMON:
   397  0079                     _lmao:
   398  0079                     	ds	1
   399                           
   400                           	psect	bssBANK0
   401  004A                     __pbssBANK0:
   402  004A                     _t2:
   403  004A                     	ds	2
   404  004C                     _t1:
   405  004C                     	ds	2
   406                           
   407                           	psect	cstackCOMMON
   408  0070                     __pcstackCOMMON:
   409  0070                     ?_Lcd_Port:
   410  0070                     ?_Lcd_Cmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Lcd_Write_Char:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Write_String:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_setup:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_main:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_ISR:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_ISR:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436  0070                     	ds	4
   437  0074                     ??_Lcd_Port:
   438  0074                     ??_setup:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     ?___lwdiv:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     Lcd_Port@a:	
   445                           ; 2 bytes @ 0x4
   446                           
   447  0074                     ___lwdiv@divisor:	
   448                           ; 1 bytes @ 0x4
   449                           
   450                           
   451                           ; 2 bytes @ 0x4
   452  0074                     	ds	1
   453  0075                     ??_Lcd_Cmd:
   454  0075                     ??_Lcd_Write_Char:	
   455                           ; 1 bytes @ 0x5
   456                           
   457                           
   458                           ; 1 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     ___lwdiv@dividend:
   461                           
   462                           ; 2 bytes @ 0x6
   463  0076                     	ds	1
   464  0077                     Lcd_Cmd@a:
   465  0077                     Lcd_Write_Char@a:	
   466                           ; 1 bytes @ 0x7
   467                           
   468                           
   469                           ; 1 bytes @ 0x7
   470  0077                     	ds	1
   471  0078                     ?_Lcd_Set_Cursor:
   472  0078                     ??_Lcd_Write_String:	
   473                           ; 1 bytes @ 0x8
   474                           
   475  0078                     ??___lwdiv:	
   476                           ; 1 bytes @ 0x8
   477                           
   478  0078                     Lcd_Set_Cursor@b:	
   479                           ; 1 bytes @ 0x8
   480                           
   481                           
   482                           ; 1 bytes @ 0x8
   483  0078                     	ds	1
   484                           
   485                           	psect	cstackBANK0
   486  0020                     __pcstackBANK0:
   487  0020                     ??_Lcd_Set_Cursor:
   488  0020                     ??_Lcd_Init:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0020                     Lcd_Write_String@i:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0020                     ___lwdiv@quotient:	
   495                           ; 2 bytes @ 0x0
   496                           
   497                           
   498                           ; 2 bytes @ 0x0
   499  0020                     	ds	1
   500  0021                     Lcd_Set_Cursor@a:
   501                           
   502                           ; 1 bytes @ 0x1
   503  0021                     	ds	1
   504  0022                     Lcd_Set_Cursor@temp:
   505  0022                     Lcd_Write_String@a:	
   506                           ; 1 bytes @ 0x2
   507                           
   508  0022                     ___lwdiv@counter:	
   509                           ; 1 bytes @ 0x2
   510                           
   511                           
   512                           ; 1 bytes @ 0x2
   513  0022                     	ds	1
   514  0023                     ?___lwmod:
   515  0023                     ___lwmod@divisor:	
   516                           ; 2 bytes @ 0x3
   517                           
   518                           
   519                           ; 2 bytes @ 0x3
   520  0023                     	ds	2
   521  0025                     ___lwmod@dividend:
   522                           
   523                           ; 2 bytes @ 0x5
   524  0025                     	ds	2
   525  0027                     ??___lwmod:
   526                           
   527                           ; 1 bytes @ 0x7
   528  0027                     	ds	1
   529  0028                     ___lwmod@counter:
   530                           
   531                           ; 1 bytes @ 0x8
   532  0028                     	ds	1
   533  0029                     ?_sprintf:
   534  0029                     sprintf@f:	
   535                           ; 2 bytes @ 0x9
   536                           
   537                           
   538                           ; 1 bytes @ 0x9
   539  0029                     	ds	5
   540  002E                     ??_sprintf:
   541                           
   542                           ; 1 bytes @ 0xE
   543  002E                     	ds	3
   544  0031                     sprintf@flag:
   545                           
   546                           ; 1 bytes @ 0x11
   547  0031                     	ds	1
   548  0032                     sprintf@ap:
   549                           
   550                           ; 1 bytes @ 0x12
   551  0032                     	ds	1
   552  0033                     sprintf@val:
   553                           
   554                           ; 2 bytes @ 0x13
   555  0033                     	ds	2
   556  0035                     sprintf@prec:
   557                           
   558                           ; 1 bytes @ 0x15
   559  0035                     	ds	1
   560  0036                     sprintf@sp:
   561                           
   562                           ; 1 bytes @ 0x16
   563  0036                     	ds	1
   564  0037                     sprintf@c:
   565                           
   566                           ; 1 bytes @ 0x17
   567  0037                     	ds	1
   568  0038                     ??_main:
   569                           
   570                           ; 1 bytes @ 0x18
   571  0038                     	ds	2
   572  003A                     main@s:
   573                           
   574                           ; 16 bytes @ 0x1A
   575  003A                     	ds	16
   576                           
   577                           	psect	maintext
   578  016C                     __pmaintext:	
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 72 in file "newmain.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  s              16   26[BANK0 ] unsigned char [16]
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : B00/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0      16       0       0       0
   600 ;;      Temps:          0       2       0       0       0
   601 ;;      Totals:         0      18       0       0       0
   602 ;;Total ram usage:       18 bytes
   603 ;; Hardware stack levels required when called:    4
   604 ;; This function calls:
   605 ;;		_Lcd_Init
   606 ;;		_Lcd_Set_Cursor
   607 ;;		_Lcd_Write_String
   608 ;;		_setup
   609 ;;		_sprintf
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _main
   617  016C                     _main:
   618  016C                     l1546:	
   619                           ;incstack = 0
   620                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   621                           
   622                           
   623                           ;newmain.c: 73:     setup();
   624  016C  120A  118A  22F5  120A  118A  	fcall	_setup
   625                           
   626                           ;newmain.c: 74:     Lcd_Init();
   627  0171  120A  118A  21B6  120A  118A  	fcall	_Lcd_Init
   628  0176                     l128:	
   629                           ;newmain.c: 75:     char s[16];;newmain.c: 76:     while(1){
   630                           
   631                           
   632                           ;newmain.c: 77:         Lcd_Set_Cursor(1,1);
   633  0176  01F8               	clrf	Lcd_Set_Cursor@b
   634  0177  0AF8               	incf	Lcd_Set_Cursor@b,f
   635  0178  3001               	movlw	1
   636  0179  120A  118A  2347  120A  118A  	fcall	_Lcd_Set_Cursor
   637  017E                     l1548:
   638                           
   639                           ;newmain.c: 78:         Lcd_Write_String("V1  V2  CONT");
   640  017E  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   641  017F  120A  118A  231E  120A  118A  	fcall	_Lcd_Write_String
   642  0184                     l1550:
   643                           
   644                           ;newmain.c: 79:         Lcd_Set_Cursor(2,1);
   645  0184  01F8               	clrf	Lcd_Set_Cursor@b
   646  0185  0AF8               	incf	Lcd_Set_Cursor@b,f
   647  0186  3002               	movlw	2
   648  0187  120A  118A  2347  120A  118A  	fcall	_Lcd_Set_Cursor
   649  018C                     l1552:
   650                           
   651                           ;newmain.c: 80:         sprintf(s,"%u   %u",t1, t2);
   652  018C  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   653  018D  1283               	bcf	3,5	;RP0=0, select bank0
   654  018E  1303               	bcf	3,6	;RP1=0, select bank0
   655  018F  00B8               	movwf	??_main
   656  0190  0838               	movf	??_main,w
   657  0191  00A9               	movwf	sprintf@f
   658  0192  084D               	movf	_t1+1,w
   659  0193  00AB               	movwf	?_sprintf+2
   660  0194  084C               	movf	_t1,w
   661  0195  00AA               	movwf	?_sprintf+1
   662  0196  084B               	movf	_t2+1,w
   663  0197  00AD               	movwf	?_sprintf+4
   664  0198  084A               	movf	_t2,w
   665  0199  00AC               	movwf	?_sprintf+3
   666  019A  303A               	movlw	(low (main@s| 0))& (0+255)
   667  019B  120A  118A  201A  120A  118A  	fcall	_sprintf
   668  01A0                     l1554:
   669                           
   670                           ;newmain.c: 81:         _delay((unsigned long)((10)*(8000000/4000.0)));
   671  01A0  301A               	movlw	26
   672  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   673  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   674  01A3  00B9               	movwf	??_main+1
   675  01A4  30F7               	movlw	247
   676  01A5  00B8               	movwf	??_main
   677  01A6                     u897:
   678  01A6  0BB8               	decfsz	??_main,f
   679  01A7  29A6               	goto	u897
   680  01A8  0BB9               	decfsz	??_main+1,f
   681  01A9  29A6               	goto	u897
   682  01AA  29AB               	nop2
   683  01AB                     l1556:
   684                           
   685                           ;newmain.c: 82:         if(ADCON0bits.GO==0){
   686  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   687  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   688  01AD  189F               	btfsc	31,1	;volatile
   689  01AE  29B0               	goto	u881
   690  01AF  29B1               	goto	u880
   691  01B0                     u881:
   692  01B0  2976               	goto	l128
   693  01B1                     u880:
   694  01B1                     l1558:
   695                           
   696                           ;newmain.c: 83:             ADCON0bits.GO=1;
   697  01B1  149F               	bsf	31,1	;volatile
   698  01B2  2976               	goto	l128
   699  01B3  120A  118A  280C   	ljmp	start
   700  01B6                     __end_of_main:
   701                           
   702                           	psect	text1
   703  001A                     __ptext1:	
   704 ;; *************** function _sprintf *****************
   705 ;; Defined at:
   706 ;;		line 505 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  sp              1    wreg     PTR unsigned char 
   709 ;;		 -> main@s(16), 
   710 ;;  f               1    9[BANK0 ] PTR const unsigned char 
   711 ;;		 -> STR_7(8), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  sp              1   22[BANK0 ] PTR unsigned char 
   714 ;;		 -> main@s(16), 
   715 ;;  tmpval          4    0        struct .
   716 ;;  val             2   19[BANK0 ] unsigned int 
   717 ;;  cp              2    0        PTR const unsigned char 
   718 ;;  len             2    0        unsigned int 
   719 ;;  c               1   23[BANK0 ] unsigned char 
   720 ;;  prec            1   21[BANK0 ] char 
   721 ;;  ap              1   18[BANK0 ] PTR void [1]
   722 ;;		 -> ?_sprintf(2), 
   723 ;;  flag            1   17[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  2    9[BANK0 ] int 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       5       0       0       0
   734 ;;      Locals:         0       7       0       0       0
   735 ;;      Temps:          0       3       0       0       0
   736 ;;      Totals:         0      15       0       0       0
   737 ;;Total ram usage:       15 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		___lwdiv
   742 ;;		___lwmod
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _sprintf
   750  001A                     _sprintf:
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   754                           ;sprintf@sp stored from wreg
   755  001A  1283               	bcf	3,5	;RP0=0, select bank0
   756  001B  1303               	bcf	3,6	;RP1=0, select bank0
   757  001C  00B6               	movwf	sprintf@sp
   758  001D                     l1436:
   759                           
   760                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   761  001D  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   762  001E  00AE               	movwf	??_sprintf
   763  001F  082E               	movf	??_sprintf,w
   764  0020  00B2               	movwf	sprintf@ap
   765                           
   766                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   767  0021  28D2               	goto	l1478
   768  0022                     l1438:
   769                           
   770                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   771  0022  3025               	movlw	37
   772  0023  0637               	xorwf	sprintf@c,w
   773  0024  1903               	btfsc	3,2
   774  0025  2827               	goto	u811
   775  0026  2828               	goto	u810
   776  0027                     u811:
   777  0027  2834               	goto	l1444
   778  0028                     u810:
   779  0028                     l1440:
   780                           
   781                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   782  0028  0837               	movf	sprintf@c,w
   783  0029  00AE               	movwf	??_sprintf
   784  002A  0836               	movf	sprintf@sp,w
   785  002B  0084               	movwf	4
   786  002C  082E               	movf	??_sprintf,w
   787  002D  1383               	bcf	3,7	;select IRP bank0
   788  002E  0080               	movwf	0
   789  002F                     l1442:
   790  002F  3001               	movlw	1
   791  0030  00AE               	movwf	??_sprintf
   792  0031  082E               	movf	??_sprintf,w
   793  0032  07B6               	addwf	sprintf@sp,f
   794                           
   795                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   796  0033  28D2               	goto	l1478
   797  0034                     l1444:
   798                           
   799                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   800  0034  01B1               	clrf	sprintf@flag
   801                           
   802                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   803  0035  283B               	goto	l1450
   804  0036                     l1446:
   805                           
   806                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
   807  0036  30C0               	movlw	192
   808  0037  00AE               	movwf	??_sprintf
   809  0038  082E               	movf	??_sprintf,w
   810  0039  04B1               	iorwf	sprintf@flag,f
   811                           
   812                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
   813  003A  2855               	goto	l1452
   814  003B                     l1450:
   815  003B  3001               	movlw	1
   816  003C  07A9               	addwf	sprintf@f,f
   817  003D  30FF               	movlw	-1
   818  003E  0729               	addwf	sprintf@f,w
   819  003F  0084               	movwf	4
   820  0040  120A  118A  2100  120A  118A  	fcall	stringdir
   821  0045  00B7               	movwf	sprintf@c
   822  0046  00AE               	movwf	??_sprintf
   823  0047  01AF               	clrf	??_sprintf+1
   824                           
   825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   826                           ; Switch size 1, requested type "simple"
   827                           ; Number of cases is 1, Range of values is 0 to 0
   828                           ; switch strategies available:
   829                           ; Name         Instructions Cycles
   830                           ; simple_byte            4     3 (average)
   831                           ; direct_byte           11     8 (fixed)
   832                           ; jumptable            260     6 (fixed)
   833                           ;	Chosen strategy is simple_byte
   834  0048  082F               	movf	??_sprintf+1,w
   835  0049  3A00               	xorlw	0	; case 0
   836  004A  1903               	skipnz
   837  004B  284D               	goto	l1580
   838  004C  28D2               	goto	l1478
   839  004D                     l1580:
   840                           
   841                           ; Switch size 1, requested type "simple"
   842                           ; Number of cases is 2, Range of values is 0 to 117
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte            7     4 (average)
   846                           ; jumptable            260     6 (fixed)
   847                           ;	Chosen strategy is simple_byte
   848  004D  082E               	movf	??_sprintf,w
   849  004E  3A00               	xorlw	0	; case 0
   850  004F  1903               	skipnz
   851  0050  28E4               	goto	l1480
   852  0051  3A75               	xorlw	117	; case 117
   853  0052  1903               	skipnz
   854  0053  2836               	goto	l1446
   855  0054  28D2               	goto	l1478
   856  0055                     l1452:
   857                           
   858                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
   859  0055  0832               	movf	sprintf@ap,w
   860  0056  0084               	movwf	4
   861  0057  1383               	bcf	3,7	;select IRP bank0
   862  0058  0800               	movf	0,w
   863  0059  00B3               	movwf	sprintf@val
   864  005A  0A84               	incf	4,f
   865  005B  0800               	movf	0,w
   866  005C  00B4               	movwf	sprintf@val+1
   867  005D                     l1454:
   868  005D  3002               	movlw	2
   869  005E  00AE               	movwf	??_sprintf
   870  005F  082E               	movf	??_sprintf,w
   871  0060  07B2               	addwf	sprintf@ap,f
   872  0061                     l1456:
   873                           
   874                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   875  0061  01B7               	clrf	sprintf@c
   876  0062  0AB7               	incf	sprintf@c,f
   877  0063                     l1462:
   878                           
   879                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   880  0063  0837               	movf	sprintf@c,w
   881  0064  00AE               	movwf	??_sprintf
   882  0065  072E               	addwf	??_sprintf,w
   883  0066  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   884  0067  0084               	movwf	4
   885  0068  120A  118A  2100  120A  118A  	fcall	stringdir
   886  006D  00AF               	movwf	??_sprintf+1
   887  006E  120A  118A  2100  120A  118A  	fcall	stringdir
   888  0073  00B0               	movwf	??_sprintf+2
   889  0074  0830               	movf	??_sprintf+2,w
   890  0075  0234               	subwf	sprintf@val+1,w
   891  0076  1D03               	skipz
   892  0077  287A               	goto	u825
   893  0078  082F               	movf	??_sprintf+1,w
   894  0079  0233               	subwf	sprintf@val,w
   895  007A                     u825:
   896  007A  1803               	skipnc
   897  007B  287D               	goto	u821
   898  007C  287E               	goto	u820
   899  007D                     u821:
   900  007D  287F               	goto	l1466
   901  007E                     u820:
   902  007E  2889               	goto	l1468
   903  007F                     l1466:
   904  007F  3001               	movlw	1
   905  0080  00AE               	movwf	??_sprintf
   906  0081  082E               	movf	??_sprintf,w
   907  0082  07B7               	addwf	sprintf@c,f
   908  0083  3005               	movlw	5
   909  0084  0637               	xorwf	sprintf@c,w
   910  0085  1D03               	btfss	3,2
   911  0086  2888               	goto	u831
   912  0087  2889               	goto	u830
   913  0088                     u831:
   914  0088  2863               	goto	l1462
   915  0089                     u830:
   916  0089                     l1468:
   917                           
   918                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Program File
      +                          s\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
   919  0089  0837               	movf	sprintf@c,w
   920  008A  00AE               	movwf	??_sprintf
   921  008B  082E               	movf	??_sprintf,w
   922  008C  00B5               	movwf	sprintf@prec
   923                           
   924                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   925  008D  28C9               	goto	l1476
   926  008E                     l1470:
   927                           
   928                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
   929  008E  300A               	movlw	10
   930  008F  00A3               	movwf	___lwmod@divisor
   931  0090  3000               	movlw	0
   932  0091  00A4               	movwf	___lwmod@divisor+1
   933  0092  0835               	movf	sprintf@prec,w
   934  0093  00AE               	movwf	??_sprintf
   935  0094  072E               	addwf	??_sprintf,w
   936  0095  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   937  0096  0084               	movwf	4
   938  0097  120A  118A  2100  120A  118A  	fcall	stringdir
   939  009C  00F4               	movwf	___lwdiv@divisor
   940  009D  120A  118A  2100  120A  118A  	fcall	stringdir
   941  00A2  00F5               	movwf	___lwdiv@divisor+1
   942  00A3  0834               	movf	sprintf@val+1,w
   943  00A4  00F7               	movwf	___lwdiv@dividend+1
   944  00A5  0833               	movf	sprintf@val,w
   945  00A6  00F6               	movwf	___lwdiv@dividend
   946  00A7  120A  118A  2200  120A  118A  	fcall	___lwdiv
   947  00AC  0875               	movf	?___lwdiv+1,w
   948  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   949  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   950  00AF  00A6               	movwf	___lwmod@dividend+1
   951  00B0  0874               	movf	?___lwdiv,w
   952  00B1  00A5               	movwf	___lwmod@dividend
   953  00B2  120A  118A  2284  120A  118A  	fcall	___lwmod
   954  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   955  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   956  00B9  0823               	movf	?___lwmod,w
   957  00BA  3E30               	addlw	48
   958  00BB  00AF               	movwf	??_sprintf+1
   959  00BC  082F               	movf	??_sprintf+1,w
   960  00BD  00B7               	movwf	sprintf@c
   961  00BE                     l1472:
   962                           
   963                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
   964  00BE  0837               	movf	sprintf@c,w
   965  00BF  00AE               	movwf	??_sprintf
   966  00C0  0836               	movf	sprintf@sp,w
   967  00C1  0084               	movwf	4
   968  00C2  082E               	movf	??_sprintf,w
   969  00C3  1383               	bcf	3,7	;select IRP bank0
   970  00C4  0080               	movwf	0
   971  00C5                     l1474:
   972  00C5  3001               	movlw	1
   973  00C6  00AE               	movwf	??_sprintf
   974  00C7  082E               	movf	??_sprintf,w
   975  00C8  07B6               	addwf	sprintf@sp,f
   976  00C9                     l1476:
   977                           
   978                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
   979  00C9  30FF               	movlw	255
   980  00CA  00AE               	movwf	??_sprintf
   981  00CB  082E               	movf	??_sprintf,w
   982  00CC  07B5               	addwf	sprintf@prec,f
   983  00CD  0A35               	incf	sprintf@prec,w
   984  00CE  1D03               	btfss	3,2
   985  00CF  28D1               	goto	u841
   986  00D0  28D2               	goto	u840
   987  00D1                     u841:
   988  00D1  288E               	goto	l1470
   989  00D2                     u840:
   990  00D2                     l1478:
   991                           
   992                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   993  00D2  3001               	movlw	1
   994  00D3  07A9               	addwf	sprintf@f,f
   995  00D4  30FF               	movlw	-1
   996  00D5  0729               	addwf	sprintf@f,w
   997  00D6  0084               	movwf	4
   998  00D7  120A  118A  2100  120A  118A  	fcall	stringdir
   999  00DC  00AE               	movwf	??_sprintf
  1000  00DD  082E               	movf	??_sprintf,w
  1001  00DE  00B7               	movwf	sprintf@c
  1002  00DF  0837               	movf	sprintf@c,w
  1003  00E0  1D03               	btfss	3,2
  1004  00E1  28E3               	goto	u851
  1005  00E2  28E4               	goto	u850
  1006  00E3                     u851:
  1007  00E3  2822               	goto	l1438
  1008  00E4                     u850:
  1009  00E4                     l1480:
  1010                           
  1011                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1012  00E4  0836               	movf	sprintf@sp,w
  1013  00E5  0084               	movwf	4
  1014  00E6  1383               	bcf	3,7	;select IRP bank0
  1015  00E7  0180               	clrf	0
  1016  00E8                     l250:
  1017  00E8  0008               	return
  1018  00E9                     __end_of_sprintf:
  1019                           
  1020                           	psect	text2
  1021  0284                     __ptext2:	
  1022 ;; *************** function ___lwmod *****************
  1023 ;; Defined at:
  1024 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  divisor         2    3[BANK0 ] unsigned int 
  1027 ;;  dividend        2    5[BANK0 ] unsigned int 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  counter         1    8[BANK0 ] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    3[BANK0 ] unsigned int 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       4       0       0       0
  1040 ;;      Locals:         0       1       0       0       0
  1041 ;;      Temps:          0       1       0       0       0
  1042 ;;      Totals:         0       6       0       0       0
  1043 ;;Total ram usage:        6 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_sprintf
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function ___lwmod
  1055  0284                     ___lwmod:
  1056  0284                     l1392:	
  1057                           ;incstack = 0
  1058                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1059                           
  1060  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0286  0823               	movf	___lwmod@divisor,w
  1063  0287  0424               	iorwf	___lwmod@divisor+1,w
  1064  0288  1903               	btfsc	3,2
  1065  0289  2A8B               	goto	u731
  1066  028A  2A8C               	goto	u730
  1067  028B                     u731:
  1068  028B  2ABB               	goto	l1410
  1069  028C                     u730:
  1070  028C                     l1394:
  1071  028C  01A8               	clrf	___lwmod@counter
  1072  028D  0AA8               	incf	___lwmod@counter,f
  1073  028E  2A9A               	goto	l1400
  1074  028F                     l1396:
  1075  028F  3001               	movlw	1
  1076  0290                     u745:
  1077  0290  1003               	clrc
  1078  0291  0DA3               	rlf	___lwmod@divisor,f
  1079  0292  0DA4               	rlf	___lwmod@divisor+1,f
  1080  0293  3EFF               	addlw	-1
  1081  0294  1D03               	skipz
  1082  0295  2A90               	goto	u745
  1083  0296                     l1398:
  1084  0296  3001               	movlw	1
  1085  0297  00A7               	movwf	??___lwmod
  1086  0298  0827               	movf	??___lwmod,w
  1087  0299  07A8               	addwf	___lwmod@counter,f
  1088  029A                     l1400:
  1089  029A  1FA4               	btfss	___lwmod@divisor+1,7
  1090  029B  2A9D               	goto	u751
  1091  029C  2A9E               	goto	u750
  1092  029D                     u751:
  1093  029D  2A8F               	goto	l1396
  1094  029E                     u750:
  1095  029E                     l1402:
  1096  029E  0824               	movf	___lwmod@divisor+1,w
  1097  029F  0226               	subwf	___lwmod@dividend+1,w
  1098  02A0  1D03               	skipz
  1099  02A1  2AA4               	goto	u765
  1100  02A2  0823               	movf	___lwmod@divisor,w
  1101  02A3  0225               	subwf	___lwmod@dividend,w
  1102  02A4                     u765:
  1103  02A4  1C03               	skipc
  1104  02A5  2AA7               	goto	u761
  1105  02A6  2AA8               	goto	u760
  1106  02A7                     u761:
  1107  02A7  2AAE               	goto	l1406
  1108  02A8                     u760:
  1109  02A8                     l1404:
  1110  02A8  0823               	movf	___lwmod@divisor,w
  1111  02A9  02A5               	subwf	___lwmod@dividend,f
  1112  02AA  0824               	movf	___lwmod@divisor+1,w
  1113  02AB  1C03               	skipc
  1114  02AC  03A6               	decf	___lwmod@dividend+1,f
  1115  02AD  02A6               	subwf	___lwmod@dividend+1,f
  1116  02AE                     l1406:
  1117  02AE  3001               	movlw	1
  1118  02AF                     u775:
  1119  02AF  1003               	clrc
  1120  02B0  0CA4               	rrf	___lwmod@divisor+1,f
  1121  02B1  0CA3               	rrf	___lwmod@divisor,f
  1122  02B2  3EFF               	addlw	-1
  1123  02B3  1D03               	skipz
  1124  02B4  2AAF               	goto	u775
  1125  02B5                     l1408:
  1126  02B5  3001               	movlw	1
  1127  02B6  02A8               	subwf	___lwmod@counter,f
  1128  02B7  1D03               	btfss	3,2
  1129  02B8  2ABA               	goto	u781
  1130  02B9  2ABB               	goto	u780
  1131  02BA                     u781:
  1132  02BA  2A9E               	goto	l1402
  1133  02BB                     u780:
  1134  02BB                     l1410:
  1135  02BB  0826               	movf	___lwmod@dividend+1,w
  1136  02BC  00A4               	movwf	?___lwmod+1
  1137  02BD  0825               	movf	___lwmod@dividend,w
  1138  02BE  00A3               	movwf	?___lwmod
  1139  02BF                     l536:
  1140  02BF  0008               	return
  1141  02C0                     __end_of___lwmod:
  1142                           
  1143                           	psect	text3
  1144  0200                     __ptext3:	
  1145 ;; *************** function ___lwdiv *****************
  1146 ;; Defined at:
  1147 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  divisor         2    4[COMMON] unsigned int 
  1150 ;;  dividend        2    6[COMMON] unsigned int 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  quotient        2    0[BANK0 ] unsigned int 
  1153 ;;  counter         1    2[BANK0 ] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2    4[COMMON] unsigned int 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         4       0       0       0       0
  1164 ;;      Locals:         0       3       0       0       0
  1165 ;;      Temps:          1       0       0       0       0
  1166 ;;      Totals:         5       3       0       0       0
  1167 ;;Total ram usage:        8 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_sprintf
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function ___lwdiv
  1179  0200                     ___lwdiv:
  1180  0200                     l1114:	
  1181                           ;incstack = 0
  1182                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1183                           
  1184  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0202  01A0               	clrf	___lwdiv@quotient
  1187  0203  01A1               	clrf	___lwdiv@quotient+1
  1188  0204                     l1116:
  1189  0204  0874               	movf	___lwdiv@divisor,w
  1190  0205  0475               	iorwf	___lwdiv@divisor+1,w
  1191  0206  1903               	btfsc	3,2
  1192  0207  2A09               	goto	u451
  1193  0208  2A0A               	goto	u450
  1194  0209                     u451:
  1195  0209  2A41               	goto	l1136
  1196  020A                     u450:
  1197  020A                     l1118:
  1198  020A  01A2               	clrf	___lwdiv@counter
  1199  020B  0AA2               	incf	___lwdiv@counter,f
  1200  020C  2A18               	goto	l1124
  1201  020D                     l1120:
  1202  020D  3001               	movlw	1
  1203  020E                     u465:
  1204  020E  1003               	clrc
  1205  020F  0DF4               	rlf	___lwdiv@divisor,f
  1206  0210  0DF5               	rlf	___lwdiv@divisor+1,f
  1207  0211  3EFF               	addlw	-1
  1208  0212  1D03               	skipz
  1209  0213  2A0E               	goto	u465
  1210  0214                     l1122:
  1211  0214  3001               	movlw	1
  1212  0215  00F8               	movwf	??___lwdiv
  1213  0216  0878               	movf	??___lwdiv,w
  1214  0217  07A2               	addwf	___lwdiv@counter,f
  1215  0218                     l1124:
  1216  0218  1FF5               	btfss	___lwdiv@divisor+1,7
  1217  0219  2A1B               	goto	u471
  1218  021A  2A1C               	goto	u470
  1219  021B                     u471:
  1220  021B  2A0D               	goto	l1120
  1221  021C                     u470:
  1222  021C                     l1126:
  1223  021C  3001               	movlw	1
  1224  021D                     u485:
  1225  021D  1003               	clrc
  1226  021E  0DA0               	rlf	___lwdiv@quotient,f
  1227  021F  0DA1               	rlf	___lwdiv@quotient+1,f
  1228  0220  3EFF               	addlw	-1
  1229  0221  1D03               	skipz
  1230  0222  2A1D               	goto	u485
  1231  0223  0875               	movf	___lwdiv@divisor+1,w
  1232  0224  0277               	subwf	___lwdiv@dividend+1,w
  1233  0225  1D03               	skipz
  1234  0226  2A29               	goto	u495
  1235  0227  0874               	movf	___lwdiv@divisor,w
  1236  0228  0276               	subwf	___lwdiv@dividend,w
  1237  0229                     u495:
  1238  0229  1C03               	skipc
  1239  022A  2A2C               	goto	u491
  1240  022B  2A2D               	goto	u490
  1241  022C                     u491:
  1242  022C  2A34               	goto	l1132
  1243  022D                     u490:
  1244  022D                     l1128:
  1245  022D  0874               	movf	___lwdiv@divisor,w
  1246  022E  02F6               	subwf	___lwdiv@dividend,f
  1247  022F  0875               	movf	___lwdiv@divisor+1,w
  1248  0230  1C03               	skipc
  1249  0231  03F7               	decf	___lwdiv@dividend+1,f
  1250  0232  02F7               	subwf	___lwdiv@dividend+1,f
  1251  0233                     l1130:
  1252  0233  1420               	bsf	___lwdiv@quotient,0
  1253  0234                     l1132:
  1254  0234  3001               	movlw	1
  1255  0235                     u505:
  1256  0235  1003               	clrc
  1257  0236  0CF5               	rrf	___lwdiv@divisor+1,f
  1258  0237  0CF4               	rrf	___lwdiv@divisor,f
  1259  0238  3EFF               	addlw	-1
  1260  0239  1D03               	skipz
  1261  023A  2A35               	goto	u505
  1262  023B                     l1134:
  1263  023B  3001               	movlw	1
  1264  023C  02A2               	subwf	___lwdiv@counter,f
  1265  023D  1D03               	btfss	3,2
  1266  023E  2A40               	goto	u511
  1267  023F  2A41               	goto	u510
  1268  0240                     u511:
  1269  0240  2A1C               	goto	l1126
  1270  0241                     u510:
  1271  0241                     l1136:
  1272  0241  0821               	movf	___lwdiv@quotient+1,w
  1273  0242  00F5               	movwf	?___lwdiv+1
  1274  0243  0820               	movf	___lwdiv@quotient,w
  1275  0244  00F4               	movwf	?___lwdiv
  1276  0245                     l526:
  1277  0245  0008               	return
  1278  0246                     __end_of___lwdiv:
  1279                           
  1280                           	psect	text4
  1281  02F5                     __ptext4:	
  1282 ;; *************** function _setup *****************
  1283 ;; Defined at:
  1284 ;;		line 53 in file "newmain.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _setup
  1314  02F5                     _setup:
  1315  02F5                     l1198:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _setup: [wreg+status,2]
  1318                           
  1319                           
  1320                           ;newmain.c: 54:     t1 = 0;
  1321  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1322  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1323  02F7  01CC               	clrf	_t1
  1324  02F8  01CD               	clrf	_t1+1
  1325                           
  1326                           ;newmain.c: 55:     t2 = 0;
  1327  02F9  01CA               	clrf	_t2
  1328  02FA  01CB               	clrf	_t2+1
  1329  02FB                     l1200:
  1330                           
  1331                           ;newmain.c: 56:     TRISA = 255;
  1332  02FB  30FF               	movlw	255
  1333  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1334  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1335  02FE  0085               	movwf	5	;volatile
  1336  02FF                     l1202:
  1337                           
  1338                           ;newmain.c: 57:     TRISC = 0b00000000;
  1339  02FF  0187               	clrf	7	;volatile
  1340  0300                     l1204:
  1341                           
  1342                           ;newmain.c: 58:     TRISD = 0b00000000;
  1343  0300  0188               	clrf	8	;volatile
  1344  0301                     l1206:
  1345                           
  1346                           ;newmain.c: 59:     TRISE = 0b00000000;
  1347  0301  0189               	clrf	9	;volatile
  1348                           
  1349                           ;newmain.c: 60:     ANSEL = 0b00000011;
  1350  0302  3003               	movlw	3
  1351  0303  1683               	bsf	3,5	;RP0=1, select bank3
  1352  0304  1703               	bsf	3,6	;RP1=1, select bank3
  1353  0305  0088               	movwf	8	;volatile
  1354  0306                     l1208:
  1355                           
  1356                           ;newmain.c: 61:     ANSELH = 0b00000000;
  1357  0306  0189               	clrf	9	;volatile
  1358  0307                     l1210:
  1359                           
  1360                           ;newmain.c: 62:     PORTD = 0b00000000;
  1361  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0309  0188               	clrf	8	;volatile
  1364                           
  1365                           ;newmain.c: 63:     INTCON = 0b11000000;
  1366  030A  30C0               	movlw	192
  1367  030B  008B               	movwf	11	;volatile
  1368                           
  1369                           ;newmain.c: 64:     PIE1 = 0b01000010;
  1370  030C  3042               	movlw	66
  1371  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1372  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1373  030F  008C               	movwf	12	;volatile
  1374                           
  1375                           ;newmain.c: 65:     ADCON0 = 0b00000001;
  1376  0310  3001               	movlw	1
  1377  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0312  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0313  009F               	movwf	31	;volatile
  1380  0314                     l1212:
  1381                           
  1382                           ;newmain.c: 66:     ADCON1 = 0b00000000;
  1383  0314  1683               	bsf	3,5	;RP0=1, select bank1
  1384  0315  1303               	bcf	3,6	;RP1=0, select bank1
  1385  0316  019F               	clrf	31	;volatile
  1386  0317                     l1214:
  1387                           
  1388                           ;newmain.c: 67:     PR2 = 255;
  1389  0317  30FF               	movlw	255
  1390  0318  0092               	movwf	18	;volatile
  1391  0319                     l1216:
  1392                           
  1393                           ;newmain.c: 68:     T2CON = 0b00010110;
  1394  0319  3016               	movlw	22
  1395  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1396  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1397  031C  0092               	movwf	18	;volatile
  1398  031D                     l123:
  1399  031D  0008               	return
  1400  031E                     __end_of_setup:
  1401                           
  1402                           	psect	text5
  1403  031E                     __ptext5:	
  1404 ;; *************** function _Lcd_Write_String *****************
  1405 ;; Defined at:
  1406 ;;		line 100 in file "./lcdlib.h"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  a               1    wreg     PTR unsigned char 
  1409 ;;		 -> STR_6(13), STR_5(20), STR_4(12), STR_3(13), 
  1410 ;;		 -> STR_2(10), STR_1(16), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1413 ;;		 -> STR_6(13), STR_5(20), STR_4(12), STR_3(13), 
  1414 ;;		 -> STR_2(10), STR_1(16), 
  1415 ;;  i               2    0[BANK0 ] int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       3       0       0       0
  1427 ;;      Temps:          0       0       0       0       0
  1428 ;;      Totals:         0       3       0       0       0
  1429 ;;Total ram usage:        3 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    3
  1432 ;; This function calls:
  1433 ;;		_Lcd_Write_Char
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;;		_ARRANQUE
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _Lcd_Write_String
  1442  031E                     _Lcd_Write_String:
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1446                           ;Lcd_Write_String@a stored from wreg
  1447  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1448  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0320  00A2               	movwf	Lcd_Write_String@a
  1450  0321                     l1186:
  1451                           
  1452                           ;./lcdlib.h: 101:     int i;;./lcdlib.h: 102:     for (i = 0; a[i] != '\0'; i++)
  1453  0321  01A0               	clrf	Lcd_Write_String@i
  1454  0322  01A1               	clrf	Lcd_Write_String@i+1
  1455  0323  2B39               	goto	l1192
  1456  0324                     l1188:
  1457                           
  1458                           ;./lcdlib.h: 103:         Lcd_Write_Char(a[i]);
  1459  0324  0820               	movf	Lcd_Write_String@i,w
  1460  0325  0722               	addwf	Lcd_Write_String@a,w
  1461  0326  0084               	movwf	4
  1462  0327  120A  118A  2100  120A  118A  	fcall	stringdir
  1463  032C  120A  118A  236D  120A  118A  	fcall	_Lcd_Write_Char
  1464  0331                     l1190:
  1465  0331  3001               	movlw	1
  1466  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0334  07A0               	addwf	Lcd_Write_String@i,f
  1469  0335  1803               	skipnc
  1470  0336  0AA1               	incf	Lcd_Write_String@i+1,f
  1471  0337  3000               	movlw	0
  1472  0338  07A1               	addwf	Lcd_Write_String@i+1,f
  1473  0339                     l1192:
  1474  0339  0820               	movf	Lcd_Write_String@i,w
  1475  033A  0722               	addwf	Lcd_Write_String@a,w
  1476  033B  0084               	movwf	4
  1477  033C  120A  118A  2100  120A  118A  	fcall	stringdir
  1478  0341  3A00               	xorlw	0
  1479  0342  1D03               	skipz
  1480  0343  2B45               	goto	u601
  1481  0344  2B46               	goto	u600
  1482  0345                     u601:
  1483  0345  2B24               	goto	l1188
  1484  0346                     u600:
  1485  0346                     l101:
  1486  0346  0008               	return
  1487  0347                     __end_of_Lcd_Write_String:
  1488                           
  1489                           	psect	text6
  1490  036D                     __ptext6:	
  1491 ;; *************** function _Lcd_Write_Char *****************
  1492 ;; Defined at:
  1493 ;;		line 91 in file "./lcdlib.h"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  a               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  a               1    7[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          2       0       0       0       0
  1510 ;;      Totals:         3       0       0       0       0
  1511 ;;Total ram usage:        3 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		_Lcd_Port
  1516 ;; This function is called by:
  1517 ;;		_Lcd_Write_String
  1518 ;;		_ARRANQUE
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           
  1523                           ;psect for function _Lcd_Write_Char
  1524  036D                     _Lcd_Write_Char:
  1525                           
  1526                           ;incstack = 0
  1527                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1528                           ;Lcd_Write_Char@a stored from wreg
  1529  036D  00F7               	movwf	Lcd_Write_Char@a
  1530  036E                     l1104:
  1531                           
  1532                           ;./lcdlib.h: 92:     RE1 = 1;
  1533  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1534  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0370  1489               	bsf	9,1	;volatile
  1536  0371                     l1106:
  1537                           
  1538                           ;./lcdlib.h: 93:     Lcd_Port(a);
  1539  0371  0877               	movf	Lcd_Write_Char@a,w
  1540  0372  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  1541  0377                     l1108:
  1542                           
  1543                           ;./lcdlib.h: 94:     RE2 = 1;
  1544  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0379  1509               	bsf	9,2	;volatile
  1547  037A                     l1110:
  1548                           
  1549                           ;./lcdlib.h: 95:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1550  037A  300B               	movlw	11
  1551  037B  00F6               	movwf	??_Lcd_Write_Char+1
  1552  037C  3062               	movlw	98
  1553  037D  00F5               	movwf	??_Lcd_Write_Char
  1554  037E                     u907:
  1555  037E  0BF5               	decfsz	??_Lcd_Write_Char,f
  1556  037F  2B7E               	goto	u907
  1557  0380  0BF6               	decfsz	??_Lcd_Write_Char+1,f
  1558  0381  2B7E               	goto	u907
  1559  0382  0000               	nop
  1560  0383                     l1112:
  1561                           
  1562                           ;./lcdlib.h: 96:     RE2 = 0;
  1563  0383  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0384  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0385  1109               	bcf	9,2	;volatile
  1566  0386                     l95:
  1567  0386  0008               	return
  1568  0387                     __end_of_Lcd_Write_Char:
  1569                           
  1570                           	psect	text7
  1571  0347                     __ptext7:	
  1572 ;; *************** function _Lcd_Set_Cursor *****************
  1573 ;; Defined at:
  1574 ;;		line 66 in file "./lcdlib.h"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  a               1    wreg     unsigned char 
  1577 ;;  b               1    8[COMMON] unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  a               1    1[BANK0 ] unsigned char 
  1580 ;;  temp            1    2[BANK0 ] unsigned char 
  1581 ;;  y               1    0        unsigned char 
  1582 ;;  z               1    0        unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         1       0       0       0       0
  1593 ;;      Locals:         0       2       0       0       0
  1594 ;;      Temps:          0       1       0       0       0
  1595 ;;      Totals:         1       3       0       0       0
  1596 ;;Total ram usage:        4 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_Lcd_Cmd
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;;		_ARRANQUE
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _Lcd_Set_Cursor
  1609  0347                     _Lcd_Set_Cursor:
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1613                           ;Lcd_Set_Cursor@a stored from wreg
  1614  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0349  00A1               	movwf	Lcd_Set_Cursor@a
  1617  034A                     l1414:
  1618                           
  1619                           ;./lcdlib.h: 67:     char temp, z, y;;./lcdlib.h: 68:     if (a == 1) {
  1620  034A  0321               	decf	Lcd_Set_Cursor@a,w
  1621  034B  1D03               	btfss	3,2
  1622  034C  2B4E               	goto	u791
  1623  034D  2B4F               	goto	u790
  1624  034E                     u791:
  1625  034E  2B5B               	goto	l1420
  1626  034F                     u790:
  1627  034F                     l1416:
  1628                           
  1629                           ;./lcdlib.h: 69:         temp = 0x80 + b - 1;
  1630  034F  0878               	movf	Lcd_Set_Cursor@b,w
  1631  0350  3E7F               	addlw	127
  1632  0351  00A0               	movwf	??_Lcd_Set_Cursor
  1633  0352  0820               	movf	??_Lcd_Set_Cursor,w
  1634  0353  00A2               	movwf	Lcd_Set_Cursor@temp
  1635  0354                     l1418:
  1636                           
  1637                           ;./lcdlib.h: 70:         Lcd_Cmd(temp);
  1638  0354  0822               	movf	Lcd_Set_Cursor@temp,w
  1639  0355  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1640                           
  1641                           ;./lcdlib.h: 71:     } else if (a == 2) {
  1642  035A  2B6C               	goto	l89
  1643  035B                     l1420:
  1644  035B  3002               	movlw	2
  1645  035C  0621               	xorwf	Lcd_Set_Cursor@a,w
  1646  035D  1D03               	btfss	3,2
  1647  035E  2B60               	goto	u801
  1648  035F  2B61               	goto	u800
  1649  0360                     u801:
  1650  0360  2B6C               	goto	l89
  1651  0361                     u800:
  1652  0361                     l1422:
  1653                           
  1654                           ;./lcdlib.h: 72:         temp = 0xC0 + b - 1;
  1655  0361  0878               	movf	Lcd_Set_Cursor@b,w
  1656  0362  3EBF               	addlw	191
  1657  0363  00A0               	movwf	??_Lcd_Set_Cursor
  1658  0364  0820               	movf	??_Lcd_Set_Cursor,w
  1659  0365  00A2               	movwf	Lcd_Set_Cursor@temp
  1660  0366                     l1424:
  1661                           
  1662                           ;./lcdlib.h: 73:         Lcd_Cmd(temp);
  1663  0366  0822               	movf	Lcd_Set_Cursor@temp,w
  1664  0367  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1665  036C                     l89:
  1666  036C  0008               	return
  1667  036D                     __end_of_Lcd_Set_Cursor:
  1668                           
  1669                           	psect	text8
  1670  01B6                     __ptext8:	
  1671 ;; *************** function _Lcd_Init *****************
  1672 ;; Defined at:
  1673 ;;		line 77 in file "./lcdlib.h"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          0       2       0       0       0
  1690 ;;      Totals:         0       2       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    3
  1694 ;; This function calls:
  1695 ;;		_Lcd_Cmd
  1696 ;;		_Lcd_Port
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _Lcd_Init
  1704  01B6                     _Lcd_Init:
  1705  01B6                     l1426:	
  1706                           ;incstack = 0
  1707                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1708                           
  1709                           
  1710                           ;./lcdlib.h: 78:     Lcd_Port(0x00);
  1711  01B6  3000               	movlw	0
  1712  01B7  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  1713  01BC                     l1428:
  1714                           
  1715                           ;./lcdlib.h: 79:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1716  01BC  3034               	movlw	52
  1717  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1718  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1719  01BF  00A1               	movwf	??_Lcd_Init+1
  1720  01C0  30F1               	movlw	241
  1721  01C1  00A0               	movwf	??_Lcd_Init
  1722  01C2                     u917:
  1723  01C2  0BA0               	decfsz	??_Lcd_Init,f
  1724  01C3  29C2               	goto	u917
  1725  01C4  0BA1               	decfsz	??_Lcd_Init+1,f
  1726  01C5  29C2               	goto	u917
  1727  01C6                     l1430:
  1728                           
  1729                           ;./lcdlib.h: 80:     Lcd_Cmd(0x03);
  1730  01C6  3003               	movlw	3
  1731  01C7  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1732                           
  1733                           ;./lcdlib.h: 81:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1734  01CC  300D               	movlw	13
  1735  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1736  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1737  01CF  00A1               	movwf	??_Lcd_Init+1
  1738  01D0  30FB               	movlw	251
  1739  01D1  00A0               	movwf	??_Lcd_Init
  1740  01D2                     u927:
  1741  01D2  0BA0               	decfsz	??_Lcd_Init,f
  1742  01D3  29D2               	goto	u927
  1743  01D4  0BA1               	decfsz	??_Lcd_Init+1,f
  1744  01D5  29D2               	goto	u927
  1745  01D6                     l1432:
  1746                           
  1747                           ;./lcdlib.h: 82:     Lcd_Cmd(0x03);
  1748  01D6  3003               	movlw	3
  1749  01D7  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1750  01DC                     l1434:
  1751                           
  1752                           ;./lcdlib.h: 83:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1753  01DC  301D               	movlw	29
  1754  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1755  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1756  01DF  00A1               	movwf	??_Lcd_Init+1
  1757  01E0  3090               	movlw	144
  1758  01E1  00A0               	movwf	??_Lcd_Init
  1759  01E2                     u937:
  1760  01E2  0BA0               	decfsz	??_Lcd_Init,f
  1761  01E3  29E2               	goto	u937
  1762  01E4  0BA1               	decfsz	??_Lcd_Init+1,f
  1763  01E5  29E2               	goto	u937
  1764  01E6  0000               	nop
  1765                           
  1766                           ;./lcdlib.h: 84:     Lcd_Cmd(0x03);
  1767  01E7  3003               	movlw	3
  1768  01E8  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1769                           
  1770                           ;./lcdlib.h: 86:     Lcd_Cmd(0x38);
  1771  01ED  3038               	movlw	56
  1772  01EE  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1773                           
  1774                           ;./lcdlib.h: 87:     Lcd_Cmd(0x0C);
  1775  01F3  300C               	movlw	12
  1776  01F4  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1777                           
  1778                           ;./lcdlib.h: 88:     Lcd_Cmd(0x06);
  1779  01F9  3006               	movlw	6
  1780  01FA  120A  118A  2387  120A  118A  	fcall	_Lcd_Cmd
  1781  01FF                     l92:
  1782  01FF  0008               	return
  1783  0200                     __end_of_Lcd_Init:
  1784                           
  1785                           	psect	text9
  1786  0387                     __ptext9:	
  1787 ;; *************** function _Lcd_Cmd *****************
  1788 ;; Defined at:
  1789 ;;		line 54 in file "./lcdlib.h"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  a               1    wreg     unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  a               1    7[COMMON] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0
  1805 ;;      Temps:          2       0       0       0       0
  1806 ;;      Totals:         3       0       0       0       0
  1807 ;;Total ram usage:        3 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		_Lcd_Port
  1812 ;; This function is called by:
  1813 ;;		_Lcd_Set_Cursor
  1814 ;;		_Lcd_Init
  1815 ;;		_Lcd_Clear
  1816 ;;		_Lcd_Shift_Right
  1817 ;;		_Lcd_Shift_Left
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _Lcd_Cmd
  1823  0387                     _Lcd_Cmd:
  1824                           
  1825                           ;incstack = 0
  1826                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1827                           ;Lcd_Cmd@a stored from wreg
  1828  0387  00F7               	movwf	Lcd_Cmd@a
  1829  0388                     l1094:
  1830                           
  1831                           ;./lcdlib.h: 55:     RE1 = 0;
  1832  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1834  038A  1089               	bcf	9,1	;volatile
  1835  038B                     l1096:
  1836                           
  1837                           ;./lcdlib.h: 56:     Lcd_Port(a);
  1838  038B  0877               	movf	Lcd_Cmd@a,w
  1839  038C  120A  118A  2246  120A  118A  	fcall	_Lcd_Port
  1840  0391                     l1098:
  1841                           
  1842                           ;./lcdlib.h: 57:     RE2 = 1;
  1843  0391  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0392  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0393  1509               	bsf	9,2	;volatile
  1846  0394                     l1100:
  1847                           
  1848                           ;./lcdlib.h: 58:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1849  0394  300B               	movlw	11
  1850  0395  00F6               	movwf	??_Lcd_Cmd+1
  1851  0396  3062               	movlw	98
  1852  0397  00F5               	movwf	??_Lcd_Cmd
  1853  0398                     u947:
  1854  0398  0BF5               	decfsz	??_Lcd_Cmd,f
  1855  0399  2B98               	goto	u947
  1856  039A  0BF6               	decfsz	??_Lcd_Cmd+1,f
  1857  039B  2B98               	goto	u947
  1858  039C  0000               	nop
  1859  039D                     l1102:
  1860                           
  1861                           ;./lcdlib.h: 59:     RE2 = 0;
  1862  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1863  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1864  039F  1109               	bcf	9,2	;volatile
  1865  03A0                     l80:
  1866  03A0  0008               	return
  1867  03A1                     __end_of_Lcd_Cmd:
  1868                           
  1869                           	psect	text10
  1870  0246                     __ptext10:	
  1871 ;; *************** function _Lcd_Port *****************
  1872 ;; Defined at:
  1873 ;;		line 16 in file "./lcdlib.h"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  a               1    wreg     unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  a               1    4[COMMON] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0
  1890 ;;      Totals:         1       0       0       0       0
  1891 ;;Total ram usage:        1 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_Lcd_Cmd
  1898 ;;		_Lcd_Init
  1899 ;;		_Lcd_Write_Char
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _Lcd_Port
  1905  0246                     _Lcd_Port:
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _Lcd_Port: [wreg]
  1909                           ;Lcd_Port@a stored from wreg
  1910  0246  00F4               	movwf	Lcd_Port@a
  1911  0247                     l1076:
  1912                           
  1913                           ;./lcdlib.h: 17:     if (a & 1)
  1914  0247  1C74               	btfss	Lcd_Port@a,0
  1915  0248  2A4A               	goto	u371
  1916  0249  2A4B               	goto	u370
  1917  024A                     u371:
  1918  024A  2A4F               	goto	l61
  1919  024B                     u370:
  1920  024B                     l1078:
  1921                           
  1922                           ;./lcdlib.h: 18:         RD0 = 1;
  1923  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1924  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1925  024D  1408               	bsf	8,0	;volatile
  1926  024E  2A52               	goto	l62
  1927  024F                     l61:	
  1928                           ;./lcdlib.h: 19:     else
  1929                           
  1930                           
  1931                           ;./lcdlib.h: 20:         RD0 = 0;
  1932  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0251  1008               	bcf	8,0	;volatile
  1935  0252                     l62:
  1936                           
  1937                           ;./lcdlib.h: 22:     if (a & 2)
  1938  0252  1CF4               	btfss	Lcd_Port@a,1
  1939  0253  2A55               	goto	u381
  1940  0254  2A56               	goto	u380
  1941  0255                     u381:
  1942  0255  2A58               	goto	l63
  1943  0256                     u380:
  1944  0256                     l1080:
  1945                           
  1946                           ;./lcdlib.h: 23:         RD1 = 1;
  1947  0256  1488               	bsf	8,1	;volatile
  1948  0257  2A59               	goto	l64
  1949  0258                     l63:	
  1950                           ;./lcdlib.h: 24:     else
  1951                           
  1952                           
  1953                           ;./lcdlib.h: 25:         RD1 = 0;
  1954  0258  1088               	bcf	8,1	;volatile
  1955  0259                     l64:
  1956                           
  1957                           ;./lcdlib.h: 27:     if (a & 4)
  1958  0259  1D74               	btfss	Lcd_Port@a,2
  1959  025A  2A5C               	goto	u391
  1960  025B  2A5D               	goto	u390
  1961  025C                     u391:
  1962  025C  2A5F               	goto	l65
  1963  025D                     u390:
  1964  025D                     l1082:
  1965                           
  1966                           ;./lcdlib.h: 28:         RD2 = 1;
  1967  025D  1508               	bsf	8,2	;volatile
  1968  025E  2A60               	goto	l66
  1969  025F                     l65:	
  1970                           ;./lcdlib.h: 29:     else
  1971                           
  1972                           
  1973                           ;./lcdlib.h: 30:         RD2 = 0;
  1974  025F  1108               	bcf	8,2	;volatile
  1975  0260                     l66:
  1976                           
  1977                           ;./lcdlib.h: 32:     if (a & 8)
  1978  0260  1DF4               	btfss	Lcd_Port@a,3
  1979  0261  2A63               	goto	u401
  1980  0262  2A64               	goto	u400
  1981  0263                     u401:
  1982  0263  2A66               	goto	l67
  1983  0264                     u400:
  1984  0264                     l1084:
  1985                           
  1986                           ;./lcdlib.h: 33:         RD3 = 1;
  1987  0264  1588               	bsf	8,3	;volatile
  1988  0265  2A67               	goto	l68
  1989  0266                     l67:	
  1990                           ;./lcdlib.h: 34:     else
  1991                           
  1992                           
  1993                           ;./lcdlib.h: 35:         RD3 = 0;
  1994  0266  1188               	bcf	8,3	;volatile
  1995  0267                     l68:
  1996                           
  1997                           ;./lcdlib.h: 36:     if (a & 16)
  1998  0267  1E74               	btfss	Lcd_Port@a,4
  1999  0268  2A6A               	goto	u411
  2000  0269  2A6B               	goto	u410
  2001  026A                     u411:
  2002  026A  2A6D               	goto	l69
  2003  026B                     u410:
  2004  026B                     l1086:
  2005                           
  2006                           ;./lcdlib.h: 37:         RD4 = 1;
  2007  026B  1608               	bsf	8,4	;volatile
  2008  026C  2A6E               	goto	l70
  2009  026D                     l69:	
  2010                           ;./lcdlib.h: 38:     else
  2011                           
  2012                           
  2013                           ;./lcdlib.h: 39:         RD4 = 0;
  2014  026D  1208               	bcf	8,4	;volatile
  2015  026E                     l70:
  2016                           
  2017                           ;./lcdlib.h: 40:     if (a & 32)
  2018  026E  1EF4               	btfss	Lcd_Port@a,5
  2019  026F  2A71               	goto	u421
  2020  0270  2A72               	goto	u420
  2021  0271                     u421:
  2022  0271  2A74               	goto	l71
  2023  0272                     u420:
  2024  0272                     l1088:
  2025                           
  2026                           ;./lcdlib.h: 41:         RD5 = 1;
  2027  0272  1688               	bsf	8,5	;volatile
  2028  0273  2A75               	goto	l72
  2029  0274                     l71:	
  2030                           ;./lcdlib.h: 42:     else
  2031                           
  2032                           
  2033                           ;./lcdlib.h: 43:         RD5 = 0;
  2034  0274  1288               	bcf	8,5	;volatile
  2035  0275                     l72:
  2036                           
  2037                           ;./lcdlib.h: 44:     if (a & 64)
  2038  0275  1F74               	btfss	Lcd_Port@a,6
  2039  0276  2A78               	goto	u431
  2040  0277  2A79               	goto	u430
  2041  0278                     u431:
  2042  0278  2A7B               	goto	l73
  2043  0279                     u430:
  2044  0279                     l1090:
  2045                           
  2046                           ;./lcdlib.h: 45:         RD6 = 1;
  2047  0279  1708               	bsf	8,6	;volatile
  2048  027A  2A7C               	goto	l74
  2049  027B                     l73:	
  2050                           ;./lcdlib.h: 46:     else
  2051                           
  2052                           
  2053                           ;./lcdlib.h: 47:         RD6 = 0;
  2054  027B  1308               	bcf	8,6	;volatile
  2055  027C                     l74:
  2056                           
  2057                           ;./lcdlib.h: 48:     if (a & 128)
  2058  027C  1FF4               	btfss	Lcd_Port@a,7
  2059  027D  2A7F               	goto	u441
  2060  027E  2A80               	goto	u440
  2061  027F                     u441:
  2062  027F  2A82               	goto	l75
  2063  0280                     u440:
  2064  0280                     l1092:
  2065                           
  2066                           ;./lcdlib.h: 49:         RD7 = 1;
  2067  0280  1788               	bsf	8,7	;volatile
  2068  0281  2A83               	goto	l77
  2069  0282                     l75:	
  2070                           ;./lcdlib.h: 50:     else
  2071                           
  2072                           
  2073                           ;./lcdlib.h: 51:         RD7 = 0;
  2074  0282  1388               	bcf	8,7	;volatile
  2075  0283                     l77:
  2076  0283  0008               	return
  2077  0284                     __end_of_Lcd_Port:
  2078                           
  2079                           	psect	text11
  2080  02C0                     __ptext11:	
  2081 ;; *************** function _ISR *****************
  2082 ;; Defined at:
  2083 ;;		line 89 in file "newmain.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          4       0       0       0       0
  2100 ;;      Totals:         4       0       0       0       0
  2101 ;;Total ram usage:        4 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		Interrupt level 1
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _ISR
  2112  02C0                     _ISR:
  2113  02C0                     i1l1344:
  2114                           
  2115                           ;newmain.c: 90:     if(PIR1bits.ADIF==1){
  2116  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2117  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2118  02C2  1F0C               	btfss	12,6	;volatile
  2119  02C3  2AC5               	goto	u69_21
  2120  02C4  2AC6               	goto	u69_20
  2121  02C5                     u69_21:
  2122  02C5  2ADC               	goto	i1l1356
  2123  02C6                     u69_20:
  2124  02C6                     i1l1346:
  2125                           
  2126                           ;newmain.c: 91:         if(ADCON0==0b00000001){
  2127  02C6  031F               	decf	31,w	;volatile
  2128  02C7  1D03               	btfss	3,2
  2129  02C8  2ACA               	goto	u70_21
  2130  02C9  2ACB               	goto	u70_20
  2131  02CA                     u70_21:
  2132  02CA  2AD4               	goto	i1l1352
  2133  02CB                     u70_20:
  2134  02CB                     i1l1348:
  2135                           
  2136                           ;newmain.c: 92:             t1=ADRESH;
  2137  02CB  081E               	movf	30,w	;volatile
  2138  02CC  00F0               	movwf	??_ISR
  2139  02CD  01F1               	clrf	??_ISR+1
  2140  02CE  0870               	movf	??_ISR,w
  2141  02CF  00CC               	movwf	_t1
  2142  02D0  0871               	movf	??_ISR+1,w
  2143  02D1  00CD               	movwf	_t1+1
  2144  02D2                     i1l1350:
  2145                           
  2146                           ;newmain.c: 93:             PIR1bits.ADIF=0;
  2147  02D2  130C               	bcf	12,6	;volatile
  2148                           
  2149                           ;newmain.c: 94:         }
  2150  02D3  2ADC               	goto	i1l1356
  2151  02D4                     i1l1352:
  2152                           
  2153                           ;newmain.c: 96:             t2=ADRESH;
  2154  02D4  081E               	movf	30,w	;volatile
  2155  02D5  00F0               	movwf	??_ISR
  2156  02D6  01F1               	clrf	??_ISR+1
  2157  02D7  0870               	movf	??_ISR,w
  2158  02D8  00CA               	movwf	_t2
  2159  02D9  0871               	movf	??_ISR+1,w
  2160  02DA  00CB               	movwf	_t2+1
  2161  02DB                     i1l1354:
  2162                           
  2163                           ;newmain.c: 97:             PIR1bits.ADIF=0;
  2164  02DB  130C               	bcf	12,6	;volatile
  2165  02DC                     i1l1356:
  2166                           
  2167                           ;newmain.c: 100:     if(PIR1bits.TMR2IF==1){
  2168  02DC  1C8C               	btfss	12,1	;volatile
  2169  02DD  2ADF               	goto	u71_21
  2170  02DE  2AE0               	goto	u71_20
  2171  02DF                     u71_21:
  2172  02DF  2AEE               	goto	i1l143
  2173  02E0                     u71_20:
  2174  02E0                     i1l1358:
  2175                           
  2176                           ;newmain.c: 101:         if(ADCON0==0b00000001){
  2177  02E0  031F               	decf	31,w	;volatile
  2178  02E1  1D03               	btfss	3,2
  2179  02E2  2AE4               	goto	u72_21
  2180  02E3  2AE5               	goto	u72_20
  2181  02E4                     u72_21:
  2182  02E4  2AEA               	goto	i1l1366
  2183  02E5                     u72_20:
  2184  02E5                     i1l1360:
  2185                           
  2186                           ;newmain.c: 102:             ADCON0=0b00000101;
  2187  02E5  3005               	movlw	5
  2188  02E6  009F               	movwf	31	;volatile
  2189  02E7                     i1l1362:
  2190                           
  2191                           ;newmain.c: 103:             PIR1bits.TMR2IF=0;
  2192  02E7  108C               	bcf	12,1	;volatile
  2193  02E8                     i1l1364:
  2194                           
  2195                           ;newmain.c: 104:             TMR2=0;
  2196  02E8  0191               	clrf	17	;volatile
  2197                           
  2198                           ;newmain.c: 105:         }
  2199  02E9  2AEE               	goto	i1l143
  2200  02EA                     i1l1366:
  2201                           
  2202                           ;newmain.c: 107:             ADCON0=0b00000001;
  2203  02EA  3001               	movlw	1
  2204  02EB  009F               	movwf	31	;volatile
  2205  02EC                     i1l1368:
  2206                           
  2207                           ;newmain.c: 108:             PIR1bits.TMR2IF=0;
  2208  02EC  108C               	bcf	12,1	;volatile
  2209  02ED  2AE8               	goto	i1l1364
  2210  02EE                     i1l143:
  2211  02EE  0873               	movf	??_ISR+3,w
  2212  02EF  008A               	movwf	10
  2213  02F0  0E72               	swapf	??_ISR+2,w
  2214  02F1  0083               	movwf	3
  2215  02F2  0EFE               	swapf	btemp,f
  2216  02F3  0E7E               	swapf	btemp,w
  2217  02F4  0009               	retfie
  2218  02F5                     __end_of_ISR:
  2219  007E                     btemp	set	126	;btemp
  2220  007E                     wtemp0	set	126
  2221                           
  2222                           	psect	intentry
  2223  0004                     __pintentry:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2226                           
  2227  0004                     interrupt_function:
  2228  007E                     saved_w	set	btemp
  2229  0004  00FE               	movwf	btemp
  2230  0005  0E03               	swapf	3,w
  2231  0006  00F2               	movwf	??_ISR+2
  2232  0007  080A               	movf	10,w
  2233  0008  00F3               	movwf	??_ISR+3
  2234  0009  120A  118A  2AC0   	ljmp	_ISR
  2235                           
  2236                           	psect	config
  2237                           
  2238                           ;Config register CONFIG1 @ 0x2007
  2239                           ;	Oscillator Selection bits
  2240                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  2241                           ;	Watchdog Timer Enable bit
  2242                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2243                           ;	Power-up Timer Enable bit
  2244                           ;	PWRTE = OFF, PWRT disabled
  2245                           ;	RE3/MCLR pin function select bit
  2246                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2247                           ;	Code Protection bit
  2248                           ;	CP = OFF, Program memory code protection is disabled
  2249                           ;	Data Code Protection bit
  2250                           ;	CPD = OFF, Data memory code protection is disabled
  2251                           ;	Brown Out Reset Selection bits
  2252                           ;	BOREN = OFF, BOR disabled
  2253                           ;	Internal External Switchover bit
  2254                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2255                           ;	Fail-Safe Clock Monitor Enabled bit
  2256                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2257                           ;	Low Voltage Programming Enable bit
  2258                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2259                           ;	In-Circuit Debugger Mode bit
  2260                           ;	DEBUG = 0x1, unprogrammed default
  2261  2007                     	org	8199
  2262  2007  2CD7               	dw	11479
  2263                           
  2264                           ;Config register CONFIG2 @ 0x2008
  2265                           ;	Brown-out Reset Selection bit
  2266                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2267                           ;	Flash Program Memory Self Write Enable bits
  2268                           ;	WRT = OFF, Write protection off
  2269  2008                     	org	8200
  2270  2008  3FFF               	dw	16383

Data Sizes:
    Strings     92
    Constant    10
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     42      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_7(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@s(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_6(CODE[13]), STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    3437
                                             24 BANK0     18    18      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    18      5    1418
                                              9 BANK0     15    10      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     486
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     198
                                              5 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1110
                                              8 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              5 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 23:41:07 2021

                        pc 0002                         l61 024F                         l70 026E  
                       l62 0252                         l71 0274                         l63 0258  
                       l72 0275                         l64 0259                         l80 03A0  
                       l73 027B                         l65 025F                         l74 027C  
                       l66 0260                         l75 0282                         l67 0266  
                       l68 0267                         l92 01FF                         l77 0283  
                       l69 026D                         l95 0386                         l89 036C  
                       _t1 004C                         _t2 004A                         fsr 0004  
                      l101 0346                        l123 031D                        l128 0176  
                      l250 00E8                        l526 0245                        l536 02BF  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RE1 0049                        _RD4 0044  
                      _RE2 004A                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u400 0264                        u401 0263  
                      u410 026B                        u411 026A                        u420 0272  
                      u421 0271                        u430 0279                        u510 0241  
                      _PR2 0092                        u431 0278                        u511 0240  
                      u440 0280                        u600 0346                        u441 027F  
                      u601 0345                        u505 0235                        u370 024B  
                      u450 020A                        u371 024A                        u451 0209  
                      u380 0256                        _ISR 02C0                        u381 0255  
                      u390 025D                        u470 021C                        u391 025C  
                      u471 021B                        u800 0361                        u801 0360  
                      u465 020E                        u490 022D                        u730 028C  
                      u810 0028                        u491 022C                        u731 028B  
                      u811 0027                        u820 007E                        u485 021D  
                      u821 007D                        u750 029E                        u830 0089  
                      u495 0229                        u751 029D                        u831 0088  
                      u760 02A8                        u840 00D2                        u761 02A7  
                      u745 0290                        u841 00D1                        u825 007A  
                      u850 00E4                        u907 037E                        u851 00E3  
                      u780 02BB                        u917 01C2                        u781 02BA  
                      u765 02A4                        u790 034F                        u927 01D2  
                      u791 034E                        u775 02AF                        u880 01B1  
                      u937 01E2                        u881 01B0                        u947 0398  
                      u897 01A6                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1100 0394                       l1102 039D  
                     l1110 037A                       l1112 0383                       l1104 036E  
                     l1200 02FB                       l1120 020D                       l1106 0371  
                     l1210 0307                       l1202 02FF                       l1130 0233  
                     l1122 0214                       l1114 0200                       l1108 0377  
                     l1212 0314                       l1204 0300                       l1132 0234  
                     l1124 0218                       l1116 0204                       l1214 0317  
                     l1206 0301                       l1134 023B                       l1126 021C  
                     l1118 020A                       l1080 0256                       l1216 0319  
                     l1208 0306                       l1128 022D                       l1136 0241  
                     l1400 029A                       l1090 0279                       l1082 025D  
                     l1402 029E                       l1410 02BB                       l1092 0280  
                     l1084 0264                       l1076 0247                       l1420 035B  
                     l1404 02A8                       l1086 026B                       l1078 024B  
                     l1094 0388                       l1430 01C6                       l1422 0361  
                     l1414 034A                       l1190 0331                       l1406 02AE  
                     l1088 0272                       l1096 038B                       l1432 01D6  
                     l1424 0366                       l1416 034F                       l1192 0339  
                     l1408 02B5                       l1440 0028                       l1098 0391  
                     l1434 01DC                       l1426 01B6                       l1418 0354  
                     l1186 0321                       l1450 003B                       l1442 002F  
                     l1428 01BC                       l1188 0324                       l1452 0055  
                     l1444 0034                       l1436 001D                       l1198 02F5  
                     l1470 008E                       l1462 0063                       l1454 005D  
                     l1446 0036                       l1438 0022                       l1550 0184  
                     l1392 0284                       l1472 00BE                       l1456 0061  
                     l1480 00E4                       l1552 018C                       l1394 028C  
                     l1474 00C5                       l1466 007F                       l1554 01A0  
                     l1546 016C                       l1396 028F                       l1476 00C9  
                     l1468 0089                       l1580 004D                       l1556 01AB  
                     l1548 017E                       l1398 0296                       l1478 00D2  
                     l1558 01B1                       STR_1 0124                       STR_2 015A  
                     STR_3 0141                       STR_4 014E                       STR_5 0110  
                     STR_6 0134                       STR_7 0164                       _PIE1 008C  
                     _TMR2 0011          ?_Lcd_Write_String 0070                       _main 016C  
                     _lmao 0079                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 03A1                      ??_ISR 0070  
                    ?_main 0070                      _ANSEL 0188                      _T2CON 0012  
          __end_of___lwdiv 0246                      i1l143 02EE            __end_of___lwmod 02C0  
                    _PORTD 0008                      u70_20 02CB                      u70_21 02CA  
                    u71_20 02E0                      u71_21 02DF                      u72_20 02E5  
                    u72_21 02E4    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    u69_20 02C6                      u69_21 02C5            __end_of_dpowers 0110  
                    _setup 02F5                      main@s 003A                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 00E9  
         __end_of_Lcd_Init 0200           __end_of_Lcd_Port 0284            __initialization 000F  
             __end_of_main 01B6                     ??_main 0038                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     ?_setup 0070  
                   _ANSELH 0189                     i1l1350 02D2                     i1l1360 02E5  
                   i1l1352 02D4                     i1l1344 02C0                     i1l1362 02E7  
                   i1l1354 02DB                     i1l1346 02C6                     i1l1364 02E8  
                   i1l1348 02CB                     i1l1356 02DC                     i1l1366 02EA  
                   i1l1358 02E0                     i1l1368 02EC                     _INTCON 000B  
                ??_Lcd_Cmd 0075    __size_of_Lcd_Write_Char 001A                  ??___lwdiv 0078  
                ??___lwmod 0027                     saved_w 007E                  ??_sprintf 002E  
          Lcd_Set_Cursor@a 0021            Lcd_Set_Cursor@b 0078    __end_of__initialization 0016  
           __pcstackCOMMON 0070              __end_of_setup 031E             _Lcd_Set_Cursor 0347  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0074  
               __pbssBANK0 004A                 __pmaintext 016C                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 036D                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0074                 __stringtab 0100             _Lcd_Write_Char 036D  
                  _Lcd_Cmd 0387                    ___lwdiv 0200                    ___lwmod 0284  
          ?_Lcd_Set_Cursor 0078                    __ptext1 001A                    __ptext2 0284  
                  __ptext3 0200                    __ptext4 02F5                    __ptext5 031E  
                  __ptext6 036D                    __ptext7 0347                    __ptext8 01B6  
                  __ptext9 0387               __size_of_ISR 0035                    _dpowers 0106  
                  _sprintf 001A     __end_of_Lcd_Write_Char 0387       end_of_initialization 0016  
                Lcd_Port@a 0074            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020           _Lcd_Write_String 031E        start_initialization 000F  
              __end_of_ISR 02F5          __size_of_Lcd_Init 004A          __size_of_Lcd_Port 003E  
          Lcd_Write_Char@a 0077                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 0031  
              sprintf@prec 0035           ___lwdiv@dividend 0076           ??_Lcd_Set_Cursor 0020  
                 ?___lwdiv 0074                   ?___lwmod 0023                  __pstrings 0100  
         ___lwdiv@quotient 0020                   ?_sprintf 0029             __size_of_setup 0029  
        interrupt_function 0004                   Lcd_Cmd@a 0077                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 0105           ??_Lcd_Write_Char 0075  
                 _Lcd_Init 01B6                   _Lcd_Port 0246   __end_of_Lcd_Write_String 0347  
         __size_of_Lcd_Cmd 001A           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0106                 sprintf@val 0033            ___lwdiv@divisor 0074  
          ___lwdiv@counter 0022                   __ptext10 0246                   __ptext11 02C0  
         __size_of_sprintf 00CF              __size_of_main 004A                   intlevel1 0000  
                sprintf@ap 0032                  sprintf@sp 0036           ___lwmod@dividend 0025  
                stringcode 0100         Lcd_Set_Cursor@temp 0022                   sprintf@c 0037  
                 sprintf@f 0029            ___lwmod@divisor 0023            ___lwmod@counter 0028  
                 stringdir 0100                   stringtab 0100  
