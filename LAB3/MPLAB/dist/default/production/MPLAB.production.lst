

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 00:10:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218                           
   219                           	psect	strings
   220  0200                     __pstrings:
   221  0200                     stringtab:
   222  0200                     __stringtab:
   223                           
   224                           ;	String table - string pointers are 1 byte each
   225  0200  1BFF               	btfsc	btemp+1,7
   226  0201  2A0A               	ljmp	stringcode
   227  0202  1383               	bcf	3,7
   228  0203  187F               	btfsc	btemp+1,0
   229  0204  1783               	bsf	3,7
   230  0205  0800               	movf	0,w
   231  0206  0A84               	incf	4,f
   232  0207  1903               	skipnz
   233  0208  0AFF               	incf	btemp+1,f
   234  0209  0008               	return
   235  020A                     stringcode:
   236  020A                     stringdir:
   237  020A  3002               	movlw	high stringdir
   238  020B  008A               	movwf	10
   239  020C  0804               	movf	4,w
   240  020D  0A84               	incf	4,f
   241  020E  0782               	addwf	2,f
   242  020F                     __stringbase:
   243  020F  3400               	retlw	0
   244  0210                     __end_of__stringtab:
   245  0210                     _dpowers:
   246  0210  3401               	retlw	1
   247  0211  3400               	retlw	0
   248  0212  340A               	retlw	10
   249  0213  3400               	retlw	0
   250  0214  3464               	retlw	100
   251  0215  3400               	retlw	0
   252  0216  34E8               	retlw	232
   253  0217  3403               	retlw	3
   254  0218  3410               	retlw	16
   255  0219  3427               	retlw	39
   256  021A                     __end_of_dpowers:
   257  0011                     _TMR2	set	17
   258  001E                     _ADRESH	set	30
   259  000C                     _PIR1bits	set	12
   260  001F                     _ADCON0bits	set	31
   261  0012                     _T2CON	set	18
   262  001F                     _ADCON0	set	31
   263  000B                     _INTCON	set	11
   264  0008                     _PORTD	set	8
   265  004A                     _RE2	set	74
   266  0049                     _RE1	set	73
   267  0047                     _RD7	set	71
   268  0046                     _RD6	set	70
   269  0045                     _RD5	set	69
   270  0044                     _RD4	set	68
   271  0043                     _RD3	set	67
   272  0042                     _RD2	set	66
   273  0041                     _RD1	set	65
   274  0040                     _RD0	set	64
   275  0092                     _PR2	set	146
   276  009F                     _ADCON1	set	159
   277  008C                     _PIE1	set	140
   278  0089                     _TRISE	set	137
   279  0088                     _TRISD	set	136
   280  0087                     _TRISC	set	135
   281  0085                     _TRISA	set	133
   282  0189                     _ANSELH	set	393
   283  0188                     _ANSEL	set	392
   284  021A                     STR_5:
   285  021A  3477               	retlw	119	;'w'
   286  021B  3477               	retlw	119	;'w'
   287  021C  3477               	retlw	119	;'w'
   288  021D  342E               	retlw	46	;'.'
   289  021E  3465               	retlw	101	;'e'
   290  021F  346C               	retlw	108	;'l'
   291  0220  3465               	retlw	101	;'e'
   292  0221  3463               	retlw	99	;'c'
   293  0222  3474               	retlw	116	;'t'
   294  0223  3472               	retlw	114	;'r'
   295  0224  346F               	retlw	111	;'o'
   296  0225  3453               	retlw	83	;'S'
   297  0226  346F               	retlw	111	;'o'
   298  0227  346D               	retlw	109	;'m'
   299  0228  3465               	retlw	101	;'e'
   300  0229  342E               	retlw	46	;'.'
   301  022A  3463               	retlw	99	;'c'
   302  022B  346F               	retlw	111	;'o'
   303  022C  346D               	retlw	109	;'m'
   304  022D  3400               	retlw	0
   305  022E                     STR_1:
   306  022E  344C               	retlw	76	;'L'
   307  022F  3443               	retlw	67	;'C'
   308  0230  3444               	retlw	68	;'D'
   309  0231  3420               	retlw	32	;' '
   310  0232  344C               	retlw	76	;'L'
   311  0233  3469               	retlw	105	;'i'
   312  0234  3462               	retlw	98	;'b'
   313  0235  3472               	retlw	114	;'r'
   314  0236  3461               	retlw	97	;'a'
   315  0237  3472               	retlw	114	;'r'
   316  0238  3479               	retlw	121	;'y'
   317  0239  3420               	retlw	32	;' '
   318  023A  3466               	retlw	102	;'f'
   319  023B  346F               	retlw	111	;'o'
   320  023C  3472               	retlw	114	;'r'
   321  023D  3400               	retlw	0
   322  023E                     STR_6:
   323  023E  3456               	retlw	86	;'V'
   324  023F  3431               	retlw	49	;'1'
   325  0240  3420               	retlw	32	;' '
   326  0241  3420               	retlw	32	;' '
   327  0242  3456               	retlw	86	;'V'
   328  0243  3432               	retlw	50	;'2'
   329  0244  3420               	retlw	32	;' '
   330  0245  3420               	retlw	32	;' '
   331  0246  3443               	retlw	67	;'C'
   332  0247  344F               	retlw	79	;'O'
   333  0248  344E               	retlw	78	;'N'
   334  0249  3454               	retlw	84	;'T'
   335  024A  3400               	retlw	0
   336  024B                     STR_3:
   337  024B  3444               	retlw	68	;'D'
   338  024C  3465               	retlw	101	;'e'
   339  024D  3476               	retlw	118	;'v'
   340  024E  3465               	retlw	101	;'e'
   341  024F  346C               	retlw	108	;'l'
   342  0250  346F               	retlw	111	;'o'
   343  0251  3470               	retlw	112	;'p'
   344  0252  3465               	retlw	101	;'e'
   345  0253  3464               	retlw	100	;'d'
   346  0254  3420               	retlw	32	;' '
   347  0255  3442               	retlw	66	;'B'
   348  0256  3479               	retlw	121	;'y'
   349  0257  3400               	retlw	0
   350  0258                     STR_4:
   351  0258  3465               	retlw	101	;'e'
   352  0259  346C               	retlw	108	;'l'
   353  025A  3465               	retlw	101	;'e'
   354  025B  3463               	retlw	99	;'c'
   355  025C  3474               	retlw	116	;'t'
   356  025D  3472               	retlw	114	;'r'
   357  025E  346F               	retlw	111	;'o'
   358  025F  3453               	retlw	83	;'S'
   359  0260  346F               	retlw	111	;'o'
   360  0261  346D               	retlw	109	;'m'
   361  0262  3465               	retlw	101	;'e'
   362  0263  3400               	retlw	0
   363  0264                     STR_7:
   364  0264  3420               	retlw	32	;' '
   365  0265  3425               	retlw	37	;'%'
   366  0266  3433               	retlw	51	;'3'
   367  0267  3469               	retlw	105	;'i'
   368  0268  3420               	retlw	32	;' '
   369  0269  3420               	retlw	32	;' '
   370  026A  3420               	retlw	32	;' '
   371  026B  3425               	retlw	37	;'%'
   372  026C  3433               	retlw	51	;'3'
   373  026D  3469               	retlw	105	;'i'
   374  026E  3400               	retlw	0
   375  026F                     STR_2:
   376  026F  344D               	retlw	77	;'M'
   377  0270  3450               	retlw	80	;'P'
   378  0271  344C               	retlw	76	;'L'
   379  0272  3441               	retlw	65	;'A'
   380  0273  3442               	retlw	66	;'B'
   381  0274  3420               	retlw	32	;' '
   382  0275  3458               	retlw	88	;'X'
   383  0276  3443               	retlw	67	;'C'
   384  0277  3438               	retlw	56	;'8'
   385  0278  3400               	retlw	0
   386                           
   387                           	psect	cinit
   388  000F                     start_initialization:	
   389                           ; #config settings
   390                           
   391  000F                     __initialization:
   392                           
   393                           ; Clear objects allocated to COMMON
   394  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  0010  1283               	bcf	3,5	;RP0=0, select bank0
   398  0011  1303               	bcf	3,6	;RP1=0, select bank0
   399  0012  01CD               	clrf	__pbssBANK0& (0+127)
   400  0013  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   401  0014                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0014                     __end_of__initialization:
   405  0014  0183               	clrf	3
   406  0015  120A  118A  2A79   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  007A                     __pbssCOMMON:
   410  007A                     _lmao:
   411  007A                     	ds	1
   412                           
   413                           	psect	bssBANK0
   414  004D                     __pbssBANK0:
   415  004D                     _t2:
   416  004D                     	ds	1
   417  004E                     _t1:
   418  004E                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_isdigit:
   423  0070                     ?_Lcd_Port:	
   424                           ; 1 bit 
   425                           
   426  0070                     ?_Lcd_Cmd:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Init:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Lcd_Write_Char:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_setup:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_ISR:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447                           
   448                           ; 1 bytes @ 0x0
   449  0070                     	ds	3
   450  0073                     ??_isdigit:
   451  0073                     ??_Lcd_Port:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     ??_setup:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ?___wmul:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ?___lwdiv:	
   461                           ; 2 bytes @ 0x3
   462                           
   463  0073                     Lcd_Port@a:	
   464                           ; 2 bytes @ 0x3
   465                           
   466  0073                     _isdigit$667:	
   467                           ; 1 bytes @ 0x3
   468                           
   469  0073                     ___wmul@multiplier:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0073                     ___lwdiv@divisor:	
   473                           ; 2 bytes @ 0x3
   474                           
   475                           
   476                           ; 2 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     ??_Lcd_Cmd:
   479  0074                     ??_Lcd_Write_Char:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     isdigit@c:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     ___wmul@multiplicand:
   489  0075                     ___lwdiv@dividend:	
   490                           ; 2 bytes @ 0x5
   491                           
   492                           
   493                           ; 2 bytes @ 0x5
   494  0075                     	ds	1
   495  0076                     Lcd_Cmd@a:
   496  0076                     Lcd_Write_Char@a:	
   497                           ; 1 bytes @ 0x6
   498                           
   499                           
   500                           ; 1 bytes @ 0x6
   501  0076                     	ds	1
   502  0077                     ?_Lcd_Set_Cursor:
   503  0077                     ??_Lcd_Init:	
   504                           ; 1 bytes @ 0x7
   505                           
   506  0077                     ?_Lcd_Write_String:	
   507                           ; 1 bytes @ 0x7
   508                           
   509  0077                     ??___wmul:	
   510                           ; 1 bytes @ 0x7
   511                           
   512  0077                     ??___lwdiv:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0077                     Lcd_Set_Cursor@b:	
   516                           ; 1 bytes @ 0x7
   517                           
   518  0077                     Lcd_Write_String@a:	
   519                           ; 1 bytes @ 0x7
   520                           
   521  0077                     ___wmul@product:	
   522                           ; 2 bytes @ 0x7
   523                           
   524                           
   525                           ; 2 bytes @ 0x7
   526  0077                     	ds	1
   527  0078                     ??_Lcd_Set_Cursor:
   528  0078                     ??___lwmod:	
   529                           ; 1 bytes @ 0x8
   530                           
   531                           
   532                           ; 1 bytes @ 0x8
   533  0078                     	ds	1
   534  0079                     ___lwmod@counter:
   535                           
   536                           ; 1 bytes @ 0x9
   537  0079                     	ds	1
   538                           
   539                           	psect	cstackBANK0
   540  0020                     __pcstackBANK0:
   541  0020                     ??_Lcd_Write_String:
   542  0020                     Lcd_Set_Cursor@a:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0020                     ___lwdiv@counter:	
   546                           ; 1 bytes @ 0x0
   547                           
   548                           
   549                           ; 1 bytes @ 0x0
   550  0020                     	ds	1
   551  0021                     Lcd_Set_Cursor@temp:
   552  0021                     ___lwdiv@quotient:	
   553                           ; 1 bytes @ 0x1
   554                           
   555                           
   556                           ; 2 bytes @ 0x1
   557  0021                     	ds	2
   558  0023                     ?___lwmod:
   559  0023                     Lcd_Write_String@i:	
   560                           ; 2 bytes @ 0x3
   561                           
   562  0023                     ___lwmod@divisor:	
   563                           ; 2 bytes @ 0x3
   564                           
   565                           
   566                           ; 2 bytes @ 0x3
   567  0023                     	ds	2
   568  0025                     ___lwmod@dividend:
   569                           
   570                           ; 2 bytes @ 0x5
   571  0025                     	ds	2
   572  0027                     ?_sprintf:
   573  0027                     sprintf@f:	
   574                           ; 2 bytes @ 0x7
   575                           
   576                           
   577                           ; 1 bytes @ 0x7
   578  0027                     	ds	5
   579  002C                     ??_sprintf:
   580                           
   581                           ; 1 bytes @ 0xC
   582  002C                     	ds	3
   583  002F                     sprintf@ap:
   584                           
   585                           ; 1 bytes @ 0xF
   586  002F                     	ds	1
   587  0030                     sprintf@prec:
   588                           
   589                           ; 1 bytes @ 0x10
   590  0030                     	ds	1
   591  0031                     sprintf@flag:
   592                           
   593                           ; 1 bytes @ 0x11
   594  0031                     	ds	1
   595  0032                     sprintf@val:
   596                           
   597                           ; 2 bytes @ 0x12
   598  0032                     	ds	2
   599  0034                     sprintf@sp:
   600                           
   601                           ; 1 bytes @ 0x14
   602  0034                     	ds	1
   603  0035                     sprintf@width:
   604                           
   605                           ; 2 bytes @ 0x15
   606  0035                     	ds	2
   607  0037                     sprintf@c:
   608                           
   609                           ; 1 bytes @ 0x17
   610  0037                     	ds	1
   611  0038                     ??_main:
   612                           
   613                           ; 1 bytes @ 0x18
   614  0038                     	ds	5
   615  003D                     main@s:
   616                           
   617                           ; 16 bytes @ 0x1D
   618  003D                     	ds	16
   619                           
   620                           	psect	maintext
   621  0279                     __pmaintext:	
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 72 in file "newmain.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  s              16   29[BANK0 ] unsigned char [16]
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : B00/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0      16       0       0       0
   643 ;;      Temps:          0       5       0       0       0
   644 ;;      Totals:         0      21       0       0       0
   645 ;;Total ram usage:       21 bytes
   646 ;; Hardware stack levels required when called:    4
   647 ;; This function calls:
   648 ;;		_Lcd_Init
   649 ;;		_Lcd_Set_Cursor
   650 ;;		_Lcd_Write_String
   651 ;;		_setup
   652 ;;		_sprintf
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _main
   660  0279                     _main:
   661  0279                     l1811:	
   662                           ;incstack = 0
   663                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   664                           
   665                           
   666                           ;newmain.c: 73:     setup();
   667  0279  120A  118A  244F  120A  118A  	fcall	_setup
   668                           
   669                           ;newmain.c: 74:     Lcd_Init();
   670  027E  120A  118A  2361  120A  118A  	fcall	_Lcd_Init
   671  0283                     l128:	
   672                           ;newmain.c: 75:     char s[16];;newmain.c: 76:     while(1){
   673                           
   674                           
   675                           ;newmain.c: 77:         Lcd_Set_Cursor(1,1);
   676  0283  01F7               	clrf	Lcd_Set_Cursor@b
   677  0284  0AF7               	incf	Lcd_Set_Cursor@b,f
   678  0285  3001               	movlw	1
   679  0286  120A  118A  2476  120A  118A  	fcall	_Lcd_Set_Cursor
   680  028B                     l1813:
   681                           
   682                           ;newmain.c: 78:         Lcd_Write_String("V1  V2  CONT");
   683  028B  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   684  028C  00F7               	movwf	Lcd_Write_String@a
   685  028D  3080               	movlw	128
   686  028E  00F8               	movwf	Lcd_Write_String@a+1
   687  028F  120A  118A  231B  120A  118A  	fcall	_Lcd_Write_String
   688  0294                     l1815:
   689                           
   690                           ;newmain.c: 79:         Lcd_Set_Cursor(2,1);
   691  0294  01F7               	clrf	Lcd_Set_Cursor@b
   692  0295  0AF7               	incf	Lcd_Set_Cursor@b,f
   693  0296  3002               	movlw	2
   694  0297  120A  118A  2476  120A  118A  	fcall	_Lcd_Set_Cursor
   695                           
   696                           ;newmain.c: 80:         sprintf(s," %3i   %3i",t1, t2);
   697  029C  3055               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   698  029D  1283               	bcf	3,5	;RP0=0, select bank0
   699  029E  1303               	bcf	3,6	;RP1=0, select bank0
   700  029F  00B8               	movwf	??_main
   701  02A0  0838               	movf	??_main,w
   702  02A1  00A7               	movwf	sprintf@f
   703  02A2  084E               	movf	_t1,w
   704  02A3  00B9               	movwf	??_main+1
   705  02A4  01BA               	clrf	??_main+2
   706  02A5  0839               	movf	??_main+1,w
   707  02A6  00A8               	movwf	?_sprintf+1
   708  02A7  083A               	movf	??_main+2,w
   709  02A8  00A9               	movwf	?_sprintf+2
   710  02A9  084D               	movf	_t2,w
   711  02AA  00BB               	movwf	??_main+3
   712  02AB  01BC               	clrf	??_main+4
   713  02AC  083B               	movf	??_main+3,w
   714  02AD  00AA               	movwf	?_sprintf+3
   715  02AE  083C               	movf	??_main+4,w
   716  02AF  00AB               	movwf	?_sprintf+4
   717  02B0  303D               	movlw	(low (main@s| 0))& (0+255)
   718  02B1  120A  118A  2018  120A  118A  	fcall	_sprintf
   719                           
   720                           ;newmain.c: 81:         Lcd_Write_String(s);
   721  02B6  303D               	movlw	(low (main@s| 0))& (0+255)
   722  02B7  00F7               	movwf	Lcd_Write_String@a
   723  02B8  3000               	movlw	0
   724  02B9  00F8               	movwf	Lcd_Write_String@a+1
   725  02BA  120A  118A  231B  120A  118A  	fcall	_Lcd_Write_String
   726  02BF                     l1817:
   727                           
   728                           ;newmain.c: 82:         _delay((unsigned long)((10)*(8000000/4000.0)));
   729  02BF  301A               	movlw	26
   730  02C0  1283               	bcf	3,5	;RP0=0, select bank0
   731  02C1  1303               	bcf	3,6	;RP1=0, select bank0
   732  02C2  00B9               	movwf	??_main+1
   733  02C3  30F7               	movlw	247
   734  02C4  00B8               	movwf	??_main
   735  02C5                     u1507:
   736  02C5  0BB8               	decfsz	??_main,f
   737  02C6  2AC5               	goto	u1507
   738  02C7  0BB9               	decfsz	??_main+1,f
   739  02C8  2AC5               	goto	u1507
   740  02C9  2ACA               	nop2
   741  02CA                     l1819:
   742                           
   743                           ;newmain.c: 83:         if(ADCON0bits.GO==0){
   744  02CA  1283               	bcf	3,5	;RP0=0, select bank0
   745  02CB  1303               	bcf	3,6	;RP1=0, select bank0
   746  02CC  189F               	btfsc	31,1	;volatile
   747  02CD  2ACF               	goto	u1491
   748  02CE  2AD0               	goto	u1490
   749  02CF                     u1491:
   750  02CF  2A83               	goto	l128
   751  02D0                     u1490:
   752  02D0                     l1821:
   753                           
   754                           ;newmain.c: 84:             ADCON0bits.GO=1;
   755  02D0  149F               	bsf	31,1	;volatile
   756  02D1  2A83               	goto	l128
   757  02D2  120A  118A  280C   	ljmp	start
   758  02D5                     __end_of_main:
   759                           
   760                           	psect	text1
   761  0018                     __ptext1:	
   762 ;; *************** function _sprintf *****************
   763 ;; Defined at:
   764 ;;		line 505 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  sp              1    wreg     PTR unsigned char 
   767 ;;		 -> main@s(16), 
   768 ;;  f               1    7[BANK0 ] PTR const unsigned char 
   769 ;;		 -> STR_7(11), 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  sp              1   20[BANK0 ] PTR unsigned char 
   772 ;;		 -> main@s(16), 
   773 ;;  tmpval          4    0        struct .
   774 ;;  width           2   21[BANK0 ] int 
   775 ;;  val             2   18[BANK0 ] unsigned int 
   776 ;;  cp              2    0        PTR const unsigned char 
   777 ;;  len             2    0        unsigned int 
   778 ;;  c               1   23[BANK0 ] unsigned char 
   779 ;;  flag            1   17[BANK0 ] unsigned char 
   780 ;;  prec            1   16[BANK0 ] char 
   781 ;;  ap              1   15[BANK0 ] PTR void [1]
   782 ;;		 -> ?_sprintf(2), 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  2    7[BANK0 ] int 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       5       0       0       0
   793 ;;      Locals:         0       9       0       0       0
   794 ;;      Temps:          0       3       0       0       0
   795 ;;      Totals:         0      17       0       0       0
   796 ;;Total ram usage:       17 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    2
   799 ;; This function calls:
   800 ;;		___lwdiv
   801 ;;		___lwmod
   802 ;;		___wmul
   803 ;;		_isdigit
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _sprintf
   811  0018                     _sprintf:
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   815                           ;sprintf@sp stored from wreg
   816  0018  1283               	bcf	3,5	;RP0=0, select bank0
   817  0019  1303               	bcf	3,6	;RP1=0, select bank0
   818  001A  00B4               	movwf	sprintf@sp
   819  001B                     l1661:
   820                           
   821                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
   822  001B  3028               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   823  001C  00AC               	movwf	??_sprintf
   824  001D  082C               	movf	??_sprintf,w
   825  001E  00AF               	movwf	sprintf@ap
   826                           
   827                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   828  001F  2989               	goto	l1743
   829  0020                     l1663:
   830                           
   831                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   832  0020  3025               	movlw	37
   833  0021  0637               	xorwf	sprintf@c,w
   834  0022  1903               	btfsc	3,2
   835  0023  2825               	goto	u1331
   836  0024  2826               	goto	u1330
   837  0025                     u1331:
   838  0025  2832               	goto	l1669
   839  0026                     u1330:
   840  0026                     l1665:
   841                           
   842                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;D:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   843  0026  0837               	movf	sprintf@c,w
   844  0027  00AC               	movwf	??_sprintf
   845  0028  0834               	movf	sprintf@sp,w
   846  0029  0084               	movwf	4
   847  002A  082C               	movf	??_sprintf,w
   848  002B  1383               	bcf	3,7	;select IRP bank0
   849  002C  0080               	movwf	0
   850  002D                     l1667:
   851  002D  3001               	movlw	1
   852  002E  00AC               	movwf	??_sprintf
   853  002F  082C               	movf	??_sprintf,w
   854  0030  07B4               	addwf	sprintf@sp,f
   855                           
   856                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   857  0031  2989               	goto	l1743
   858  0032                     l1669:
   859                           
   860                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
   861  0032  01B5               	clrf	sprintf@width
   862  0033  01B6               	clrf	sprintf@width+1
   863                           
   864                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   865  0034  01B1               	clrf	sprintf@flag
   866  0035                     l1671:
   867                           
   868                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
   869  0035  0827               	movf	sprintf@f,w
   870  0036  0084               	movwf	4
   871  0037  120A  118A  220A  120A  118A  	fcall	stringdir
   872  003C  120A  118A  24F5  120A  118A  	fcall	_isdigit
   873  0041  1C03               	btfss	3,0
   874  0042  2844               	goto	u1341
   875  0043  2845               	goto	u1340
   876  0044                     u1341:
   877  0044  2885               	goto	l1685
   878  0045                     u1340:
   879  0045                     l1673:
   880                           
   881                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
   882  0045  1283               	bcf	3,5	;RP0=0, select bank0
   883  0046  1303               	bcf	3,6	;RP1=0, select bank0
   884  0047  01B5               	clrf	sprintf@width
   885  0048  01B6               	clrf	sprintf@width+1
   886  0049                     l1675:
   887                           
   888                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
   889  0049  300A               	movlw	10
   890  004A  00F3               	movwf	___wmul@multiplier
   891  004B  3000               	movlw	0
   892  004C  00F4               	movwf	___wmul@multiplier+1
   893  004D  1283               	bcf	3,5	;RP0=0, select bank0
   894  004E  1303               	bcf	3,6	;RP1=0, select bank0
   895  004F  0836               	movf	sprintf@width+1,w
   896  0050  00F6               	movwf	___wmul@multiplicand+1
   897  0051  0835               	movf	sprintf@width,w
   898  0052  00F5               	movwf	___wmul@multiplicand
   899  0053  120A  118A  249C  120A  118A  	fcall	___wmul
   900  0058  0874               	movf	?___wmul+1,w
   901  0059  1283               	bcf	3,5	;RP0=0, select bank0
   902  005A  1303               	bcf	3,6	;RP1=0, select bank0
   903  005B  00B6               	movwf	sprintf@width+1
   904  005C  0873               	movf	?___wmul,w
   905  005D  00B5               	movwf	sprintf@width
   906  005E                     l1677:
   907                           
   908                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
   909  005E  0827               	movf	sprintf@f,w
   910  005F  0084               	movwf	4
   911  0060  120A  118A  220A  120A  118A  	fcall	stringdir
   912  0065  3ED0               	addlw	208
   913  0066  00AC               	movwf	??_sprintf
   914  0067  30FF               	movlw	255
   915  0068  1803               	skipnc
   916  0069  3000               	movlw	0
   917  006A  00AD               	movwf	??_sprintf+1
   918  006B  082C               	movf	??_sprintf,w
   919  006C  07B5               	addwf	sprintf@width,f
   920  006D  1803               	skipnc
   921  006E  0AB6               	incf	sprintf@width+1,f
   922  006F  082D               	movf	??_sprintf+1,w
   923  0070  07B6               	addwf	sprintf@width+1,f
   924  0071                     l1679:
   925  0071  3001               	movlw	1
   926  0072  00AC               	movwf	??_sprintf
   927  0073  082C               	movf	??_sprintf,w
   928  0074  07A7               	addwf	sprintf@f,f
   929  0075                     l1681:
   930                           
   931                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
   932  0075  0827               	movf	sprintf@f,w
   933  0076  0084               	movwf	4
   934  0077  120A  118A  220A  120A  118A  	fcall	stringdir
   935  007C  120A  118A  24F5  120A  118A  	fcall	_isdigit
   936  0081  1803               	btfsc	3,0
   937  0082  2884               	goto	u1351
   938  0083  2885               	goto	u1350
   939  0084                     u1351:
   940  0084  2849               	goto	l1675
   941  0085                     u1350:
   942  0085                     l1685:
   943  0085  3001               	movlw	1
   944  0086  1283               	bcf	3,5	;RP0=0, select bank0
   945  0087  1303               	bcf	3,6	;RP1=0, select bank0
   946  0088  07A7               	addwf	sprintf@f,f
   947  0089  30FF               	movlw	-1
   948  008A  0727               	addwf	sprintf@f,w
   949  008B  0084               	movwf	4
   950  008C  120A  118A  220A  120A  118A  	fcall	stringdir
   951  0091  00B7               	movwf	sprintf@c
   952  0092  00AC               	movwf	??_sprintf
   953  0093  01AD               	clrf	??_sprintf+1
   954                           
   955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   956                           ; Switch size 1, requested type "simple"
   957                           ; Number of cases is 1, Range of values is 0 to 0
   958                           ; switch strategies available:
   959                           ; Name         Instructions Cycles
   960                           ; simple_byte            4     3 (average)
   961                           ; direct_byte           11     8 (fixed)
   962                           ; jumptable            260     6 (fixed)
   963                           ;	Chosen strategy is simple_byte
   964  0094  082D               	movf	??_sprintf+1,w
   965  0095  3A00               	xorlw	0	; case 0
   966  0096  1903               	skipnz
   967  0097  2899               	goto	l1843
   968  0098  2989               	goto	l1743
   969  0099                     l1843:
   970                           
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 3, Range of values is 0 to 105
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte           10     6 (average)
   976                           ; jumptable            260     6 (fixed)
   977                           ;	Chosen strategy is simple_byte
   978  0099  082C               	movf	??_sprintf,w
   979  009A  3A00               	xorlw	0	; case 0
   980  009B  1903               	skipnz
   981  009C  299B               	goto	l1745
   982  009D  3A64               	xorlw	100	; case 100
   983  009E  1903               	skipnz
   984  009F  28A4               	goto	l1687
   985  00A0  3A0D               	xorlw	13	; case 105
   986  00A1  1903               	skipnz
   987  00A2  28A4               	goto	l1687
   988  00A3  2989               	goto	l1743
   989  00A4                     l1687:
   990                           
   991                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   992  00A4  082F               	movf	sprintf@ap,w
   993  00A5  0084               	movwf	4
   994  00A6  1383               	bcf	3,7	;select IRP bank0
   995  00A7  0800               	movf	0,w
   996  00A8  00B2               	movwf	sprintf@val
   997  00A9  0A84               	incf	4,f
   998  00AA  0800               	movf	0,w
   999  00AB  00B3               	movwf	sprintf@val+1
  1000  00AC                     l1689:
  1001  00AC  3002               	movlw	2
  1002  00AD  00AC               	movwf	??_sprintf
  1003  00AE  082C               	movf	??_sprintf,w
  1004  00AF  07AF               	addwf	sprintf@ap,f
  1005  00B0                     l1691:
  1006                           
  1007                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1008  00B0  1FB3               	btfss	sprintf@val+1,7
  1009  00B1  28B3               	goto	u1361
  1010  00B2  28B4               	goto	u1360
  1011  00B3                     u1361:
  1012  00B3  28BD               	goto	l1697
  1013  00B4                     u1360:
  1014  00B4                     l1693:
  1015                           
  1016                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1017  00B4  3003               	movlw	3
  1018  00B5  00AC               	movwf	??_sprintf
  1019  00B6  082C               	movf	??_sprintf,w
  1020  00B7  04B1               	iorwf	sprintf@flag,f
  1021  00B8                     l1695:
  1022                           
  1023                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1024  00B8  09B2               	comf	sprintf@val,f
  1025  00B9  09B3               	comf	sprintf@val+1,f
  1026  00BA  0AB2               	incf	sprintf@val,f
  1027  00BB  1903               	skipnz
  1028  00BC  0AB3               	incf	sprintf@val+1,f
  1029  00BD                     l1697:
  1030                           
  1031                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1032  00BD  01B7               	clrf	sprintf@c
  1033  00BE  0AB7               	incf	sprintf@c,f
  1034  00BF                     l1703:
  1035                           
  1036                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1037  00BF  0837               	movf	sprintf@c,w
  1038  00C0  00AC               	movwf	??_sprintf
  1039  00C1  072C               	addwf	??_sprintf,w
  1040  00C2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1041  00C3  0084               	movwf	4
  1042  00C4  120A  118A  220A  120A  118A  	fcall	stringdir
  1043  00C9  00AD               	movwf	??_sprintf+1
  1044  00CA  120A  118A  220A  120A  118A  	fcall	stringdir
  1045  00CF  00AE               	movwf	??_sprintf+2
  1046  00D0  082E               	movf	??_sprintf+2,w
  1047  00D1  0233               	subwf	sprintf@val+1,w
  1048  00D2  1D03               	skipz
  1049  00D3  28D6               	goto	u1375
  1050  00D4  082D               	movf	??_sprintf+1,w
  1051  00D5  0232               	subwf	sprintf@val,w
  1052  00D6                     u1375:
  1053  00D6  1803               	skipnc
  1054  00D7  28D9               	goto	u1371
  1055  00D8  28DA               	goto	u1370
  1056  00D9                     u1371:
  1057  00D9  28DB               	goto	l1707
  1058  00DA                     u1370:
  1059  00DA  28E5               	goto	l1709
  1060  00DB                     l1707:
  1061  00DB  3001               	movlw	1
  1062  00DC  00AC               	movwf	??_sprintf
  1063  00DD  082C               	movf	??_sprintf,w
  1064  00DE  07B7               	addwf	sprintf@c,f
  1065  00DF  3005               	movlw	5
  1066  00E0  0637               	xorwf	sprintf@c,w
  1067  00E1  1D03               	btfss	3,2
  1068  00E2  28E4               	goto	u1381
  1069  00E3  28E5               	goto	u1380
  1070  00E4                     u1381:
  1071  00E4  28BF               	goto	l1703
  1072  00E5                     u1380:
  1073  00E5                     l1709:
  1074                           
  1075                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1076  00E5  0835               	movf	sprintf@width,w
  1077  00E6  0436               	iorwf	sprintf@width+1,w
  1078  00E7  1903               	btfsc	3,2
  1079  00E8  28EA               	goto	u1391
  1080  00E9  28EB               	goto	u1390
  1081  00EA                     u1391:
  1082  00EA  28F7               	goto	l253
  1083  00EB                     u1390:
  1084  00EB                     l1711:
  1085  00EB  0831               	movf	sprintf@flag,w
  1086  00EC  3903               	andlw	3
  1087  00ED  1903               	btfsc	3,2
  1088  00EE  28F0               	goto	u1401
  1089  00EF  28F1               	goto	u1400
  1090  00F0                     u1401:
  1091  00F0  28F7               	goto	l253
  1092  00F1                     u1400:
  1093  00F1                     l1713:
  1094                           
  1095                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1096  00F1  30FF               	movlw	255
  1097  00F2  07B5               	addwf	sprintf@width,f
  1098  00F3  1803               	skipnc
  1099  00F4  0AB6               	incf	sprintf@width+1,f
  1100  00F5  30FF               	movlw	255
  1101  00F6  07B6               	addwf	sprintf@width+1,f
  1102  00F7                     l253:
  1103                           
  1104                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1105  00F7  0836               	movf	sprintf@width+1,w
  1106  00F8  3A80               	xorlw	128
  1107  00F9  3C80               	sublw	128
  1108  00FA  1D03               	skipz
  1109  00FB  28FE               	goto	u1415
  1110  00FC  0835               	movf	sprintf@width,w
  1111  00FD  0237               	subwf	sprintf@c,w
  1112  00FE                     u1415:
  1113  00FE  1803               	skipnc
  1114  00FF  2901               	goto	u1411
  1115  0100  2902               	goto	u1410
  1116  0101                     u1411:
  1117  0101  290E               	goto	l1717
  1118  0102                     u1410:
  1119  0102                     l1715:
  1120                           
  1121                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1122  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0104  0837               	movf	sprintf@c,w
  1125  0105  00AC               	movwf	??_sprintf
  1126  0106  01AD               	clrf	??_sprintf+1
  1127  0107  082C               	movf	??_sprintf,w
  1128  0108  02B5               	subwf	sprintf@width,f
  1129  0109  082D               	movf	??_sprintf+1,w
  1130  010A  1C03               	skipc
  1131  010B  03B6               	decf	sprintf@width+1,f
  1132  010C  02B6               	subwf	sprintf@width+1,f
  1133  010D  2912               	goto	l1719
  1134  010E                     l1717:
  1135                           
  1136                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1137  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1138  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0110  01B5               	clrf	sprintf@width
  1140  0111  01B6               	clrf	sprintf@width+1
  1141  0112                     l1719:
  1142                           
  1143                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1144  0112  0835               	movf	sprintf@width,w
  1145  0113  0436               	iorwf	sprintf@width+1,w
  1146  0114  1903               	btfsc	3,2
  1147  0115  2917               	goto	u1421
  1148  0116  2918               	goto	u1420
  1149  0117                     u1421:
  1150  0117  292F               	goto	l1727
  1151  0118                     u1420:
  1152  0118                     l1721:
  1153                           
  1154                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1155  0118  3020               	movlw	32
  1156  0119  00AC               	movwf	??_sprintf
  1157  011A  0834               	movf	sprintf@sp,w
  1158  011B  0084               	movwf	4
  1159  011C  082C               	movf	??_sprintf,w
  1160  011D  1383               	bcf	3,7	;select IRP bank0
  1161  011E  0080               	movwf	0
  1162  011F                     l1723:
  1163  011F  3001               	movlw	1
  1164  0120  00AC               	movwf	??_sprintf
  1165  0121  082C               	movf	??_sprintf,w
  1166  0122  07B4               	addwf	sprintf@sp,f
  1167  0123                     l1725:
  1168  0123  30FF               	movlw	255
  1169  0124  07B5               	addwf	sprintf@width,f
  1170  0125  1803               	skipnc
  1171  0126  0AB6               	incf	sprintf@width+1,f
  1172  0127  30FF               	movlw	255
  1173  0128  07B6               	addwf	sprintf@width+1,f
  1174  0129  0835               	movf	sprintf@width,w
  1175  012A  0436               	iorwf	sprintf@width+1,w
  1176  012B  1D03               	btfss	3,2
  1177  012C  292E               	goto	u1431
  1178  012D  292F               	goto	u1430
  1179  012E                     u1431:
  1180  012E  2918               	goto	l1721
  1181  012F                     u1430:
  1182  012F                     l1727:
  1183                           
  1184                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1185  012F  0831               	movf	sprintf@flag,w
  1186  0130  3903               	andlw	3
  1187  0131  1903               	btfsc	3,2
  1188  0132  2934               	goto	u1441
  1189  0133  2935               	goto	u1440
  1190  0134                     u1441:
  1191  0134  2940               	goto	l1733
  1192  0135                     u1440:
  1193  0135                     l1729:
  1194                           
  1195                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1196  0135  302D               	movlw	45
  1197  0136  00AC               	movwf	??_sprintf
  1198  0137  0834               	movf	sprintf@sp,w
  1199  0138  0084               	movwf	4
  1200  0139  082C               	movf	??_sprintf,w
  1201  013A  1383               	bcf	3,7	;select IRP bank0
  1202  013B  0080               	movwf	0
  1203  013C                     l1731:
  1204  013C  3001               	movlw	1
  1205  013D  00AC               	movwf	??_sprintf
  1206  013E  082C               	movf	??_sprintf,w
  1207  013F  07B4               	addwf	sprintf@sp,f
  1208  0140                     l1733:
  1209                           
  1210                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };D:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1211  0140  0837               	movf	sprintf@c,w
  1212  0141  00AC               	movwf	??_sprintf
  1213  0142  082C               	movf	??_sprintf,w
  1214  0143  00B0               	movwf	sprintf@prec
  1215                           
  1216                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1217  0144  2980               	goto	l1741
  1218  0145                     l1735:
  1219                           
  1220                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1221  0145  300A               	movlw	10
  1222  0146  00A3               	movwf	___lwmod@divisor
  1223  0147  3000               	movlw	0
  1224  0148  00A4               	movwf	___lwmod@divisor+1
  1225  0149  0830               	movf	sprintf@prec,w
  1226  014A  00AC               	movwf	??_sprintf
  1227  014B  072C               	addwf	??_sprintf,w
  1228  014C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1229  014D  0084               	movwf	4
  1230  014E  120A  118A  220A  120A  118A  	fcall	stringdir
  1231  0153  00F3               	movwf	___lwdiv@divisor
  1232  0154  120A  118A  220A  120A  118A  	fcall	stringdir
  1233  0159  00F4               	movwf	___lwdiv@divisor+1
  1234  015A  0833               	movf	sprintf@val+1,w
  1235  015B  00F6               	movwf	___lwdiv@dividend+1
  1236  015C  0832               	movf	sprintf@val,w
  1237  015D  00F5               	movwf	___lwdiv@dividend
  1238  015E  120A  118A  22D5  120A  118A  	fcall	___lwdiv
  1239  0163  0874               	movf	?___lwdiv+1,w
  1240  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0166  00A6               	movwf	___lwmod@dividend+1
  1243  0167  0873               	movf	?___lwdiv,w
  1244  0168  00A5               	movwf	___lwmod@dividend
  1245  0169  120A  118A  23E4  120A  118A  	fcall	___lwmod
  1246  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1247  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0170  0823               	movf	?___lwmod,w
  1249  0171  3E30               	addlw	48
  1250  0172  00AD               	movwf	??_sprintf+1
  1251  0173  082D               	movf	??_sprintf+1,w
  1252  0174  00B7               	movwf	sprintf@c
  1253  0175                     l1737:
  1254                           
  1255                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };D:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1256  0175  0837               	movf	sprintf@c,w
  1257  0176  00AC               	movwf	??_sprintf
  1258  0177  0834               	movf	sprintf@sp,w
  1259  0178  0084               	movwf	4
  1260  0179  082C               	movf	??_sprintf,w
  1261  017A  1383               	bcf	3,7	;select IRP bank0
  1262  017B  0080               	movwf	0
  1263  017C                     l1739:
  1264  017C  3001               	movlw	1
  1265  017D  00AC               	movwf	??_sprintf
  1266  017E  082C               	movf	??_sprintf,w
  1267  017F  07B4               	addwf	sprintf@sp,f
  1268  0180                     l1741:
  1269                           
  1270                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1271  0180  30FF               	movlw	255
  1272  0181  00AC               	movwf	??_sprintf
  1273  0182  082C               	movf	??_sprintf,w
  1274  0183  07B0               	addwf	sprintf@prec,f
  1275  0184  0A30               	incf	sprintf@prec,w
  1276  0185  1D03               	btfss	3,2
  1277  0186  2988               	goto	u1451
  1278  0187  2989               	goto	u1450
  1279  0188                     u1451:
  1280  0188  2945               	goto	l1735
  1281  0189                     u1450:
  1282  0189                     l1743:
  1283                           
  1284                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1285  0189  3001               	movlw	1
  1286  018A  07A7               	addwf	sprintf@f,f
  1287  018B  30FF               	movlw	-1
  1288  018C  0727               	addwf	sprintf@f,w
  1289  018D  0084               	movwf	4
  1290  018E  120A  118A  220A  120A  118A  	fcall	stringdir
  1291  0193  00AC               	movwf	??_sprintf
  1292  0194  082C               	movf	??_sprintf,w
  1293  0195  00B7               	movwf	sprintf@c
  1294  0196  0837               	movf	sprintf@c,w
  1295  0197  1D03               	btfss	3,2
  1296  0198  299A               	goto	u1461
  1297  0199  299B               	goto	u1460
  1298  019A                     u1461:
  1299  019A  2820               	goto	l1663
  1300  019B                     u1460:
  1301  019B                     l1745:
  1302                           
  1303                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1304  019B  0834               	movf	sprintf@sp,w
  1305  019C  0084               	movwf	4
  1306  019D  1383               	bcf	3,7	;select IRP bank0
  1307  019E  0180               	clrf	0
  1308  019F                     l264:
  1309  019F  0008               	return
  1310  01A0                     __end_of_sprintf:
  1311                           
  1312                           	psect	text2
  1313  04F5                     __ptext2:	
  1314 ;; *************** function _isdigit *****************
  1315 ;; Defined at:
  1316 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  c               1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  c               1    4[COMMON] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;		None               void
  1323 ;; Registers used:
  1324 ;;		wreg, status,2, status,0
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         2       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_sprintf
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _isdigit
  1346  04F5                     _isdigit:
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1350                           ;isdigit@c stored from wreg
  1351  04F5  00F4               	movwf	isdigit@c
  1352  04F6                     l1197:
  1353  04F6  01F3               	clrf	_isdigit$667
  1354  04F7                     l1199:
  1355  04F7  303A               	movlw	58
  1356  04F8  0274               	subwf	isdigit@c,w
  1357  04F9  1803               	skipnc
  1358  04FA  2CFC               	goto	u621
  1359  04FB  2CFD               	goto	u620
  1360  04FC                     u621:
  1361  04FC  2D05               	goto	l1205
  1362  04FD                     u620:
  1363  04FD                     l1201:
  1364  04FD  3030               	movlw	48
  1365  04FE  0274               	subwf	isdigit@c,w
  1366  04FF  1C03               	skipc
  1367  0500  2D02               	goto	u631
  1368  0501  2D03               	goto	u630
  1369  0502                     u631:
  1370  0502  2D05               	goto	l1205
  1371  0503                     u630:
  1372  0503                     l1203:
  1373  0503  01F3               	clrf	_isdigit$667
  1374  0504  0AF3               	incf	_isdigit$667,f
  1375  0505                     l1205:
  1376  0505  0C73               	rrf	_isdigit$667,w
  1377  0506                     l721:
  1378  0506  0008               	return
  1379  0507                     __end_of_isdigit:
  1380                           
  1381                           	psect	text3
  1382  049C                     __ptext3:	
  1383 ;; *************** function ___wmul *****************
  1384 ;; Defined at:
  1385 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  multiplier      2    3[COMMON] unsigned int 
  1388 ;;  multiplicand    2    5[COMMON] unsigned int 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  product         2    7[COMMON] unsigned int 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2    3[COMMON] unsigned int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         4       0       0       0       0
  1401 ;;      Locals:         2       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0
  1403 ;;      Totals:         6       0       0       0       0
  1404 ;;Total ram usage:        6 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_sprintf
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function ___wmul
  1416  049C                     ___wmul:
  1417  049C                     l1209:	
  1418                           ;incstack = 0
  1419                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1420                           
  1421  049C  01F7               	clrf	___wmul@product
  1422  049D  01F8               	clrf	___wmul@product+1
  1423  049E                     l1211:
  1424  049E  1C73               	btfss	___wmul@multiplier,0
  1425  049F  2CA1               	goto	u641
  1426  04A0  2CA2               	goto	u640
  1427  04A1                     u641:
  1428  04A1  2CA8               	goto	l268
  1429  04A2                     u640:
  1430  04A2                     l1213:
  1431  04A2  0875               	movf	___wmul@multiplicand,w
  1432  04A3  07F7               	addwf	___wmul@product,f
  1433  04A4  1803               	skipnc
  1434  04A5  0AF8               	incf	___wmul@product+1,f
  1435  04A6  0876               	movf	___wmul@multiplicand+1,w
  1436  04A7  07F8               	addwf	___wmul@product+1,f
  1437  04A8                     l268:
  1438  04A8  3001               	movlw	1
  1439  04A9                     u655:
  1440  04A9  1003               	clrc
  1441  04AA  0DF5               	rlf	___wmul@multiplicand,f
  1442  04AB  0DF6               	rlf	___wmul@multiplicand+1,f
  1443  04AC  3EFF               	addlw	-1
  1444  04AD  1D03               	skipz
  1445  04AE  2CA9               	goto	u655
  1446  04AF                     l1215:
  1447  04AF  3001               	movlw	1
  1448  04B0                     u665:
  1449  04B0  1003               	clrc
  1450  04B1  0CF4               	rrf	___wmul@multiplier+1,f
  1451  04B2  0CF3               	rrf	___wmul@multiplier,f
  1452  04B3  3EFF               	addlw	-1
  1453  04B4  1D03               	skipz
  1454  04B5  2CB0               	goto	u665
  1455  04B6                     l1217:
  1456  04B6  0873               	movf	___wmul@multiplier,w
  1457  04B7  0474               	iorwf	___wmul@multiplier+1,w
  1458  04B8  1D03               	btfss	3,2
  1459  04B9  2CBB               	goto	u671
  1460  04BA  2CBC               	goto	u670
  1461  04BB                     u671:
  1462  04BB  2C9E               	goto	l1211
  1463  04BC                     u670:
  1464  04BC                     l1219:
  1465  04BC  0878               	movf	___wmul@product+1,w
  1466  04BD  00F4               	movwf	?___wmul+1
  1467  04BE  0877               	movf	___wmul@product,w
  1468  04BF  00F3               	movwf	?___wmul
  1469  04C0                     l270:
  1470  04C0  0008               	return
  1471  04C1                     __end_of___wmul:
  1472                           
  1473                           	psect	text4
  1474  03E4                     __ptext4:	
  1475 ;; *************** function ___lwmod *****************
  1476 ;; Defined at:
  1477 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  divisor         2    3[BANK0 ] unsigned int 
  1480 ;;  dividend        2    5[BANK0 ] unsigned int 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  counter         1    9[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    3[BANK0 ] unsigned int 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       4       0       0       0
  1493 ;;      Locals:         1       0       0       0       0
  1494 ;;      Temps:          1       0       0       0       0
  1495 ;;      Totals:         2       4       0       0       0
  1496 ;;Total ram usage:        6 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_sprintf
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function ___lwmod
  1508  03E4                     ___lwmod:
  1509  03E4                     l1603:	
  1510                           ;incstack = 0
  1511                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1512                           
  1513  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1514  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1515  03E6  0823               	movf	___lwmod@divisor,w
  1516  03E7  0424               	iorwf	___lwmod@divisor+1,w
  1517  03E8  1903               	btfsc	3,2
  1518  03E9  2BEB               	goto	u1221
  1519  03EA  2BEC               	goto	u1220
  1520  03EB                     u1221:
  1521  03EB  2C1B               	goto	l1621
  1522  03EC                     u1220:
  1523  03EC                     l1605:
  1524  03EC  01F9               	clrf	___lwmod@counter
  1525  03ED  0AF9               	incf	___lwmod@counter,f
  1526  03EE  2BFA               	goto	l1611
  1527  03EF                     l1607:
  1528  03EF  3001               	movlw	1
  1529  03F0                     u1235:
  1530  03F0  1003               	clrc
  1531  03F1  0DA3               	rlf	___lwmod@divisor,f
  1532  03F2  0DA4               	rlf	___lwmod@divisor+1,f
  1533  03F3  3EFF               	addlw	-1
  1534  03F4  1D03               	skipz
  1535  03F5  2BF0               	goto	u1235
  1536  03F6                     l1609:
  1537  03F6  3001               	movlw	1
  1538  03F7  00F8               	movwf	??___lwmod
  1539  03F8  0878               	movf	??___lwmod,w
  1540  03F9  07F9               	addwf	___lwmod@counter,f
  1541  03FA                     l1611:
  1542  03FA  1FA4               	btfss	___lwmod@divisor+1,7
  1543  03FB  2BFD               	goto	u1241
  1544  03FC  2BFE               	goto	u1240
  1545  03FD                     u1241:
  1546  03FD  2BEF               	goto	l1607
  1547  03FE                     u1240:
  1548  03FE                     l1613:
  1549  03FE  0824               	movf	___lwmod@divisor+1,w
  1550  03FF  0226               	subwf	___lwmod@dividend+1,w
  1551  0400  1D03               	skipz
  1552  0401  2C04               	goto	u1255
  1553  0402  0823               	movf	___lwmod@divisor,w
  1554  0403  0225               	subwf	___lwmod@dividend,w
  1555  0404                     u1255:
  1556  0404  1C03               	skipc
  1557  0405  2C07               	goto	u1251
  1558  0406  2C08               	goto	u1250
  1559  0407                     u1251:
  1560  0407  2C0E               	goto	l1617
  1561  0408                     u1250:
  1562  0408                     l1615:
  1563  0408  0823               	movf	___lwmod@divisor,w
  1564  0409  02A5               	subwf	___lwmod@dividend,f
  1565  040A  0824               	movf	___lwmod@divisor+1,w
  1566  040B  1C03               	skipc
  1567  040C  03A6               	decf	___lwmod@dividend+1,f
  1568  040D  02A6               	subwf	___lwmod@dividend+1,f
  1569  040E                     l1617:
  1570  040E  3001               	movlw	1
  1571  040F                     u1265:
  1572  040F  1003               	clrc
  1573  0410  0CA4               	rrf	___lwmod@divisor+1,f
  1574  0411  0CA3               	rrf	___lwmod@divisor,f
  1575  0412  3EFF               	addlw	-1
  1576  0413  1D03               	skipz
  1577  0414  2C0F               	goto	u1265
  1578  0415                     l1619:
  1579  0415  3001               	movlw	1
  1580  0416  02F9               	subwf	___lwmod@counter,f
  1581  0417  1D03               	btfss	3,2
  1582  0418  2C1A               	goto	u1271
  1583  0419  2C1B               	goto	u1270
  1584  041A                     u1271:
  1585  041A  2BFE               	goto	l1613
  1586  041B                     u1270:
  1587  041B                     l1621:
  1588  041B  0826               	movf	___lwmod@dividend+1,w
  1589  041C  00A4               	movwf	?___lwmod+1
  1590  041D  0825               	movf	___lwmod@dividend,w
  1591  041E  00A3               	movwf	?___lwmod
  1592  041F                     l550:
  1593  041F  0008               	return
  1594  0420                     __end_of___lwmod:
  1595                           
  1596                           	psect	text5
  1597  02D5                     __ptext5:	
  1598 ;; *************** function ___lwdiv *****************
  1599 ;; Defined at:
  1600 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  divisor         2    3[COMMON] unsigned int 
  1603 ;;  dividend        2    5[COMMON] unsigned int 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  quotient        2    1[BANK0 ] unsigned int 
  1606 ;;  counter         1    0[BANK0 ] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2    3[COMMON] unsigned int 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         4       0       0       0       0
  1617 ;;      Locals:         0       3       0       0       0
  1618 ;;      Temps:          1       0       0       0       0
  1619 ;;      Totals:         5       3       0       0       0
  1620 ;;Total ram usage:        8 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_sprintf
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function ___lwdiv
  1632  02D5                     ___lwdiv:
  1633  02D5                     l1577:	
  1634                           ;incstack = 0
  1635                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1636                           
  1637  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1638  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1639  02D7  01A1               	clrf	___lwdiv@quotient
  1640  02D8  01A2               	clrf	___lwdiv@quotient+1
  1641  02D9                     l1579:
  1642  02D9  0873               	movf	___lwdiv@divisor,w
  1643  02DA  0474               	iorwf	___lwdiv@divisor+1,w
  1644  02DB  1903               	btfsc	3,2
  1645  02DC  2ADE               	goto	u1151
  1646  02DD  2ADF               	goto	u1150
  1647  02DE                     u1151:
  1648  02DE  2B16               	goto	l1599
  1649  02DF                     u1150:
  1650  02DF                     l1581:
  1651  02DF  01A0               	clrf	___lwdiv@counter
  1652  02E0  0AA0               	incf	___lwdiv@counter,f
  1653  02E1  2AED               	goto	l1587
  1654  02E2                     l1583:
  1655  02E2  3001               	movlw	1
  1656  02E3                     u1165:
  1657  02E3  1003               	clrc
  1658  02E4  0DF3               	rlf	___lwdiv@divisor,f
  1659  02E5  0DF4               	rlf	___lwdiv@divisor+1,f
  1660  02E6  3EFF               	addlw	-1
  1661  02E7  1D03               	skipz
  1662  02E8  2AE3               	goto	u1165
  1663  02E9                     l1585:
  1664  02E9  3001               	movlw	1
  1665  02EA  00F7               	movwf	??___lwdiv
  1666  02EB  0877               	movf	??___lwdiv,w
  1667  02EC  07A0               	addwf	___lwdiv@counter,f
  1668  02ED                     l1587:
  1669  02ED  1FF4               	btfss	___lwdiv@divisor+1,7
  1670  02EE  2AF0               	goto	u1171
  1671  02EF  2AF1               	goto	u1170
  1672  02F0                     u1171:
  1673  02F0  2AE2               	goto	l1583
  1674  02F1                     u1170:
  1675  02F1                     l1589:
  1676  02F1  3001               	movlw	1
  1677  02F2                     u1185:
  1678  02F2  1003               	clrc
  1679  02F3  0DA1               	rlf	___lwdiv@quotient,f
  1680  02F4  0DA2               	rlf	___lwdiv@quotient+1,f
  1681  02F5  3EFF               	addlw	-1
  1682  02F6  1D03               	skipz
  1683  02F7  2AF2               	goto	u1185
  1684  02F8  0874               	movf	___lwdiv@divisor+1,w
  1685  02F9  0276               	subwf	___lwdiv@dividend+1,w
  1686  02FA  1D03               	skipz
  1687  02FB  2AFE               	goto	u1195
  1688  02FC  0873               	movf	___lwdiv@divisor,w
  1689  02FD  0275               	subwf	___lwdiv@dividend,w
  1690  02FE                     u1195:
  1691  02FE  1C03               	skipc
  1692  02FF  2B01               	goto	u1191
  1693  0300  2B02               	goto	u1190
  1694  0301                     u1191:
  1695  0301  2B09               	goto	l1595
  1696  0302                     u1190:
  1697  0302                     l1591:
  1698  0302  0873               	movf	___lwdiv@divisor,w
  1699  0303  02F5               	subwf	___lwdiv@dividend,f
  1700  0304  0874               	movf	___lwdiv@divisor+1,w
  1701  0305  1C03               	skipc
  1702  0306  03F6               	decf	___lwdiv@dividend+1,f
  1703  0307  02F6               	subwf	___lwdiv@dividend+1,f
  1704  0308                     l1593:
  1705  0308  1421               	bsf	___lwdiv@quotient,0
  1706  0309                     l1595:
  1707  0309  3001               	movlw	1
  1708  030A                     u1205:
  1709  030A  1003               	clrc
  1710  030B  0CF4               	rrf	___lwdiv@divisor+1,f
  1711  030C  0CF3               	rrf	___lwdiv@divisor,f
  1712  030D  3EFF               	addlw	-1
  1713  030E  1D03               	skipz
  1714  030F  2B0A               	goto	u1205
  1715  0310                     l1597:
  1716  0310  3001               	movlw	1
  1717  0311  02A0               	subwf	___lwdiv@counter,f
  1718  0312  1D03               	btfss	3,2
  1719  0313  2B15               	goto	u1211
  1720  0314  2B16               	goto	u1210
  1721  0315                     u1211:
  1722  0315  2AF1               	goto	l1589
  1723  0316                     u1210:
  1724  0316                     l1599:
  1725  0316  0822               	movf	___lwdiv@quotient+1,w
  1726  0317  00F4               	movwf	?___lwdiv+1
  1727  0318  0821               	movf	___lwdiv@quotient,w
  1728  0319  00F3               	movwf	?___lwdiv
  1729  031A                     l540:
  1730  031A  0008               	return
  1731  031B                     __end_of___lwdiv:
  1732                           
  1733                           	psect	text6
  1734  044F                     __ptext6:	
  1735 ;; *************** function _setup *****************
  1736 ;; Defined at:
  1737 ;;		line 53 in file "newmain.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _setup
  1767  044F                     _setup:
  1768  044F                     l1307:	
  1769                           ;incstack = 0
  1770                           ; Regs used in _setup: [wreg+status,2]
  1771                           
  1772                           
  1773                           ;newmain.c: 54:     t1 = 0;
  1774  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0451  01CE               	clrf	_t1
  1777                           
  1778                           ;newmain.c: 55:     t2 = 0;
  1779  0452  01CD               	clrf	_t2
  1780  0453                     l1309:
  1781                           
  1782                           ;newmain.c: 56:     TRISA = 255;
  1783  0453  30FF               	movlw	255
  1784  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1786  0456  0085               	movwf	5	;volatile
  1787  0457                     l1311:
  1788                           
  1789                           ;newmain.c: 57:     TRISC = 0b00000000;
  1790  0457  0187               	clrf	7	;volatile
  1791  0458                     l1313:
  1792                           
  1793                           ;newmain.c: 58:     TRISD = 0b00000000;
  1794  0458  0188               	clrf	8	;volatile
  1795  0459                     l1315:
  1796                           
  1797                           ;newmain.c: 59:     TRISE = 0b00000000;
  1798  0459  0189               	clrf	9	;volatile
  1799                           
  1800                           ;newmain.c: 60:     ANSEL = 0b00000011;
  1801  045A  3003               	movlw	3
  1802  045B  1683               	bsf	3,5	;RP0=1, select bank3
  1803  045C  1703               	bsf	3,6	;RP1=1, select bank3
  1804  045D  0088               	movwf	8	;volatile
  1805  045E                     l1317:
  1806                           
  1807                           ;newmain.c: 61:     ANSELH = 0b00000000;
  1808  045E  0189               	clrf	9	;volatile
  1809  045F                     l1319:
  1810                           
  1811                           ;newmain.c: 62:     PORTD = 0b00000000;
  1812  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0461  0188               	clrf	8	;volatile
  1815                           
  1816                           ;newmain.c: 63:     INTCON = 0b11000000;
  1817  0462  30C0               	movlw	192
  1818  0463  008B               	movwf	11	;volatile
  1819                           
  1820                           ;newmain.c: 64:     PIE1 = 0b01000010;
  1821  0464  3042               	movlw	66
  1822  0465  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0466  1303               	bcf	3,6	;RP1=0, select bank1
  1824  0467  008C               	movwf	12	;volatile
  1825                           
  1826                           ;newmain.c: 65:     ADCON0 = 0b00000001;
  1827  0468  3001               	movlw	1
  1828  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1829  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1830  046B  009F               	movwf	31	;volatile
  1831  046C                     l1321:
  1832                           
  1833                           ;newmain.c: 66:     ADCON1 = 0b00000000;
  1834  046C  1683               	bsf	3,5	;RP0=1, select bank1
  1835  046D  1303               	bcf	3,6	;RP1=0, select bank1
  1836  046E  019F               	clrf	31	;volatile
  1837  046F                     l1323:
  1838                           
  1839                           ;newmain.c: 67:     PR2 = 255;
  1840  046F  30FF               	movlw	255
  1841  0470  0092               	movwf	18	;volatile
  1842  0471                     l1325:
  1843                           
  1844                           ;newmain.c: 68:     T2CON = 0b00010110;
  1845  0471  3016               	movlw	22
  1846  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0474  0092               	movwf	18	;volatile
  1849  0475                     l123:
  1850  0475  0008               	return
  1851  0476                     __end_of_setup:
  1852                           
  1853                           	psect	text7
  1854  031B                     __ptext7:	
  1855 ;; *************** function _Lcd_Write_String *****************
  1856 ;; Defined at:
  1857 ;;		line 100 in file "./lcdlib.h"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  a               2    7[COMMON] PTR unsigned char 
  1860 ;;		 -> main@s(16), STR_6(13), STR_5(20), STR_4(12), 
  1861 ;;		 -> STR_3(13), STR_2(10), STR_1(16), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  i               2    3[BANK0 ] int 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         2       0       0       0       0
  1874 ;;      Locals:         0       2       0       0       0
  1875 ;;      Temps:          0       3       0       0       0
  1876 ;;      Totals:         2       5       0       0       0
  1877 ;;Total ram usage:        7 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    3
  1880 ;; This function calls:
  1881 ;;		_Lcd_Write_Char
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;;		_ARRANQUE
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           
  1889                           ;psect for function _Lcd_Write_String
  1890  031B                     _Lcd_Write_String:
  1891  031B                     l1649:	
  1892                           ;incstack = 0
  1893                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1894                           
  1895                           
  1896                           ;./lcdlib.h: 101:     int i;;./lcdlib.h: 102:     for (i = 0; a[i] != '\0'; i++)
  1897  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1898  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1899  031D  01A3               	clrf	Lcd_Write_String@i
  1900  031E  01A4               	clrf	Lcd_Write_String@i+1
  1901  031F  2B44               	goto	l1655
  1902  0320                     l1651:
  1903                           
  1904                           ;./lcdlib.h: 103:         Lcd_Write_Char(a[i]);
  1905  0320  0823               	movf	Lcd_Write_String@i,w
  1906  0321  0777               	addwf	Lcd_Write_String@a,w
  1907  0322  00A1               	movwf	??_Lcd_Write_String+1
  1908  0323  0878               	movf	Lcd_Write_String@a+1,w
  1909  0324  00A0               	movwf	??_Lcd_Write_String
  1910  0325  1803               	skipnc
  1911  0326  0AA0               	incf	??_Lcd_Write_String,f
  1912  0327  1FA3               	btfss	Lcd_Write_String@i,7
  1913  0328  2B2A               	goto	u1300
  1914  0329  03A0               	decf	??_Lcd_Write_String,f
  1915  032A                     u1300:
  1916  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1917  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1918  032C  0820               	movf	??_Lcd_Write_String,w
  1919  032D  00A2               	movwf	??_Lcd_Write_String+2
  1920  032E  0822               	movf	??_Lcd_Write_String+2,w
  1921  032F  00FF               	movwf	btemp+1
  1922  0330  0821               	movf	??_Lcd_Write_String+1,w
  1923  0331  0084               	movwf	4
  1924  0332  120A  118A  2200  120A  118A  	fcall	stringtab
  1925  0337  120A  118A  24C1  120A  118A  	fcall	_Lcd_Write_Char
  1926  033C                     l1653:
  1927  033C  3001               	movlw	1
  1928  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1929  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1930  033F  07A3               	addwf	Lcd_Write_String@i,f
  1931  0340  1803               	skipnc
  1932  0341  0AA4               	incf	Lcd_Write_String@i+1,f
  1933  0342  3000               	movlw	0
  1934  0343  07A4               	addwf	Lcd_Write_String@i+1,f
  1935  0344                     l1655:
  1936  0344  0823               	movf	Lcd_Write_String@i,w
  1937  0345  0777               	addwf	Lcd_Write_String@a,w
  1938  0346  00A1               	movwf	??_Lcd_Write_String+1
  1939  0347  0878               	movf	Lcd_Write_String@a+1,w
  1940  0348  00A0               	movwf	??_Lcd_Write_String
  1941  0349  1803               	skipnc
  1942  034A  0AA0               	incf	??_Lcd_Write_String,f
  1943  034B  1FA3               	btfss	Lcd_Write_String@i,7
  1944  034C  2B4E               	goto	u1310
  1945  034D  03A0               	decf	??_Lcd_Write_String,f
  1946  034E                     u1310:
  1947  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1948  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0350  0820               	movf	??_Lcd_Write_String,w
  1950  0351  00A2               	movwf	??_Lcd_Write_String+2
  1951  0352  0822               	movf	??_Lcd_Write_String+2,w
  1952  0353  00FF               	movwf	btemp+1
  1953  0354  0821               	movf	??_Lcd_Write_String+1,w
  1954  0355  0084               	movwf	4
  1955  0356  120A  118A  2200  120A  118A  	fcall	stringtab
  1956  035B  3A00               	xorlw	0
  1957  035C  1D03               	skipz
  1958  035D  2B5F               	goto	u1321
  1959  035E  2B60               	goto	u1320
  1960  035F                     u1321:
  1961  035F  2B20               	goto	l1651
  1962  0360                     u1320:
  1963  0360                     l101:
  1964  0360  0008               	return
  1965  0361                     __end_of_Lcd_Write_String:
  1966                           
  1967                           	psect	text8
  1968  04C1                     __ptext8:	
  1969 ;; *************** function _Lcd_Write_Char *****************
  1970 ;; Defined at:
  1971 ;;		line 91 in file "./lcdlib.h"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  a               1    wreg     unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  a               1    6[COMMON] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         0       0       0       0       0
  1986 ;;      Locals:         1       0       0       0       0
  1987 ;;      Temps:          2       0       0       0       0
  1988 ;;      Totals:         3       0       0       0       0
  1989 ;;Total ram usage:        3 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    2
  1992 ;; This function calls:
  1993 ;;		_Lcd_Port
  1994 ;; This function is called by:
  1995 ;;		_Lcd_Write_String
  1996 ;;		_ARRANQUE
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _Lcd_Write_Char
  2002  04C1                     _Lcd_Write_Char:
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2006                           ;Lcd_Write_Char@a stored from wreg
  2007  04C1  00F6               	movwf	Lcd_Write_Char@a
  2008  04C2                     l1567:
  2009                           
  2010                           ;./lcdlib.h: 92:     RE1 = 1;
  2011  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2012  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2013  04C4  1489               	bsf	9,1	;volatile
  2014  04C5                     l1569:
  2015                           
  2016                           ;./lcdlib.h: 93:     Lcd_Port(a);
  2017  04C5  0876               	movf	Lcd_Write_Char@a,w
  2018  04C6  120A  118A  23A6  120A  118A  	fcall	_Lcd_Port
  2019  04CB                     l1571:
  2020                           
  2021                           ;./lcdlib.h: 94:     RE2 = 1;
  2022  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2023  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2024  04CD  1509               	bsf	9,2	;volatile
  2025  04CE                     l1573:
  2026                           
  2027                           ;./lcdlib.h: 95:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2028  04CE  300B               	movlw	11
  2029  04CF  00F5               	movwf	??_Lcd_Write_Char+1
  2030  04D0  3062               	movlw	98
  2031  04D1  00F4               	movwf	??_Lcd_Write_Char
  2032  04D2                     u1517:
  2033  04D2  0BF4               	decfsz	??_Lcd_Write_Char,f
  2034  04D3  2CD2               	goto	u1517
  2035  04D4  0BF5               	decfsz	??_Lcd_Write_Char+1,f
  2036  04D5  2CD2               	goto	u1517
  2037  04D6  0000               	nop
  2038  04D7                     l1575:
  2039                           
  2040                           ;./lcdlib.h: 96:     RE2 = 0;
  2041  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2042  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2043  04D9  1109               	bcf	9,2	;volatile
  2044  04DA                     l95:
  2045  04DA  0008               	return
  2046  04DB                     __end_of_Lcd_Write_Char:
  2047                           
  2048                           	psect	text9
  2049  0476                     __ptext9:	
  2050 ;; *************** function _Lcd_Set_Cursor *****************
  2051 ;; Defined at:
  2052 ;;		line 66 in file "./lcdlib.h"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  a               1    wreg     unsigned char 
  2055 ;;  b               1    7[COMMON] unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  a               1    0[BANK0 ] unsigned char 
  2058 ;;  temp            1    1[BANK0 ] unsigned char 
  2059 ;;  y               1    0        unsigned char 
  2060 ;;  z               1    0        unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         1       0       0       0       0
  2071 ;;      Locals:         0       2       0       0       0
  2072 ;;      Temps:          1       0       0       0       0
  2073 ;;      Totals:         2       2       0       0       0
  2074 ;;Total ram usage:        4 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    3
  2077 ;; This function calls:
  2078 ;;		_Lcd_Cmd
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;;		_ARRANQUE
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _Lcd_Set_Cursor
  2087  0476                     _Lcd_Set_Cursor:
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2091                           ;Lcd_Set_Cursor@a stored from wreg
  2092  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0478  00A0               	movwf	Lcd_Set_Cursor@a
  2095  0479                     l1627:
  2096                           
  2097                           ;./lcdlib.h: 67:     char temp, z, y;;./lcdlib.h: 68:     if (a == 1) {
  2098  0479  0320               	decf	Lcd_Set_Cursor@a,w
  2099  047A  1D03               	btfss	3,2
  2100  047B  2C7D               	goto	u1281
  2101  047C  2C7E               	goto	u1280
  2102  047D                     u1281:
  2103  047D  2C8A               	goto	l1633
  2104  047E                     u1280:
  2105  047E                     l1629:
  2106                           
  2107                           ;./lcdlib.h: 69:         temp = 0x80 + b - 1;
  2108  047E  0877               	movf	Lcd_Set_Cursor@b,w
  2109  047F  3E7F               	addlw	127
  2110  0480  00F8               	movwf	??_Lcd_Set_Cursor
  2111  0481  0878               	movf	??_Lcd_Set_Cursor,w
  2112  0482  00A1               	movwf	Lcd_Set_Cursor@temp
  2113  0483                     l1631:
  2114                           
  2115                           ;./lcdlib.h: 70:         Lcd_Cmd(temp);
  2116  0483  0821               	movf	Lcd_Set_Cursor@temp,w
  2117  0484  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2118                           
  2119                           ;./lcdlib.h: 71:     } else if (a == 2) {
  2120  0489  2C9B               	goto	l89
  2121  048A                     l1633:
  2122  048A  3002               	movlw	2
  2123  048B  0620               	xorwf	Lcd_Set_Cursor@a,w
  2124  048C  1D03               	btfss	3,2
  2125  048D  2C8F               	goto	u1291
  2126  048E  2C90               	goto	u1290
  2127  048F                     u1291:
  2128  048F  2C9B               	goto	l89
  2129  0490                     u1290:
  2130  0490                     l1635:
  2131                           
  2132                           ;./lcdlib.h: 72:         temp = 0xC0 + b - 1;
  2133  0490  0877               	movf	Lcd_Set_Cursor@b,w
  2134  0491  3EBF               	addlw	191
  2135  0492  00F8               	movwf	??_Lcd_Set_Cursor
  2136  0493  0878               	movf	??_Lcd_Set_Cursor,w
  2137  0494  00A1               	movwf	Lcd_Set_Cursor@temp
  2138  0495                     l1637:
  2139                           
  2140                           ;./lcdlib.h: 73:         Lcd_Cmd(temp);
  2141  0495  0821               	movf	Lcd_Set_Cursor@temp,w
  2142  0496  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2143  049B                     l89:
  2144  049B  0008               	return
  2145  049C                     __end_of_Lcd_Set_Cursor:
  2146                           
  2147                           	psect	text10
  2148  0361                     __ptext10:	
  2149 ;; *************** function _Lcd_Init *****************
  2150 ;; Defined at:
  2151 ;;		line 77 in file "./lcdlib.h"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0
  2167 ;;      Temps:          2       0       0       0       0
  2168 ;;      Totals:         2       0       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    3
  2172 ;; This function calls:
  2173 ;;		_Lcd_Cmd
  2174 ;;		_Lcd_Port
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _Lcd_Init
  2182  0361                     _Lcd_Init:
  2183  0361                     l1639:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2186                           
  2187                           
  2188                           ;./lcdlib.h: 78:     Lcd_Port(0x00);
  2189  0361  3000               	movlw	0
  2190  0362  120A  118A  23A6  120A  118A  	fcall	_Lcd_Port
  2191  0367                     l1641:
  2192                           
  2193                           ;./lcdlib.h: 79:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2194  0367  3034               	movlw	52
  2195  0368  00F8               	movwf	??_Lcd_Init+1
  2196  0369  30F1               	movlw	241
  2197  036A  00F7               	movwf	??_Lcd_Init
  2198  036B                     u1527:
  2199  036B  0BF7               	decfsz	??_Lcd_Init,f
  2200  036C  2B6B               	goto	u1527
  2201  036D  0BF8               	decfsz	??_Lcd_Init+1,f
  2202  036E  2B6B               	goto	u1527
  2203  036F  2B70               	nop2
  2204  0370                     l1643:
  2205                           
  2206                           ;./lcdlib.h: 80:     Lcd_Cmd(0x03);
  2207  0370  3003               	movlw	3
  2208  0371  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2209                           
  2210                           ;./lcdlib.h: 81:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2211  0376  300D               	movlw	13
  2212  0377  00F8               	movwf	??_Lcd_Init+1
  2213  0378  30FB               	movlw	251
  2214  0379  00F7               	movwf	??_Lcd_Init
  2215  037A                     u1537:
  2216  037A  0BF7               	decfsz	??_Lcd_Init,f
  2217  037B  2B7A               	goto	u1537
  2218  037C  0BF8               	decfsz	??_Lcd_Init+1,f
  2219  037D  2B7A               	goto	u1537
  2220  037E  2B7F               	nop2
  2221  037F                     l1645:
  2222                           
  2223                           ;./lcdlib.h: 82:     Lcd_Cmd(0x03);
  2224  037F  3003               	movlw	3
  2225  0380  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2226  0385                     l1647:
  2227                           
  2228                           ;./lcdlib.h: 83:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2229  0385  301D               	movlw	29
  2230  0386  00F8               	movwf	??_Lcd_Init+1
  2231  0387  3091               	movlw	145
  2232  0388  00F7               	movwf	??_Lcd_Init
  2233  0389                     u1547:
  2234  0389  0BF7               	decfsz	??_Lcd_Init,f
  2235  038A  2B89               	goto	u1547
  2236  038B  0BF8               	decfsz	??_Lcd_Init+1,f
  2237  038C  2B89               	goto	u1547
  2238                           
  2239                           ;./lcdlib.h: 84:     Lcd_Cmd(0x03);
  2240  038D  3003               	movlw	3
  2241  038E  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2242                           
  2243                           ;./lcdlib.h: 86:     Lcd_Cmd(0x38);
  2244  0393  3038               	movlw	56
  2245  0394  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2246                           
  2247                           ;./lcdlib.h: 87:     Lcd_Cmd(0x0C);
  2248  0399  300C               	movlw	12
  2249  039A  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2250                           
  2251                           ;./lcdlib.h: 88:     Lcd_Cmd(0x06);
  2252  039F  3006               	movlw	6
  2253  03A0  120A  118A  24DB  120A  118A  	fcall	_Lcd_Cmd
  2254  03A5                     l92:
  2255  03A5  0008               	return
  2256  03A6                     __end_of_Lcd_Init:
  2257                           
  2258                           	psect	text11
  2259  04DB                     __ptext11:	
  2260 ;; *************** function _Lcd_Cmd *****************
  2261 ;; Defined at:
  2262 ;;		line 54 in file "./lcdlib.h"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  a               1    wreg     unsigned char 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  a               1    6[COMMON] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0
  2278 ;;      Temps:          2       0       0       0       0
  2279 ;;      Totals:         3       0       0       0       0
  2280 ;;Total ram usage:        3 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		_Lcd_Port
  2285 ;; This function is called by:
  2286 ;;		_Lcd_Set_Cursor
  2287 ;;		_Lcd_Init
  2288 ;;		_Lcd_Clear
  2289 ;;		_Lcd_Shift_Right
  2290 ;;		_Lcd_Shift_Left
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _Lcd_Cmd
  2296  04DB                     _Lcd_Cmd:
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2300                           ;Lcd_Cmd@a stored from wreg
  2301  04DB  00F6               	movwf	Lcd_Cmd@a
  2302  04DC                     l1557:
  2303                           
  2304                           ;./lcdlib.h: 55:     RE1 = 0;
  2305  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2306  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  2307  04DE  1089               	bcf	9,1	;volatile
  2308  04DF                     l1559:
  2309                           
  2310                           ;./lcdlib.h: 56:     Lcd_Port(a);
  2311  04DF  0876               	movf	Lcd_Cmd@a,w
  2312  04E0  120A  118A  23A6  120A  118A  	fcall	_Lcd_Port
  2313  04E5                     l1561:
  2314                           
  2315                           ;./lcdlib.h: 57:     RE2 = 1;
  2316  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2317  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2318  04E7  1509               	bsf	9,2	;volatile
  2319  04E8                     l1563:
  2320                           
  2321                           ;./lcdlib.h: 58:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2322  04E8  300B               	movlw	11
  2323  04E9  00F5               	movwf	??_Lcd_Cmd+1
  2324  04EA  3062               	movlw	98
  2325  04EB  00F4               	movwf	??_Lcd_Cmd
  2326  04EC                     u1557:
  2327  04EC  0BF4               	decfsz	??_Lcd_Cmd,f
  2328  04ED  2CEC               	goto	u1557
  2329  04EE  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2330  04EF  2CEC               	goto	u1557
  2331  04F0  0000               	nop
  2332  04F1                     l1565:
  2333                           
  2334                           ;./lcdlib.h: 59:     RE2 = 0;
  2335  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2336  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2337  04F3  1109               	bcf	9,2	;volatile
  2338  04F4                     l80:
  2339  04F4  0008               	return
  2340  04F5                     __end_of_Lcd_Cmd:
  2341                           
  2342                           	psect	text12
  2343  03A6                     __ptext12:	
  2344 ;; *************** function _Lcd_Port *****************
  2345 ;; Defined at:
  2346 ;;		line 16 in file "./lcdlib.h"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  a               1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  a               1    3[COMMON] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         1       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0
  2363 ;;      Totals:         1       0       0       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_Lcd_Cmd
  2371 ;;		_Lcd_Init
  2372 ;;		_Lcd_Write_Char
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _Lcd_Port
  2378  03A6                     _Lcd_Port:
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _Lcd_Port: [wreg]
  2382                           ;Lcd_Port@a stored from wreg
  2383  03A6  00F3               	movwf	Lcd_Port@a
  2384  03A7                     l1539:
  2385                           
  2386                           ;./lcdlib.h: 17:     if (a & 1)
  2387  03A7  1C73               	btfss	Lcd_Port@a,0
  2388  03A8  2BAA               	goto	u1071
  2389  03A9  2BAB               	goto	u1070
  2390  03AA                     u1071:
  2391  03AA  2BAF               	goto	l61
  2392  03AB                     u1070:
  2393  03AB                     l1541:
  2394                           
  2395                           ;./lcdlib.h: 18:         RD0 = 1;
  2396  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2397  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2398  03AD  1408               	bsf	8,0	;volatile
  2399  03AE  2BB2               	goto	l62
  2400  03AF                     l61:	
  2401                           ;./lcdlib.h: 19:     else
  2402                           
  2403                           
  2404                           ;./lcdlib.h: 20:         RD0 = 0;
  2405  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2406  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2407  03B1  1008               	bcf	8,0	;volatile
  2408  03B2                     l62:
  2409                           
  2410                           ;./lcdlib.h: 22:     if (a & 2)
  2411  03B2  1CF3               	btfss	Lcd_Port@a,1
  2412  03B3  2BB5               	goto	u1081
  2413  03B4  2BB6               	goto	u1080
  2414  03B5                     u1081:
  2415  03B5  2BB8               	goto	l63
  2416  03B6                     u1080:
  2417  03B6                     l1543:
  2418                           
  2419                           ;./lcdlib.h: 23:         RD1 = 1;
  2420  03B6  1488               	bsf	8,1	;volatile
  2421  03B7  2BB9               	goto	l64
  2422  03B8                     l63:	
  2423                           ;./lcdlib.h: 24:     else
  2424                           
  2425                           
  2426                           ;./lcdlib.h: 25:         RD1 = 0;
  2427  03B8  1088               	bcf	8,1	;volatile
  2428  03B9                     l64:
  2429                           
  2430                           ;./lcdlib.h: 27:     if (a & 4)
  2431  03B9  1D73               	btfss	Lcd_Port@a,2
  2432  03BA  2BBC               	goto	u1091
  2433  03BB  2BBD               	goto	u1090
  2434  03BC                     u1091:
  2435  03BC  2BBF               	goto	l65
  2436  03BD                     u1090:
  2437  03BD                     l1545:
  2438                           
  2439                           ;./lcdlib.h: 28:         RD2 = 1;
  2440  03BD  1508               	bsf	8,2	;volatile
  2441  03BE  2BC0               	goto	l66
  2442  03BF                     l65:	
  2443                           ;./lcdlib.h: 29:     else
  2444                           
  2445                           
  2446                           ;./lcdlib.h: 30:         RD2 = 0;
  2447  03BF  1108               	bcf	8,2	;volatile
  2448  03C0                     l66:
  2449                           
  2450                           ;./lcdlib.h: 32:     if (a & 8)
  2451  03C0  1DF3               	btfss	Lcd_Port@a,3
  2452  03C1  2BC3               	goto	u1101
  2453  03C2  2BC4               	goto	u1100
  2454  03C3                     u1101:
  2455  03C3  2BC6               	goto	l67
  2456  03C4                     u1100:
  2457  03C4                     l1547:
  2458                           
  2459                           ;./lcdlib.h: 33:         RD3 = 1;
  2460  03C4  1588               	bsf	8,3	;volatile
  2461  03C5  2BC7               	goto	l68
  2462  03C6                     l67:	
  2463                           ;./lcdlib.h: 34:     else
  2464                           
  2465                           
  2466                           ;./lcdlib.h: 35:         RD3 = 0;
  2467  03C6  1188               	bcf	8,3	;volatile
  2468  03C7                     l68:
  2469                           
  2470                           ;./lcdlib.h: 36:     if (a & 16)
  2471  03C7  1E73               	btfss	Lcd_Port@a,4
  2472  03C8  2BCA               	goto	u1111
  2473  03C9  2BCB               	goto	u1110
  2474  03CA                     u1111:
  2475  03CA  2BCD               	goto	l69
  2476  03CB                     u1110:
  2477  03CB                     l1549:
  2478                           
  2479                           ;./lcdlib.h: 37:         RD4 = 1;
  2480  03CB  1608               	bsf	8,4	;volatile
  2481  03CC  2BCE               	goto	l70
  2482  03CD                     l69:	
  2483                           ;./lcdlib.h: 38:     else
  2484                           
  2485                           
  2486                           ;./lcdlib.h: 39:         RD4 = 0;
  2487  03CD  1208               	bcf	8,4	;volatile
  2488  03CE                     l70:
  2489                           
  2490                           ;./lcdlib.h: 40:     if (a & 32)
  2491  03CE  1EF3               	btfss	Lcd_Port@a,5
  2492  03CF  2BD1               	goto	u1121
  2493  03D0  2BD2               	goto	u1120
  2494  03D1                     u1121:
  2495  03D1  2BD4               	goto	l71
  2496  03D2                     u1120:
  2497  03D2                     l1551:
  2498                           
  2499                           ;./lcdlib.h: 41:         RD5 = 1;
  2500  03D2  1688               	bsf	8,5	;volatile
  2501  03D3  2BD5               	goto	l72
  2502  03D4                     l71:	
  2503                           ;./lcdlib.h: 42:     else
  2504                           
  2505                           
  2506                           ;./lcdlib.h: 43:         RD5 = 0;
  2507  03D4  1288               	bcf	8,5	;volatile
  2508  03D5                     l72:
  2509                           
  2510                           ;./lcdlib.h: 44:     if (a & 64)
  2511  03D5  1F73               	btfss	Lcd_Port@a,6
  2512  03D6  2BD8               	goto	u1131
  2513  03D7  2BD9               	goto	u1130
  2514  03D8                     u1131:
  2515  03D8  2BDB               	goto	l73
  2516  03D9                     u1130:
  2517  03D9                     l1553:
  2518                           
  2519                           ;./lcdlib.h: 45:         RD6 = 1;
  2520  03D9  1708               	bsf	8,6	;volatile
  2521  03DA  2BDC               	goto	l74
  2522  03DB                     l73:	
  2523                           ;./lcdlib.h: 46:     else
  2524                           
  2525                           
  2526                           ;./lcdlib.h: 47:         RD6 = 0;
  2527  03DB  1308               	bcf	8,6	;volatile
  2528  03DC                     l74:
  2529                           
  2530                           ;./lcdlib.h: 48:     if (a & 128)
  2531  03DC  1FF3               	btfss	Lcd_Port@a,7
  2532  03DD  2BDF               	goto	u1141
  2533  03DE  2BE0               	goto	u1140
  2534  03DF                     u1141:
  2535  03DF  2BE2               	goto	l75
  2536  03E0                     u1140:
  2537  03E0                     l1555:
  2538                           
  2539                           ;./lcdlib.h: 49:         RD7 = 1;
  2540  03E0  1788               	bsf	8,7	;volatile
  2541  03E1  2BE3               	goto	l77
  2542  03E2                     l75:	
  2543                           ;./lcdlib.h: 50:     else
  2544                           
  2545                           
  2546                           ;./lcdlib.h: 51:         RD7 = 0;
  2547  03E2  1388               	bcf	8,7	;volatile
  2548  03E3                     l77:
  2549  03E3  0008               	return
  2550  03E4                     __end_of_Lcd_Port:
  2551                           
  2552                           	psect	text13
  2553  0420                     __ptext13:	
  2554 ;; *************** function _ISR *****************
  2555 ;; Defined at:
  2556 ;;		line 90 in file "newmain.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0
  2572 ;;      Temps:          3       0       0       0       0
  2573 ;;      Totals:         3       0       0       0       0
  2574 ;;Total ram usage:        3 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		Interrupt level 1
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _ISR
  2585  0420                     _ISR:
  2586  0420                     i1l1491:
  2587                           
  2588                           ;newmain.c: 91:     if(PIR1bits.ADIF==1){
  2589  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0422  1F0C               	btfss	12,6	;volatile
  2592  0423  2C25               	goto	u103_21
  2593  0424  2C26               	goto	u103_20
  2594  0425                     u103_21:
  2595  0425  2C36               	goto	i1l1503
  2596  0426                     u103_20:
  2597  0426                     i1l1493:
  2598                           
  2599                           ;newmain.c: 92:         if(ADCON0==0b00000001){
  2600  0426  031F               	decf	31,w	;volatile
  2601  0427  1D03               	btfss	3,2
  2602  0428  2C2A               	goto	u104_21
  2603  0429  2C2B               	goto	u104_20
  2604  042A                     u104_21:
  2605  042A  2C31               	goto	i1l1499
  2606  042B                     u104_20:
  2607  042B                     i1l1495:
  2608                           
  2609                           ;newmain.c: 93:             t1=ADRESH;
  2610  042B  081E               	movf	30,w	;volatile
  2611  042C  00F0               	movwf	??_ISR
  2612  042D  0870               	movf	??_ISR,w
  2613  042E  00CE               	movwf	_t1
  2614  042F                     i1l1497:
  2615                           
  2616                           ;newmain.c: 94:             PIR1bits.ADIF=0;
  2617  042F  130C               	bcf	12,6	;volatile
  2618                           
  2619                           ;newmain.c: 95:         }
  2620  0430  2C36               	goto	i1l1503
  2621  0431                     i1l1499:
  2622                           
  2623                           ;newmain.c: 97:             t2=ADRESH;
  2624  0431  081E               	movf	30,w	;volatile
  2625  0432  00F0               	movwf	??_ISR
  2626  0433  0870               	movf	??_ISR,w
  2627  0434  00CD               	movwf	_t2
  2628  0435                     i1l1501:
  2629                           
  2630                           ;newmain.c: 98:             PIR1bits.ADIF=0;
  2631  0435  130C               	bcf	12,6	;volatile
  2632  0436                     i1l1503:
  2633                           
  2634                           ;newmain.c: 101:     if(PIR1bits.TMR2IF==1){
  2635  0436  1C8C               	btfss	12,1	;volatile
  2636  0437  2C39               	goto	u105_21
  2637  0438  2C3A               	goto	u105_20
  2638  0439                     u105_21:
  2639  0439  2C48               	goto	i1l143
  2640  043A                     u105_20:
  2641  043A                     i1l1505:
  2642                           
  2643                           ;newmain.c: 102:         if(ADCON0==0b00000001){
  2644  043A  031F               	decf	31,w	;volatile
  2645  043B  1D03               	btfss	3,2
  2646  043C  2C3E               	goto	u106_21
  2647  043D  2C3F               	goto	u106_20
  2648  043E                     u106_21:
  2649  043E  2C44               	goto	i1l1513
  2650  043F                     u106_20:
  2651  043F                     i1l1507:
  2652                           
  2653                           ;newmain.c: 103:             ADCON0=0b00000101;
  2654  043F  3005               	movlw	5
  2655  0440  009F               	movwf	31	;volatile
  2656  0441                     i1l1509:
  2657                           
  2658                           ;newmain.c: 104:             PIR1bits.TMR2IF=0;
  2659  0441  108C               	bcf	12,1	;volatile
  2660  0442                     i1l1511:
  2661                           
  2662                           ;newmain.c: 105:             TMR2=0;
  2663  0442  0191               	clrf	17	;volatile
  2664                           
  2665                           ;newmain.c: 106:         }
  2666  0443  2C48               	goto	i1l143
  2667  0444                     i1l1513:
  2668                           
  2669                           ;newmain.c: 108:             ADCON0=0b00000001;
  2670  0444  3001               	movlw	1
  2671  0445  009F               	movwf	31	;volatile
  2672  0446                     i1l1515:
  2673                           
  2674                           ;newmain.c: 109:             PIR1bits.TMR2IF=0;
  2675  0446  108C               	bcf	12,1	;volatile
  2676  0447  2C42               	goto	i1l1511
  2677  0448                     i1l143:
  2678  0448  0872               	movf	??_ISR+2,w
  2679  0449  008A               	movwf	10
  2680  044A  0E71               	swapf	??_ISR+1,w
  2681  044B  0083               	movwf	3
  2682  044C  0EFE               	swapf	btemp,f
  2683  044D  0E7E               	swapf	btemp,w
  2684  044E  0009               	retfie
  2685  044F                     __end_of_ISR:
  2686  007E                     btemp	set	126	;btemp
  2687  007E                     wtemp0	set	126
  2688                           
  2689                           	psect	intentry
  2690  0004                     __pintentry:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2693                           
  2694  0004                     interrupt_function:
  2695  007E                     saved_w	set	btemp
  2696  0004  00FE               	movwf	btemp
  2697  0005  0E03               	swapf	3,w
  2698  0006  00F1               	movwf	??_ISR+1
  2699  0007  080A               	movf	10,w
  2700  0008  00F2               	movwf	??_ISR+2
  2701  0009  120A  118A  2C20   	ljmp	_ISR
  2702                           
  2703                           	psect	config
  2704                           
  2705                           ;Config register CONFIG1 @ 0x2007
  2706                           ;	Oscillator Selection bits
  2707                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  2708                           ;	Watchdog Timer Enable bit
  2709                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2710                           ;	Power-up Timer Enable bit
  2711                           ;	PWRTE = OFF, PWRT disabled
  2712                           ;	RE3/MCLR pin function select bit
  2713                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2714                           ;	Code Protection bit
  2715                           ;	CP = OFF, Program memory code protection is disabled
  2716                           ;	Data Code Protection bit
  2717                           ;	CPD = OFF, Data memory code protection is disabled
  2718                           ;	Brown Out Reset Selection bits
  2719                           ;	BOREN = OFF, BOR disabled
  2720                           ;	Internal External Switchover bit
  2721                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2722                           ;	Fail-Safe Clock Monitor Enabled bit
  2723                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2724                           ;	Low Voltage Programming Enable bit
  2725                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2726                           ;	In-Circuit Debugger Mode bit
  2727                           ;	DEBUG = 0x1, unprogrammed default
  2728  2007                     	org	8199
  2729  2007  2CD7               	dw	11479
  2730                           
  2731                           ;Config register CONFIG2 @ 0x2008
  2732                           ;	Brown-out Reset Selection bit
  2733                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2734                           ;	Flash Program Memory Self Write Enable bits
  2735                           ;	WRT = OFF, Write protection off
  2736  2008                     	org	8200
  2737  2008  3FFF               	dw	16383

Data Sizes:
    Strings     95
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     45      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_7(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@s(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@s(BANK0[16]), STR_6(CODE[13]), STR_5(CODE[20]), STR_4(CODE[12]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    5221
                                             24 BANK0     21    21      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    20      5    2366
                                              7 BANK0     17    12      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1039
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     279
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1191
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     527
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 00:10:01 2021

                        pc 0002                         l61 03AF                         l70 03CE  
                       l62 03B2                         l71 03D4                         l63 03B8  
                       l72 03D5                         l64 03B9                         l80 04F4  
                       l73 03DB                         l65 03BF                         l74 03DC  
                       l66 03C0                         l75 03E2                         l67 03C6  
                       l68 03C7                         l92 03A5                         l77 03E3  
                       l69 03CD                         l95 04DA                         l89 049B  
                       _t1 004E                         _t2 004D                         fsr 0004  
      ___wmul@multiplicand 0075                        l101 0360                        l123 0475  
                      l128 0283                        l253 00F7                        l270 04C0  
                      l264 019F                        l540 031A                        l268 04A8  
                      l550 041F                        l721 0506                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RE1 0049                        _RD4 0044                        _RE2 004A  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _PR2 0092                        u620 04FD                        _ISR 0420  
                      u621 04FC                        u630 0503                        u631 0502  
                      u640 04A2                        u641 04A1                        u670 04BC  
                      u671 04BB                        u655 04A9                        u665 04B0  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1201 04FD                       l1211 049E                       l1203 0503  
                     l1213 04A2                       l1205 0505                       l1311 0457  
                     l1215 04AF                       l1321 046C                       l1313 0458  
                     l1217 04B6                       l1209 049C                       l1323 046F  
                     l1315 0459                       l1307 044F                       l1219 04BC  
                     l1325 0471                       l1317 045E                       l1309 0453  
                     l1319 045F                       l1611 03FA                       l1603 03E4  
                     l1541 03AB                       l1613 03FE                       l1605 03EC  
                     l1621 041B                       l1197 04F6                       l1551 03D2  
                     l1543 03B6                       l1631 0483                       l1615 0408  
                     l1607 03EF                       l1199 04F7                       l1711 00EB  
                     l1703 00BF                       l1553 03D9                       l1545 03BD  
                     l1561 04E5                       l1641 0367                       l1633 048A  
                     l1617 040E                       l1609 03F6                       l1721 0118  
                     l1713 00F1                       l1555 03E0                       l1547 03C4  
                     l1539 03A7                       l1563 04E8                       l1643 0370  
                     l1635 0490                       l1627 0479                       l1571 04CB  
                     l1651 0320                       l1619 0415                       l1731 013C  
                     l1723 011F                       l1715 0102                       l1707 00DB  
                     l1811 0279                       l1549 03CB                       l1565 04F1  
                     l1557 04DC                       l1645 037F                       l1637 0495  
                     l1629 047E                       l1573 04CE                       l1653 033C  
                     l1581 02DF                       l1741 0180                       l1733 0140  
                     l1725 0123                       l1717 010E                       l1709 00E5  
                     l1661 001B                       l1821 02D0                       l1813 028B  
                     l1559 04DF                       l1647 0385                       l1639 0361  
                     l1575 04D7                       l1567 04C2                       l1655 0344  
                     l1591 0302                       l1583 02E2                       l1735 0145  
                     l1727 012F                       l1719 0112                       l1671 0035  
                     l1663 0020                       l1743 0189                       l1815 0294  
                     l1569 04C5                       l1649 031B                       l1593 0308  
                     l1585 02E9                       l1577 02D5                       l1737 0175  
                     l1729 0135                       l1745 019B                       l1681 0075  
                     l1673 0045                       l1665 0026                       l1817 02BF  
                     l1595 0309                       l1587 02ED                       l1579 02D9  
                     l1739 017C                       l1691 00B0                       l1843 0099  
                     l1675 0049                       l1667 002D                       l1819 02CA  
                     l1597 0310                       l1589 02F1                       l1693 00B4  
                     l1677 005E                       l1685 0085                       l1669 0032  
                     l1599 0316                       l1695 00B8                       l1687 00A4  
                     l1679 0071                       l1697 00BD                       l1689 00AC  
                     STR_1 022E                       STR_2 026F                       STR_3 024B  
                     STR_4 0258                       STR_5 021A                       STR_6 023E  
                     STR_7 0264                       u1100 03C4                       u1101 03C3  
                     u1110 03CB                       u1111 03CA                       u1120 03D2  
                     u1121 03D1                       u1130 03D9                       u1210 0316  
                     u1131 03D8                       u1211 0315                       u1140 03E0  
                     u1300 032A                       u1220 03EC                       u1141 03DF  
                     u1205 030A                       u1221 03EB                       u1070 03AB  
                     u1310 034E                       u1150 02DF                       u1071 03AA  
                     u1151 02DE                       u1080 03B6                       u1320 0360  
                     u1240 03FE                       u1400 00F1                       u1081 03B5  
                     u1321 035F                       u1241 03FD                       u1401 00F0  
                     u1090 03BD                       u1170 02F1                       u1250 0408  
                     u1410 0102                       u1330 0026                       u1091 03BC  
                     u1171 02F0                       u1251 0407                       u1235 03F0  
                     u1411 0101                       u1331 0025                       u1420 0118  
                     u1340 0045                       u1165 02E3                       u1421 0117  
                     u1341 0044                       u1190 0302                       u1270 041B  
                     u1430 012F                       u1350 0085                       u1191 0301  
                     u1271 041A                       u1255 0404                       u1431 012E  
                     u1415 00FE                       u1351 0084                       u1280 047E  
                     u1440 0135                       u1360 00B4                       u1281 047D  
                     u1185 02F2                       u1265 040F                       u1441 0134  
                     u1361 00B3                       u1290 0490                       u1450 0189  
                     u1370 00DA                       u1291 048F                       u1195 02FE  
                     u1451 0188                       u1371 00D9                       u1507 02C5  
                     u1460 019B                       u1380 00E5                       u1517 04D2  
                     u1461 019A                       u1381 00E4                       u1390 00EB  
                     u1527 036B                       u1391 00EA                       u1375 00D6  
                     u1537 037A                       u1490 02D0                       u1547 0389  
                     u1491 02CF                       u1557 04EC                       _PIE1 008C  
                     _TMR2 0011          ?_Lcd_Write_String 0077                       _main 0279  
                     _lmao 007A                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 04F5                      ??_ISR 0070  
                    ?_main 0070                      _ANSEL 0188                      _T2CON 0012  
          __end_of___lwdiv 031B                      i1l143 0448            __end_of___lwmod 0420  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
          __end_of_dpowers 021A            __end_of_isdigit 0507                      _setup 044F  
                    main@s 003D                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 01A0           __end_of_Lcd_Init 03A6  
         __end_of_Lcd_Port 03E4            __initialization 000F               __end_of_main 02D5  
                   ??_main 0038                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     ?_setup 0070                     _ANSELH 0189  
                   u103_20 0426                     u103_21 0425                     i1l1501 0435  
                   i1l1511 0442                     i1l1503 0436                     u104_20 042B  
                   i1l1513 0444                     i1l1505 043A                     u104_21 042A  
                   i1l1515 0446                     i1l1507 043F                     i1l1509 0441  
                   u105_20 043A                     u105_21 0439                     i1l1491 0420  
                   i1l1493 0426                     i1l1495 042B                     u106_20 043F  
                   u106_21 043E                     i1l1497 042F                     i1l1499 0431  
                   _INTCON 000B                  ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 001A  
                   ___wmul 049C                  ??___lwdiv 0077                  ??___lwmod 0078  
                ??_isdigit 0073                     saved_w 007E                  ??_sprintf 002C  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077    __end_of__initialization 0014  
           __pcstackCOMMON 0070              __end_of_setup 0476             _Lcd_Set_Cursor 0476  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070               sprintf@width 0035  
                  ??_setup 0073                 __pbssBANK0 004D                 __pmaintext 0279  
                  ?___wmul 0073                 __pintentry 0004  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 049C                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 0200             _Lcd_Write_Char 04C1                    _Lcd_Cmd 04DB  
          __size_of___wmul 0025                    ___lwdiv 02D5                    ___lwmod 03E4  
          ?_Lcd_Set_Cursor 0077                    __ptext1 0018                    __ptext2 04F5  
                  __ptext3 049C                    __ptext4 03E4                    __ptext5 02D5  
                  __ptext6 044F                    __ptext7 031B                    __ptext8 04C1  
                  __ptext9 0476               __size_of_ISR 002F                    _dpowers 0210  
                  _isdigit 04F5                    _sprintf 0018     __end_of_Lcd_Write_Char 04DB  
     end_of_initialization 0014                  Lcd_Port@a 0073            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023             __end_of___wmul 04C1  
         _Lcd_Write_String 031B        start_initialization 000F                __end_of_ISR 044F  
        __size_of_Lcd_Init 0045          __size_of_Lcd_Port 003E                   ??___wmul 0077  
          Lcd_Write_Char@a 0076                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 0031  
              sprintf@prec 0030           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0078  
                 ?___lwdiv 0073                   ?___lwmod 0023                  __pstrings 0200  
                 ?_isdigit 0070           ___lwdiv@quotient 0021                   ?_sprintf 0027  
           __size_of_setup 0027          interrupt_function 0004             ___wmul@product 0077  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 020F          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 0361                   _Lcd_Port 03A6   __end_of_Lcd_Write_String 0361  
         __size_of_Lcd_Cmd 001A           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0210                _isdigit$667 0073                 sprintf@val 0032  
         __size_of_isdigit 0012            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 0361                   __ptext11 04DB                   __ptext12 03A6  
                 __ptext13 0420           __size_of_sprintf 0188              __size_of_main 005C  
                 isdigit@c 0074                   intlevel1 0000                  sprintf@ap 002F  
                sprintf@sp 0034           ___lwmod@dividend 0025                  stringcode 020A  
       Lcd_Set_Cursor@temp 0021                   sprintf@c 0037                   sprintf@f 0027  
          ___lwmod@divisor 0023            ___lwmod@counter 0079                   stringdir 020A  
                 stringtab 0200  
