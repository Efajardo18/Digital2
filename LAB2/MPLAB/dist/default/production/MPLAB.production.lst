

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 01:19:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0006                     _PORTBbits	set	6
   206  000B                     _INTCONbits	set	11
   207  001E                     _ADRESH	set	30
   208  000C                     _PIR1bits	set	12
   209  0007                     _PORTCbits	set	7
   210  001F                     _ADCON0bits	set	31
   211  0012                     _T2CON	set	18
   212  001F                     _ADCON0	set	31
   213  000B                     _INTCON	set	11
   214  0007                     _PORTC	set	7
   215  0006                     _PORTB	set	6
   216  0005                     _PORTA	set	5
   217  0008                     _PORTD	set	8
   218  009F                     _ADCON1	set	159
   219  0096                     _IOCB	set	150
   220  0092                     _PR2	set	146
   221  008C                     _PIE1	set	140
   222  0088                     _TRISD	set	136
   223  0087                     _TRISC	set	135
   224  0086                     _TRISB	set	134
   225  0085                     _TRISA	set	133
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	cinit
   230  000F                     start_initialization:	
   231                           ; #config settings
   232                           
   233  000F                     __initialization:
   234                           
   235                           ; Clear objects allocated to COMMON
   236  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   237  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   239  0012                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242  0012                     __end_of__initialization:
   243  0012  0183               	clrf	3
   244  0013  120A  118A  28CB   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247  0078                     __pbssCOMMON:
   248  0078                     _GARY2:
   249  0078                     	ds	1
   250  0079                     _GARY1:
   251  0079                     	ds	1
   252  007A                     _xd:
   253  007A                     	ds	1
   254                           
   255                           	psect	cstackCOMMON
   256  0070                     __pcstackCOMMON:
   257  0070                     ?_tabla:
   258  0070                     ?_setup:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_main:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_ISR:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??_ISR:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272  0070                     	ds	3
   273  0073                     ??_tabla:
   274  0073                     ??_setup:	
   275                           ; 1 bytes @ 0x3
   276                           
   277                           
   278                           ; 1 bytes @ 0x3
   279  0073                     	ds	2
   280  0075                     tabla@datos:
   281                           
   282                           ; 1 bytes @ 0x5
   283  0075                     	ds	1
   284  0076                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x6
   287  0076                     	ds	2
   288                           
   289                           	psect	maintext
   290  00CB                     __pmaintext:	
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 62 in file "newmain.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          2       0       0       0       0
   313 ;;      Totals:         2       0       0       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels required when called:    2
   316 ;; This function calls:
   317 ;;		_setup
   318 ;;		_tabla
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           
   325                           ;psect for function _main
   326  00CB                     _main:
   327  00CB                     l766:	
   328                           ;incstack = 0
   329                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   330                           
   331                           
   332                           ;newmain.c: 63:     setup();
   333  00CB  120A  118A  2100  120A  118A  	fcall	_setup
   334  00D0                     l768:
   335                           
   336                           ;newmain.c: 64:     ADCON0bits.GO_DONE =1;
   337  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   338  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   339  00D2  149F               	bsf	31,1	;volatile
   340  00D3                     l770:
   341                           
   342                           ;newmain.c: 66:         if (PORTCbits.RC2==1){
   343  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   344  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   345  00D5  1D07               	btfss	7,2	;volatile
   346  00D6  28D8               	goto	u11
   347  00D7  28D9               	goto	u10
   348  00D8                     u11:
   349  00D8  28E4               	goto	l776
   350  00D9                     u10:
   351  00D9                     l772:
   352                           
   353                           ;newmain.c: 67:             GARY1=xd&0b00001111;
   354  00D9  087A               	movf	_xd,w
   355  00DA  390F               	andlw	15
   356  00DB  00F6               	movwf	??_main
   357  00DC  0876               	movf	??_main,w
   358  00DD  00F9               	movwf	_GARY1
   359  00DE                     l774:
   360                           
   361                           ;newmain.c: 68:             tabla(GARY1);
   362  00DE  0879               	movf	_GARY1,w
   363  00DF  120A  118A  2016  120A  118A  	fcall	_tabla
   364  00E4                     l776:
   365                           
   366                           ;newmain.c: 70:         if (PORTCbits.RC3==1){
   367  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   368  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   369  00E6  1D87               	btfss	7,3	;volatile
   370  00E7  28E9               	goto	u21
   371  00E8  28EA               	goto	u20
   372  00E9                     u21:
   373  00E9  28D3               	goto	l770
   374  00EA                     u20:
   375  00EA                     l778:
   376                           
   377                           ;newmain.c: 71:             GARY2=xd>>4;
   378  00EA  087A               	movf	_xd,w
   379  00EB  00F6               	movwf	??_main
   380  00EC  3004               	movlw	4
   381  00ED                     u35:
   382  00ED  1003               	clrc
   383  00EE  0CF6               	rrf	??_main,f
   384  00EF  3EFF               	addlw	-1
   385  00F0  1D03               	skipz
   386  00F1  28ED               	goto	u35
   387  00F2  0876               	movf	??_main,w
   388  00F3  00F7               	movwf	??_main+1
   389  00F4  0877               	movf	??_main+1,w
   390  00F5  00F8               	movwf	_GARY2
   391  00F6                     l780:
   392                           
   393                           ;newmain.c: 72:             tabla(GARY2);
   394  00F6  0878               	movf	_GARY2,w
   395  00F7  120A  118A  2016  120A  118A  	fcall	_tabla
   396  00FC  28D3               	goto	l770
   397  00FD  120A  118A  280C   	ljmp	start
   398  0100                     __end_of_main:
   399                           
   400                           	psect	text1
   401  0016                     __ptext1:	
   402 ;; *************** function _tabla *****************
   403 ;; Defined at:
   404 ;;		line 8 in file "./tablon.h"
   405 ;; Parameters:    Size  Location     Type
   406 ;;  datos           1    wreg     unsigned char 
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  datos           1    5[COMMON] unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         1       0       0       0       0
   420 ;;      Temps:          2       0       0       0       0
   421 ;;      Totals:         3       0       0       0       0
   422 ;;Total ram usage:        3 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _tabla
   434  0016                     _tabla:
   435                           
   436                           ;incstack = 0
   437                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   438                           ;tabla@datos stored from wreg
   439  0016  00F5               	movwf	tabla@datos
   440  0017                     l690:
   441                           
   442                           ;./tablon.h: 9:     switch (datos) {
   443  0017  2859               	goto	l726
   444  0018                     l692:
   445                           
   446                           ;./tablon.h: 11:             PORTD= 0b00111111;
   447  0018  303F               	movlw	63
   448  0019  1283               	bcf	3,5	;RP0=0, select bank0
   449  001A  1303               	bcf	3,6	;RP1=0, select bank0
   450  001B  0088               	movwf	8	;volatile
   451                           
   452                           ;./tablon.h: 12:             break;
   453  001C  2893               	goto	l67
   454  001D                     l694:
   455                           
   456                           ;./tablon.h: 14:             PORTD= 0b00000110;
   457  001D  3006               	movlw	6
   458  001E  1283               	bcf	3,5	;RP0=0, select bank0
   459  001F  1303               	bcf	3,6	;RP1=0, select bank0
   460  0020  0088               	movwf	8	;volatile
   461                           
   462                           ;./tablon.h: 15:             break;
   463  0021  2893               	goto	l67
   464  0022                     l696:
   465                           
   466                           ;./tablon.h: 17:             PORTD= 0b01011011;
   467  0022  305B               	movlw	91
   468  0023  1283               	bcf	3,5	;RP0=0, select bank0
   469  0024  1303               	bcf	3,6	;RP1=0, select bank0
   470  0025  0088               	movwf	8	;volatile
   471                           
   472                           ;./tablon.h: 18:             break;
   473  0026  2893               	goto	l67
   474  0027                     l698:
   475                           
   476                           ;./tablon.h: 20:             PORTD= 0b01001111;
   477  0027  304F               	movlw	79
   478  0028  1283               	bcf	3,5	;RP0=0, select bank0
   479  0029  1303               	bcf	3,6	;RP1=0, select bank0
   480  002A  0088               	movwf	8	;volatile
   481                           
   482                           ;./tablon.h: 21:             break;
   483  002B  2893               	goto	l67
   484  002C                     l700:
   485                           
   486                           ;./tablon.h: 23:             PORTD= 0b01100110;
   487  002C  3066               	movlw	102
   488  002D  1283               	bcf	3,5	;RP0=0, select bank0
   489  002E  1303               	bcf	3,6	;RP1=0, select bank0
   490  002F  0088               	movwf	8	;volatile
   491                           
   492                           ;./tablon.h: 24:             break;
   493  0030  2893               	goto	l67
   494  0031                     l702:
   495                           
   496                           ;./tablon.h: 26:             PORTD= 0b01101101;
   497  0031  306D               	movlw	109
   498  0032  1283               	bcf	3,5	;RP0=0, select bank0
   499  0033  1303               	bcf	3,6	;RP1=0, select bank0
   500  0034  0088               	movwf	8	;volatile
   501                           
   502                           ;./tablon.h: 27:             break;
   503  0035  2893               	goto	l67
   504  0036                     l704:
   505                           
   506                           ;./tablon.h: 29:             PORTD= 0b01111101;
   507  0036  307D               	movlw	125
   508  0037  1283               	bcf	3,5	;RP0=0, select bank0
   509  0038  1303               	bcf	3,6	;RP1=0, select bank0
   510  0039  0088               	movwf	8	;volatile
   511                           
   512                           ;./tablon.h: 30:             break;
   513  003A  2893               	goto	l67
   514  003B                     l708:
   515                           
   516                           ;./tablon.h: 35:             PORTD= 0b01111111;
   517  003B  307F               	movlw	127
   518  003C  1283               	bcf	3,5	;RP0=0, select bank0
   519  003D  1303               	bcf	3,6	;RP1=0, select bank0
   520  003E  0088               	movwf	8	;volatile
   521                           
   522                           ;./tablon.h: 36:             break;
   523  003F  2893               	goto	l67
   524  0040                     l710:
   525                           
   526                           ;./tablon.h: 38:             PORTD= 0b01101111;
   527  0040  306F               	movlw	111
   528  0041  1283               	bcf	3,5	;RP0=0, select bank0
   529  0042  1303               	bcf	3,6	;RP1=0, select bank0
   530  0043  0088               	movwf	8	;volatile
   531                           
   532                           ;./tablon.h: 39:             break;
   533  0044  2893               	goto	l67
   534  0045                     l712:
   535                           
   536                           ;./tablon.h: 41:             PORTD= 0b01110111;
   537  0045  3077               	movlw	119
   538  0046  1283               	bcf	3,5	;RP0=0, select bank0
   539  0047  1303               	bcf	3,6	;RP1=0, select bank0
   540  0048  0088               	movwf	8	;volatile
   541                           
   542                           ;./tablon.h: 42:             break;
   543  0049  2893               	goto	l67
   544  004A                     l716:
   545                           
   546                           ;./tablon.h: 47:             PORTD= 0b00111001;
   547  004A  3039               	movlw	57
   548  004B  1283               	bcf	3,5	;RP0=0, select bank0
   549  004C  1303               	bcf	3,6	;RP1=0, select bank0
   550  004D  0088               	movwf	8	;volatile
   551                           
   552                           ;./tablon.h: 48:             break;
   553  004E  2893               	goto	l67
   554  004F                     l720:
   555                           
   556                           ;./tablon.h: 53:             PORTD= 0b01111001;
   557  004F  3079               	movlw	121
   558  0050  1283               	bcf	3,5	;RP0=0, select bank0
   559  0051  1303               	bcf	3,6	;RP1=0, select bank0
   560  0052  0088               	movwf	8	;volatile
   561                           
   562                           ;./tablon.h: 54:             break;
   563  0053  2893               	goto	l67
   564  0054                     l722:
   565                           
   566                           ;./tablon.h: 56:             PORTD= 0b01110001;
   567  0054  3071               	movlw	113
   568  0055  1283               	bcf	3,5	;RP0=0, select bank0
   569  0056  1303               	bcf	3,6	;RP1=0, select bank0
   570  0057  0088               	movwf	8	;volatile
   571                           
   572                           ;./tablon.h: 57:             break;
   573  0058  2893               	goto	l67
   574  0059                     l726:
   575  0059  0875               	movf	tabla@datos,w
   576  005A  00F3               	movwf	??_tabla
   577  005B  01F4               	clrf	??_tabla+1
   578                           
   579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   580                           ; Switch size 1, requested type "simple"
   581                           ; Number of cases is 1, Range of values is 0 to 0
   582                           ; switch strategies available:
   583                           ; Name         Instructions Cycles
   584                           ; simple_byte            4     3 (average)
   585                           ; direct_byte           11     8 (fixed)
   586                           ; jumptable            260     6 (fixed)
   587                           ;	Chosen strategy is simple_byte
   588  005C  0874               	movf	??_tabla+1,w
   589  005D  3A00               	xorlw	0	; case 0
   590  005E  1903               	skipnz
   591  005F  2861               	goto	l828
   592  0060  2893               	goto	l67
   593  0061                     l828:
   594                           
   595                           ; Switch size 1, requested type "simple"
   596                           ; Number of cases is 16, Range of values is 0 to 15
   597                           ; switch strategies available:
   598                           ; Name         Instructions Cycles
   599                           ; simple_byte           49    25 (average)
   600                           ; direct_byte           56     8 (fixed)
   601                           ; jumptable            260     6 (fixed)
   602                           ;	Chosen strategy is simple_byte
   603  0061  0873               	movf	??_tabla,w
   604  0062  3A00               	xorlw	0	; case 0
   605  0063  1903               	skipnz
   606  0064  2818               	goto	l692
   607  0065  3A01               	xorlw	1	; case 1
   608  0066  1903               	skipnz
   609  0067  281D               	goto	l694
   610  0068  3A03               	xorlw	3	; case 2
   611  0069  1903               	skipnz
   612  006A  2822               	goto	l696
   613  006B  3A01               	xorlw	1	; case 3
   614  006C  1903               	skipnz
   615  006D  2827               	goto	l698
   616  006E  3A07               	xorlw	7	; case 4
   617  006F  1903               	skipnz
   618  0070  282C               	goto	l700
   619  0071  3A01               	xorlw	1	; case 5
   620  0072  1903               	skipnz
   621  0073  2831               	goto	l702
   622  0074  3A03               	xorlw	3	; case 6
   623  0075  1903               	skipnz
   624  0076  2836               	goto	l704
   625  0077  3A01               	xorlw	1	; case 7
   626  0078  1903               	skipnz
   627  0079  2831               	goto	l702
   628  007A  3A0F               	xorlw	15	; case 8
   629  007B  1903               	skipnz
   630  007C  283B               	goto	l708
   631  007D  3A01               	xorlw	1	; case 9
   632  007E  1903               	skipnz
   633  007F  2840               	goto	l710
   634  0080  3A03               	xorlw	3	; case 10
   635  0081  1903               	skipnz
   636  0082  2845               	goto	l712
   637  0083  3A01               	xorlw	1	; case 11
   638  0084  1903               	skipnz
   639  0085  283B               	goto	l708
   640  0086  3A07               	xorlw	7	; case 12
   641  0087  1903               	skipnz
   642  0088  284A               	goto	l716
   643  0089  3A01               	xorlw	1	; case 13
   644  008A  1903               	skipnz
   645  008B  2818               	goto	l692
   646  008C  3A03               	xorlw	3	; case 14
   647  008D  1903               	skipnz
   648  008E  284F               	goto	l720
   649  008F  3A01               	xorlw	1	; case 15
   650  0090  1903               	skipnz
   651  0091  2854               	goto	l722
   652  0092  2893               	goto	l67
   653  0093                     l67:
   654  0093  0008               	return
   655  0094                     __end_of_tabla:
   656                           
   657                           	psect	text2
   658  0100                     __ptext2:	
   659 ;; *************** function _setup *****************
   660 ;; Defined at:
   661 ;;		line 40 in file "newmain.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _setup
   691  0100                     _setup:
   692  0100                     l732:	
   693                           ;incstack = 0
   694                           ; Regs used in _setup: [wreg+status,2]
   695                           
   696                           
   697                           ;newmain.c: 41:     xd = 0;
   698  0100  01FA               	clrf	_xd
   699                           
   700                           ;newmain.c: 42:     TRISA = 0b00000000;
   701  0101  1683               	bsf	3,5	;RP0=1, select bank1
   702  0102  1303               	bcf	3,6	;RP1=0, select bank1
   703  0103  0185               	clrf	5	;volatile
   704  0104                     l734:
   705                           
   706                           ;newmain.c: 43:     TRISB = 0b00001011;
   707  0104  300B               	movlw	11
   708  0105  0086               	movwf	6	;volatile
   709  0106                     l736:
   710                           
   711                           ;newmain.c: 44:     TRISC = 0b00000000;
   712  0106  0187               	clrf	7	;volatile
   713  0107                     l738:
   714                           
   715                           ;newmain.c: 45:     TRISD = 0b00000000;
   716  0107  0188               	clrf	8	;volatile
   717  0108                     l740:
   718                           
   719                           ;newmain.c: 46:     ANSEL = 0b00000000;
   720  0108  1683               	bsf	3,5	;RP0=1, select bank3
   721  0109  1703               	bsf	3,6	;RP1=1, select bank3
   722  010A  0188               	clrf	8	;volatile
   723                           
   724                           ;newmain.c: 47:     ANSELH = 0b00000010;
   725  010B  3002               	movlw	2
   726  010C  0089               	movwf	9	;volatile
   727  010D                     l742:
   728                           
   729                           ;newmain.c: 48:     PORTA = 0;
   730  010D  1283               	bcf	3,5	;RP0=0, select bank0
   731  010E  1303               	bcf	3,6	;RP1=0, select bank0
   732  010F  0185               	clrf	5	;volatile
   733  0110                     l744:
   734                           
   735                           ;newmain.c: 49:     PORTB = 0;
   736  0110  0186               	clrf	6	;volatile
   737  0111                     l746:
   738                           
   739                           ;newmain.c: 50:     PORTC = 0;
   740  0111  0187               	clrf	7	;volatile
   741  0112                     l748:
   742                           
   743                           ;newmain.c: 51:     PORTD = 255;
   744  0112  30FF               	movlw	255
   745  0113  0088               	movwf	8	;volatile
   746  0114                     l750:
   747                           
   748                           ;newmain.c: 52:     INTCON = 0b11001000;
   749  0114  30C8               	movlw	200
   750  0115  008B               	movwf	11	;volatile
   751  0116                     l752:
   752                           
   753                           ;newmain.c: 53:     PIE1 = 0b01000010;
   754  0116  3042               	movlw	66
   755  0117  1683               	bsf	3,5	;RP0=1, select bank1
   756  0118  1303               	bcf	3,6	;RP1=0, select bank1
   757  0119  008C               	movwf	12	;volatile
   758  011A                     l754:
   759                           
   760                           ;newmain.c: 54:     PR2 = 0b11111111;
   761  011A  30FF               	movlw	255
   762  011B  0092               	movwf	18	;volatile
   763  011C                     l756:
   764                           
   765                           ;newmain.c: 55:     IOCB = 0b00000011;
   766  011C  3003               	movlw	3
   767  011D  0096               	movwf	22	;volatile
   768  011E                     l758:
   769                           
   770                           ;newmain.c: 56:     ADCON1 = 0b10000000;
   771  011E  3080               	movlw	128
   772  011F  009F               	movwf	31	;volatile
   773  0120                     l760:
   774                           
   775                           ;newmain.c: 57:     ADCON0 = 0b00100101;
   776  0120  3025               	movlw	37
   777  0121  1283               	bcf	3,5	;RP0=0, select bank0
   778  0122  1303               	bcf	3,6	;RP1=0, select bank0
   779  0123  009F               	movwf	31	;volatile
   780  0124                     l762:
   781                           
   782                           ;newmain.c: 58:     T2CON = 0b00000110;
   783  0124  3006               	movlw	6
   784  0125  0092               	movwf	18	;volatile
   785  0126                     l76:
   786  0126  0008               	return
   787  0127                     __end_of_setup:
   788                           
   789                           	psect	text3
   790  0094                     __ptext3:	
   791 ;; *************** function _ISR *****************
   792 ;; Defined at:
   793 ;;		line 78 in file "newmain.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          3       0       0       0       0
   810 ;;      Totals:         3       0       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		Interrupt level 1
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _ISR
   822  0094                     _ISR:
   823  0094                     i1l782:
   824                           
   825                           ;newmain.c: 79:     if (PIR1bits.ADIF==1){
   826  0094  1283               	bcf	3,5	;RP0=0, select bank0
   827  0095  1303               	bcf	3,6	;RP1=0, select bank0
   828  0096  1F0C               	btfss	12,6	;volatile
   829  0097  2899               	goto	u4_21
   830  0098  289A               	goto	u4_20
   831  0099                     u4_21:
   832  0099  28A1               	goto	i1l788
   833  009A                     u4_20:
   834  009A                     i1l784:
   835                           
   836                           ;newmain.c: 80:         xd=ADRESH;
   837  009A  081E               	movf	30,w	;volatile
   838  009B  00F0               	movwf	??_ISR
   839  009C  0870               	movf	??_ISR,w
   840  009D  00FA               	movwf	_xd
   841  009E                     i1l786:
   842                           
   843                           ;newmain.c: 81:         PIR1bits.ADIF=0;
   844  009E  130C               	bcf	12,6	;volatile
   845                           
   846                           ;newmain.c: 82:         ADCON0=0b00100111;
   847  009F  3027               	movlw	39
   848  00A0  009F               	movwf	31	;volatile
   849  00A1                     i1l788:
   850                           
   851                           ;newmain.c: 84:     if (INTCONbits.RBIF==1){
   852  00A1  1C0B               	btfss	11,0	;volatile
   853  00A2  28A4               	goto	u5_21
   854  00A3  28A5               	goto	u5_20
   855  00A4                     u5_21:
   856  00A4  28B5               	goto	i1l802
   857  00A5                     u5_20:
   858  00A5                     i1l790:
   859                           
   860                           ;newmain.c: 85:         if(PORTBbits.RB0==1){
   861  00A5  1C06               	btfss	6,0	;volatile
   862  00A6  28A8               	goto	u6_21
   863  00A7  28A9               	goto	u6_20
   864  00A8                     u6_21:
   865  00A8  28AE               	goto	i1l796
   866  00A9                     u6_20:
   867  00A9                     i1l792:
   868                           
   869                           ;newmain.c: 86:             PORTA++;
   870  00A9  3001               	movlw	1
   871  00AA  00F0               	movwf	??_ISR
   872  00AB  0870               	movf	??_ISR,w
   873  00AC  0785               	addwf	5,f	;volatile
   874  00AD                     i1l794:
   875                           
   876                           ;newmain.c: 87:             INTCONbits.RBIF=0;
   877  00AD  100B               	bcf	11,0	;volatile
   878  00AE                     i1l796:
   879                           
   880                           ;newmain.c: 89:         if(PORTBbits.RB1==1){
   881  00AE  1C86               	btfss	6,1	;volatile
   882  00AF  28B1               	goto	u7_21
   883  00B0  28B2               	goto	u7_20
   884  00B1                     u7_21:
   885  00B1  28B5               	goto	i1l802
   886  00B2                     u7_20:
   887  00B2                     i1l798:
   888                           
   889                           ;newmain.c: 90:             PORTA--;
   890  00B2  3001               	movlw	1
   891  00B3  0285               	subwf	5,f	;volatile
   892  00B4                     i1l800:
   893                           
   894                           ;newmain.c: 91:             INTCONbits.RBIF=0;
   895  00B4  100B               	bcf	11,0	;volatile
   896  00B5                     i1l802:
   897                           
   898                           ;newmain.c: 94:     if (PIR1bits.TMR2IF==1){
   899  00B5  1C8C               	btfss	12,1	;volatile
   900  00B6  28B8               	goto	u8_21
   901  00B7  28B9               	goto	u8_20
   902  00B8                     u8_21:
   903  00B8  28C4               	goto	i1l98
   904  00B9                     u8_20:
   905  00B9                     i1l804:
   906                           
   907                           ;newmain.c: 95:         if(PORTCbits.RC2==1){
   908  00B9  1D07               	btfss	7,2	;volatile
   909  00BA  28BC               	goto	u9_21
   910  00BB  28BD               	goto	u9_20
   911  00BC                     u9_21:
   912  00BC  28C1               	goto	i1l96
   913  00BD                     u9_20:
   914  00BD                     i1l806:
   915                           
   916                           ;newmain.c: 96:             PORTCbits.RC2=0;
   917  00BD  1107               	bcf	7,2	;volatile
   918                           
   919                           ;newmain.c: 97:             PORTCbits.RC3=1;
   920  00BE  1587               	bsf	7,3	;volatile
   921                           
   922                           ;newmain.c: 98:             PIR1bits.TMR2IF=0;
   923  00BF  108C               	bcf	12,1	;volatile
   924                           
   925                           ;newmain.c: 99:         }else{
   926  00C0  28C4               	goto	i1l98
   927  00C1                     i1l96:
   928                           
   929                           ;newmain.c: 100:             PORTCbits.RC3=0;
   930  00C1  1187               	bcf	7,3	;volatile
   931                           
   932                           ;newmain.c: 101:             PORTCbits.RC2=1;
   933  00C2  1507               	bsf	7,2	;volatile
   934                           
   935                           ;newmain.c: 102:             PIR1bits.TMR2IF=0;
   936  00C3  108C               	bcf	12,1	;volatile
   937  00C4                     i1l98:
   938  00C4  0872               	movf	??_ISR+2,w
   939  00C5  008A               	movwf	10
   940  00C6  0E71               	swapf	??_ISR+1,w
   941  00C7  0083               	movwf	3
   942  00C8  0EFE               	swapf	btemp,f
   943  00C9  0E7E               	swapf	btemp,w
   944  00CA  0009               	retfie
   945  00CB                     __end_of_ISR:
   946  007E                     btemp	set	126	;btemp
   947  007E                     wtemp0	set	126
   948                           
   949                           	psect	intentry
   950  0004                     __pintentry:	
   951                           ;incstack = 0
   952                           ; Regs used in _ISR: [wreg+status,2+status,0]
   953                           
   954  0004                     interrupt_function:
   955  007E                     saved_w	set	btemp
   956  0004  00FE               	movwf	btemp
   957  0005  0E03               	swapf	3,w
   958  0006  00F1               	movwf	??_ISR+1
   959  0007  080A               	movf	10,w
   960  0008  00F2               	movwf	??_ISR+2
   961  0009  120A  118A  2894   	ljmp	_ISR
   962                           
   963                           	psect	config
   964                           
   965                           ;Config register CONFIG1 @ 0x2007
   966                           ;	Oscillator Selection bits
   967                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   968                           ;	Watchdog Timer Enable bit
   969                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   970                           ;	Power-up Timer Enable bit
   971                           ;	PWRTE = OFF, PWRT disabled
   972                           ;	RE3/MCLR pin function select bit
   973                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   974                           ;	Code Protection bit
   975                           ;	CP = OFF, Program memory code protection is disabled
   976                           ;	Data Code Protection bit
   977                           ;	CPD = OFF, Data memory code protection is disabled
   978                           ;	Brown Out Reset Selection bits
   979                           ;	BOREN = OFF, BOR disabled
   980                           ;	Internal External Switchover bit
   981                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   982                           ;	Fail-Safe Clock Monitor Enabled bit
   983                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   984                           ;	Low Voltage Programming Enable bit
   985                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   986                           ;	In-Circuit Debugger Mode bit
   987                           ;	DEBUG = 0x1, unprogrammed default
   988  2007                     	org	8199
   989  2007  20D7               	dw	8407
   990                           
   991                           ;Config register CONFIG2 @ 0x2008
   992                           ;	Brown-out Reset Selection bit
   993                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   994                           ;	Flash Program Memory Self Write Enable bits
   995                           ;	WRT = OFF, Write protection off
   996  2008                     	org	8200
   997  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tabla

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              6 COMMON     2     2      0
                              _setup
                              _tabla
 ---------------------------------------------------------------------------------
 (1) _tabla                                                3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _tabla

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 01:19:21 2021

                     l67 0093                       l76 0126                       u10 00D9  
                     u11 00D8                       u20 00EA                       u21 00E9  
                     u35 00ED                       _xd 007A                      l700 002C  
                    l710 0040                      l702 0031                      l720 004F  
                    l712 0045                      l704 0036                      l722 0054  
                    l740 0108                      l732 0100                      l716 004A  
                    l708 003B                      l750 0114                      l742 010D  
                    l734 0104                      l726 0059                      l760 0120  
                    l752 0116                      l744 0110                      l736 0106  
                    l762 0124                      l754 011A                      l746 0111  
                    l738 0107                      l690 0017                      l770 00D3  
                    l756 011C                      l748 0112                      l828 0061  
                    l692 0018                      l780 00F6                      l772 00D9  
                    l758 011E                      l694 001D                      l774 00DE  
                    l766 00CB                      l696 0022                      l776 00E4  
                    l768 00D0                      l698 0027                      l778 00EA  
                    _PR2 0092                      _ISR 0094                     ?_ISR 0070  
                   _IOCB 0096                     _PIE1 008C                     i1l96 00C1  
                   i1l98 00C4                     u4_20 009A                     u4_21 0099  
                   u5_20 00A5                     u5_21 00A4                     u6_20 00A9  
                   u6_21 00A8                     u7_20 00B2                     u7_21 00B1  
                   u8_20 00B9                     u8_21 00B8                     u9_20 00BD  
                   u9_21 00BC                     _main 00CB                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    _GARY1 0079                    _GARY2 0078  
                  _T2CON 0012                    i1l800 00B4                    i1l802 00B5  
                  i1l804 00B9                    i1l806 00BD                    i1l790 00A5  
                  i1l782 0094                    i1l792 00A9                    i1l784 009A  
                  i1l794 00AD                    i1l786 009E                    i1l796 00AE  
                  i1l788 00A1                    i1l798 00B2                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _tabla 0016                    _setup 0100  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0100                   ??_main 0076  
                 _ADCON0 001F                   _ADCON1 009F                   ?_tabla 0070  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_tabla 0094            __end_of_setup 0127  
                ??_tabla 0073                  ??_setup 0073               __pmaintext 00CB  
             __pintentry 0004                  __ptext1 0016                  __ptext2 0100  
                __ptext3 0094             __size_of_ISR 0037     end_of_initialization 0012  
              _PORTBbits 0006                _PORTCbits 0007      start_initialization 000F  
            __end_of_ISR 00CB               tabla@datos 0075              __pbssCOMMON 0078  
              ___latbits 0002           __size_of_tabla 007E           __size_of_setup 0027  
      interrupt_function 0004                 _PIR1bits 000C               _ADCON0bits 001F  
          __size_of_main 0035               _INTCONbits 000B                 intlevel1 0000  
